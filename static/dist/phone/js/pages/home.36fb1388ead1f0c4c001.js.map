{"version":3,"sources":["webpack:///js/pages/home.36fb1388ead1f0c4c001.js","webpack:///./static/src/phone/js/pages/home.js","webpack:///./static/src/phone/js/components-vue/g-img-list.js","webpack:///./static/src/phone/images/home/p-waiting.jpg","webpack:///./static/src/phone/images/home/p-waiting.png","webpack:///./static/src/phone/js/components/g-slide.js","webpack:///./static/src/phone/js/plugs/touch-slide.js","webpack:///./static/src/phone/js/components/g-navigation.js"],"names":["webpackJsonp","33","module","exports","__webpack_require__","window","addEventListener","setTimeout","wrap","data","items","img","width","height","src","href","el","template","34","_vue","obj","__esModule","default","component","36","p","37","38","4","tools","applications","SuperType","TouchSlide","SubType","constructorInherit","superType","parameter","callback","startFun","endFun","config","isShowHref","touchSlide","slideCell","mainCell","titCell","effect","autoPlay","delayTime","interTime","console","log","defaultIndex","switchLoadClass","switchLoad","prototype","moduleDomCreate","this","moduleDom","createElement","style","opts","moduleDomStyle","customAttribute","moduleDomCustomAttribute","attribute","className","innerHTML","renderHeader","renderBody","self","html","forEach","v","i","power","index","5","a","titOnClassName","autoPage","prevCell","nextCell","pageStateCell","pnLoop","Object","toString","call","slice","toLowerCase","document","querySelector","nodeType","str","parEle","split","par","retn","attr","hasOwnProperty","length","push","_retn","r","getElementById","replace","tag","getElementsByTagName","j","cln","search","RegExp","tag2","k","addClass","ele","removeClass","prevBtn","nextBtn","pageState","conBox","twCell","scrollY","conBoxSize","children","navObj","navObjSize","parseInt","loop","oldIndex","inter","timeout","endTimeout","startX","startY","distX","distY","isTouchPad","test","navigator","appVersion","hasTouch","touchStart","touchMove","touchEnd","slideW","parentNode","clientWidth","tempSize","x","appendChild","cloneNode","insertBefore","tmp","_el","replaceChild","cssText","y","doStartFun","doEndFun","orientationChange","translate","dist","speed","webkitTransitionDuration","MozTransitionDuration","msTransitionDuration","OTransitionDuration","transitionDuration","webkitTransform","msTransform","MozTransform","OTransform","doPlay","isTouch","nowIndex","allImage","querySelectorAll","changeImagesSrc","imgSwitchSrc","getAttribute","tagName","backgroundImage","setInterval","z","clearTimeout","tStart","e","undefined","point","touches","pageX","pageY","tMove","tEnd","scale","Math","abs","preventDefault","clearInterval","removeEventListener","6","route","icon","text","isShowMark","markHtml"],"mappings":"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","file":"js/pages/home.36fb1388ead1f0c4c001.js","sourcesContent":["webpackJsonp([2],{\n\n/***/ 33:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nwindow.addEventListener('load', function () {\n    setTimeout(function () {\n        // slide切换\n        (function () {\n            var Slide = __webpack_require__(4);\n            new Slide({\n                wrap: '.page-slide',\n                data: {\n                    items: [{\n                        img: {\n                            width: 0,\n                            height: 0,\n                            src: 'http://img1.imgtn.bdimg.com/it/u=1056872014,4038868309&fm=23&gp=0.jpg'\n                        },\n                        href: ''\n                    }, {\n                        img: {\n                            width: 0,\n                            height: 0,\n                            src: 'http://img3.imgtn.bdimg.com/it/u=1732308780,3782498029&fm=23&gp=0.jpg'\n                        },\n                        href: ''\n                    }, {\n                        img: {\n                            width: 0,\n                            height: 0,\n                            src: 'http://img3.imgtn.bdimg.com/it/u=4027566086,3099254237&fm=23&gp=0.jpg'\n                        },\n                        href: ''\n                    }, {\n                        img: {\n                            width: 0,\n                            height: 0,\n                            src: 'http://img4.imgtn.bdimg.com/it/u=120609946,455952432&fm=23&gp=0.jpg'\n                        },\n                        href: ''\n                    }, {\n                        img: {\n                            width: 0,\n                            height: 0,\n                            src: 'http://img2.imgtn.bdimg.com/it/u=2763208243,961494673&fm=23&gp=0.jpg'\n                        },\n                        href: ''\n                    }]\n                }\n            });\n        })();\n\n        // 导航\n        (function () {\n            var Navigation = __webpack_require__(6);\n            new Navigation({ wrap: '.page-navigation' });\n        })();\n\n        // vue\n        (function () {\n            __webpack_require__(34);\n            var Vue = __webpack_require__(7);\n            new Vue({\n                el: '.page-vue-app',\n                template: '<div class=\"page-vue\">\\n                    <g-picture-list></g-picture-list>\\n                </div>'\n            });\n        })();\n\n        __webpack_require__(38); // 当前页面用到的样式\n        var common = __webpack_require__(3); // 每个页面都要用到的js(一定要放到最底部)\n    }, 0);\n});\n\n/***/ }),\n\n/***/ 34:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _vue = __webpack_require__(7);\n\nvar _vue2 = _interopRequireDefault(_vue);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_vue2.default.component('g-picture-list', {\n    template: '<div class=\"g-picture-list\">\\n        <img class=\"g-lazy-load\" data-src=\"' + __webpack_require__(36) + '\" alt=\"\">\\n        <img class=\"g-lazy-load\" data-src=\"' + __webpack_require__(37) + '\" alt=\"\">\\n    </div>'\n});\n\n/***/ }),\n\n/***/ 36:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"images/p-waiting.d4f6dd4c.jpg\";\n\n/***/ }),\n\n/***/ 37:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"images/p-waiting.054b1f3c.png\";\n\n/***/ }),\n\n/***/ 38:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 4:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar tools = __webpack_require__(1); // 工具方法集合\nvar applications = __webpack_require__(0); // 应用方法集合\nvar SuperType = __webpack_require__(2); // 超类型(子类型继承的对象)\nvar TouchSlide = __webpack_require__(5); // 轮播图插件\n\n// 子类型\nvar SubType = tools.constructorInherit({\n    superType: SuperType,\n    // 默认参数(继承超类型)\n    parameter: {\n        // 回调\n        callback: {\n            startFun: function startFun() {},\n            endFun: function endFun() {}\n        },\n        // 配置\n        config: {\n            isShowHref: true, // 是否有跳转\n            // TouchSlide插件的配置\n            touchSlide: {\n                slideCell: '', // 外部容器,这个值会在底部进行覆盖,因为在这里没办法获取this\n                mainCell: '.g-slide-body', // 切换元素的包裹层对象\n                titCell: '.g-slide-header .g-slide-items', // 导航元素对象\n                effect: 'leftLoop', // 效果'left' 'leftLoop'\n                autoPlay: true, // 自动播放\n                delayTime: 200, // 切换一次的持续时间\n                interTime: 3000, // 多久切换一次\n                startFun: function startFun() {\n                    console.log('此处的函数会被覆盖,请在callback里执行回调');\n                },\n                endFun: function endFun() {\n                    console.log('此处的函数会被覆盖,请在callback里执行回调');\n                },\n                defaultIndex: 0, // 默认的当前位置索引\n                switchLoadClass: '.pre-load', // 预加载的class\n                switchLoad: 'data-src' // 预加载的属性\n            }\n        },\n        // 数据\n        data: {\n            items: [{\n                img: {\n                    width: 0,\n                    height: 0,\n                    src: 'http://img1.imgtn.bdimg.com/it/u=1056872014,4038868309&fm=23&gp=0.jpg'\n                },\n                href: ''\n            }]\n        }\n    }\n});\n\n// 内部模块的创建(覆盖超类型)\nSubType.prototype.moduleDomCreate = function () {\n    this.moduleDom = applications.createElement({\n        style: this.opts.config.moduleDomStyle,\n        customAttribute: this.opts.config.moduleDomCustomAttribute,\n        attribute: {\n            className: 'g-slide',\n            innerHTML: '\\n                ' + this.renderHeader() + '\\n                ' + this.renderBody() + '\\n            '\n        }\n    });\n};\n\nSubType.prototype.renderHeader = function () {\n    var self = this;\n    var html = '';\n    var data = self.opts.data;\n    var className = '';\n    data.items.forEach(function (v, i) {\n        if (i === self.opts.config.touchSlide.defaultIndex) {\n            className = 'on';\n        }\n        html += '<div class=\"g-slide-items ' + className + '\"></div>';\n    });\n    return '<div class=\"g-slide-header\">' + html + '</div>';\n};\n\nSubType.prototype.renderBody = function () {\n    var self = this;\n    var html = '';\n    var data = self.opts.data;\n    data.items.forEach(function (v) {\n        if (self.opts.config.isShowHref) {\n            html += '<a href=\"' + (v.href || 'javascript:;') + '\" class=\"g-slide-items pre-load\" data-src=\"' + v.img.src + '\"></a>';\n        } else {\n            html += '<a class=\"g-slide-items pre-load\" data-src=\"' + v.img.src + '\"></a>';\n        }\n    });\n    return '<div class=\"g-slide-body\">' + html + '</div>';\n};\n\n// 功能(覆盖超类型)\nSubType.prototype.power = function () {\n    var self = this;\n    var callback = self.opts.callback;\n    var config = self.opts.config;\n    var touchSlide = config.touchSlide;\n    touchSlide.slideCell = self.opts.wrap; // 外部容器,必须是id\n    touchSlide.startFun = function (i) {\n        // 因为以下功能在插件本身进行了实现(本人对touch-slide插件进行了小修改),所以这里就注释了\n        // var allImg = self.moduleDom.querySelectorAll('.g-slide-body .g-slide-items');\n        // var nowIndex = ( i + 1);\n        // if (touchSlide.effect == 'left') {\n        //     nowIndex = i;\n        // }\n        // var nowImg = allImg[nowIndex];\n        // var prevImg = allImg[nowIndex - 1];\n        // var nextImg = allImg[nowIndex + 1];\n        // nowImg.style.backgroundImage = `url(${nowImg.dataset.src})`;\n        // prevImg && (prevImg.style.backgroundImage = `url(${prevImg.dataset.src})`);\n        // nextImg && (nextImg.style.backgroundImage = `url(${nextImg.dataset.src})`);\n        callback.startFun({ self: self, index: i });\n    };\n    touchSlide.endFun = function (i) {\n        callback.endFun({ self: self, index: i });\n    };\n    TouchSlide(self.opts.config.touchSlide);\n};\n\nmodule.exports = SubType;\n\n/***/ }),\n\n/***/ 5:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/*!\n * TouchSlide v1.1\n * javascript触屏滑动特效插件，移动端滑动特效，触屏焦点图，触屏Tab切换，触屏多图切换等\n * 详尽信息请看官网：http://www.SuperSlide2.com/TouchSlide/\n *\n * Copyright 2013 大话主席\n *\n * 请尊重原创，保留头部版权\n * 在保留版权的前提下可应用于个人或商业用途\n\n * 1.1 宽度自适应（修复安卓横屏时滑动范围不变的bug）\n */\n\n/*\n * 本人对此文件进行了稍微改动,还请见谅\n * 1.支持传入class和dom节点\n * 2.样式修改成flex布局\n * 3.把一些不规范的语法警告提示修正\n * 4.添加预加载功能pre-load,去掉插件自带的懒加载功能\n * 5.给主体区域的切换每一项加上className\n * */\n\nvar TouchSlide = function TouchSlide(a) {\n    a = a || {};\n    var opts = {\n        slideCell: a.slideCell || \"#touchSlide\", //运行效果主对象，必须用id！，例如 slideCell:\"#touchSlide\"\n        titCell: a.titCell || \".hd li\", // 导航对象，当自动分页设为true时为“导航对象包裹层”\n        mainCell: a.mainCell || \".bd\", // 切换对象包裹层\n        effect: a.effect || \"left\", // 效果，支持 left、leftLoop\n        autoPlay: a.autoPlay || false, // 自动播放\n        delayTime: a.delayTime || 200, // 效果持续时间\n        interTime: a.interTime || 2500, // 自动运行间隔\n        defaultIndex: a.defaultIndex || 0, // 默认的当前位置索引。0是第一个； defaultIndex:1 时，相当于从第2个开始执行\n        titOnClassName: a.titOnClassName || \"on\", // 当前导航对象添加的className\n        autoPage: a.autoPage || false, // 自动分页，当为true时titCell为“导航对象包裹层”\n        prevCell: a.prevCell || \".prev\", // 前一页按钮\n        nextCell: a.nextCell || \".next\", // 后一页按钮\n        pageStateCell: a.pageStateCell || \".pageState\", // 分页状态对象，用于显示分页状态，例如：2/3\n        pnLoop: a.pnLoop == 'undefined ' ? true : a.pnLoop, // 前后按钮点击是否继续执行效果，当为最前/后页是会自动添加“prevStop”/“nextStop”控制样色\n        startFun: a.startFun || null, // 每次切换效果开始时执行函数，用于处理特殊情况或创建更多效果。用法 satrtFun:function(i,c){ }； 其中i为当前分页，c为总页数\n        endFun: a.endFun || null, // 每次切换效果结束时执行函数，用于处理特殊情况或创建更多效果。用法 endFun:function(i,c){ }； 其中i为当前分页，c为总页数\n        switchLoadClass: a.switchLoadClass || '.pre-load', //预加载的class\n        switchLoad: a.switchLoad || 'data-src' //预加载的属性\n    };\n    var slideCell = null;\n    //如果是字符串\n    if (Object.prototype.toString.call(opts.slideCell).slice(8, -1).toLowerCase() == 'string') {\n        slideCell = document.querySelector(opts.slideCell);\n    }\n    //如果是dom节点(一个元素)    原生的\n    if (opts.slideCell.nodeType == 1) {\n        slideCell = opts.slideCell;\n    }\n    /*\n     * 如果是dom集合(一组元素)    HtmlCollection(通过getElementsBy系列获取到的)\n     * 如果是dom集合(一组元素)    NodeList(通过querySelectorAll获取到的)\n     * */\n    if (Object.prototype.toString.call(opts.slideCell).slice(8, -1).toLowerCase() == 'htmlcollection' || Object.prototype.toString.call(opts.slideCell).slice(8, -1).toLowerCase() == 'nodelist') {\n        slideCell = opts.slideCell[0];\n    }\n    if (!slideCell) {\n        return;\n    }\n    //简单模拟jquery选择器\n    var obj = function obj(str, parEle) {\n        str = str.split(\" \");\n        var par = [];\n        parEle = parEle || document;\n        var retn = [parEle];\n        for (var attr in str) {\n            if (str.hasOwnProperty(attr)) {\n                if (str[attr].length != 0) {\n                    par.push(str[attr]);\n                }\n            }\n        }\n        //去掉重复空格\n        for (var i in par) {\n            if (par.hasOwnProperty(i)) {\n                if (retn.length == 0) {\n                    return false;\n                }\n                var _retn = [];\n                for (var r in retn) {\n                    if (retn.hasOwnProperty(r)) {\n                        if (par[i][0] == \"#\") {\n                            _retn.push(document.getElementById(par[i].replace(\"#\", \"\")));\n                        } else if (par[i][0] == \".\") {\n                            var tag = retn[r].getElementsByTagName('*');\n                            for (var j = 0; j < tag.length; j++) {\n                                var cln = tag[j].className;\n                                if (cln && cln.search && cln.search(new RegExp(\"\\\\b\" + par[i].replace(\".\", \"\") + \"\\\\b\")) != -1) {\n                                    _retn.push(tag[j]);\n                                }\n                            }\n                        } else {\n                            var tag2 = retn[r].getElementsByTagName(par[i]);\n                            for (var k = 0; k < tag2.length; k++) {\n                                _retn.push(tag2[k]);\n                            }\n                        }\n                    }\n                }\n                retn = _retn;\n            }\n        }\n        return retn.length == 0 || retn[0] == parEle ? false : retn;\n    };\n    // 创建包裹层\n    var wrap = function wrap(el, v) {\n        var tmp = document.createElement('div');\n        tmp.innerHTML = v;\n        tmp = tmp.children[0];\n        var _el = el.cloneNode(true);\n        tmp.appendChild(_el);\n        el.parentNode.replaceChild(tmp, el);\n        conBox = _el; // 重置conBox\n        return tmp;\n    };\n    // class处理\n    var addClass = function addClass(ele, className) {\n        if (!ele || !className || ele.className && ele.className.search(new RegExp(\"\\\\b\" + className + \"\\\\b\")) != -1) {\n            return;\n        }\n        ele.className += (ele.className ? \" \" : \"\") + className;\n    };\n    var removeClass = function removeClass(ele, className) {\n        if (!ele || !className || ele.className && ele.className.search(new RegExp(\"\\\\b\" + className + \"\\\\b\")) == -1) {\n            return;\n        }\n        ele.className = ele.className.replace(new RegExp(\"\\\\s*\\\\b\" + className + \"\\\\b\", \"g\"), \"\");\n    };\n    //全局对象\n    var effect = opts.effect;\n    var prevBtn = obj(opts.prevCell, slideCell)[0];\n    var nextBtn = obj(opts.nextCell, slideCell)[0];\n    var pageState = obj(opts.pageStateCell)[0];\n    var conBox = obj(opts.mainCell, slideCell)[0]; //内容元素父层对象\n    if (!conBox) {\n        return;\n    }\n    var conBoxSize = conBox.children.length;\n    var navObj = obj(opts.titCell, slideCell); //导航子元素结合\n    var navObjSize = navObj ? navObj.length : conBoxSize;\n    /*字符串转换*/\n    var index = parseInt(opts.defaultIndex);\n    var delayTime = parseInt(opts.delayTime);\n    var interTime = parseInt(opts.interTime);\n    var autoPlay = !(opts.autoPlay == \"false\" || opts.autoPlay == false);\n    var autoPage = !(opts.autoPage == \"false\" || opts.autoPage == false);\n    var loop = !(opts.pnLoop == \"false\" || opts.pnLoop == false);\n    var oldIndex = index;\n    var inter = null; // autoPlay的setInterval\n    var timeout = null; // leftLoop的setTimeout\n    var endTimeout = null; //translate的setTimeout\n    var startX = 0;\n    var startY = 0;\n    var distX = 0;\n    var distY = 0;\n    //var dist = 0; //手指滑动距离\n    var isTouchPad = /hp-tablet/gi.test(navigator.appVersion);\n    var hasTouch = 'ontouchstart' in window && !isTouchPad;\n    var touchStart = hasTouch ? 'touchstart' : 'mousedown';\n    var touchMove = hasTouch ? 'touchmove' : '';\n    var touchEnd = hasTouch ? 'touchend' : 'mouseup';\n    var slideW = conBox.parentNode.clientWidth; // mainCell滑动距离\n    var twCell;\n    var scrollY;\n    var tempSize = conBoxSize;\n    //处理分页\n    if (navObjSize == 0) {\n        navObjSize = conBoxSize;\n    }\n    if (autoPage) {\n        navObjSize = conBoxSize;\n        navObj = navObj[0];\n        navObj.innerHTML = \"\";\n        var str = \"\";\n\n        if (opts.autoPage == true || opts.autoPage == \"true\") {\n            for (var i = 0; i < navObjSize; i++) {\n                str += \"<li>\" + (i + 1) + \"</li>\";\n            }\n        } else {\n            for (var x = 0; x < navObjSize; x++) {\n                str += opts.autoPage.replace(\"$\", x + 1);\n            }\n        }\n        navObj.innerHTML = str;\n        navObj = navObj.children; //重置navObj\n    }\n    if (effect == \"leftLoop\") {\n        tempSize += 2;\n        conBox.appendChild(conBox.children[0].cloneNode(true));\n        conBox.insertBefore(conBox.children[conBoxSize - 1].cloneNode(true), conBox.children[0]);\n    }\n    twCell = wrap(conBox, '<div class=\"tempWrap\" style=\"height:inherit;overflow:hidden; position:relative;\"></div>');\n    conBox.style.cssText = \"display:flex;width:\" + tempSize * slideW + \"px;\" + \"position:relative;overflow:hidden;padding:0;margin:0;\";\n    for (var y = 0; y < tempSize; y++) {\n        conBox.children[y].style.cssText = \"height:inherit;display:flex;align-items: center;justify-content: center;width:\" + slideW + \"px\";\n    }\n    var doStartFun = function doStartFun() {\n        if (typeof opts.startFun == 'function') {\n            opts.startFun(index, navObjSize);\n        }\n    };\n    var doEndFun = function doEndFun() {\n        if (typeof opts.endFun == 'function') {\n            opts.endFun(index, navObjSize);\n        }\n    };\n    //动态设置滑动宽度\n    var orientationChange = function orientationChange() {\n        slideW = twCell.clientWidth;\n        conBox.style.width = tempSize * slideW + \"px\";\n        for (var i = 0; i < tempSize; i++) {\n            conBox.children[i].style.width = slideW + \"px\";\n        }\n        var ind = effect == \"leftLoop\" ? index + 1 : index;\n        translate(-ind * slideW, 0);\n    };\n    window.addEventListener(\"resize\", orientationChange, false);\n    //滑动效果\n    var translate = function translate(dist, speed, ele) {\n        if (!!ele) {\n            ele = ele.style;\n        } else {\n            ele = conBox.style;\n        }\n        ele.webkitTransitionDuration = ele.MozTransitionDuration = ele.msTransitionDuration = ele.OTransitionDuration = ele.transitionDuration = speed + 'ms';\n        ele.webkitTransform = 'translate(' + dist + 'px,0)' + 'translateZ(0)';\n        ele.msTransform = ele.MozTransform = ele.OTransform = 'translateX(' + dist + 'px)';\n    };\n    //效果函数\n    var doPlay = function doPlay(isTouch) {\n        switch (effect) {\n            case \"left\":\n                if (index >= navObjSize) {\n                    index = isTouch ? index - 1 : 0;\n                } else if (index < 0) {\n                    index = isTouch ? 0 : navObjSize - 1;\n                }\n                translate(-index * slideW, delayTime);\n                oldIndex = index;\n                break;\n            case \"leftLoop\":\n                translate(-(index + 1) * slideW, delayTime);\n                if (index == -1) {\n                    timeout = setTimeout(function () {\n                        translate(-navObjSize * slideW, 0);\n                    }, delayTime);\n                    index = navObjSize - 1;\n                } else if (index == navObjSize) {\n                    timeout = setTimeout(function () {\n                        translate(-slideW, 0);\n                    }, delayTime);\n                    index = 0;\n                }\n                oldIndex = index;\n                break;\n\n        }\n        //预加载\n        (function () {\n            var nowIndex = effect == \"leftLoop\" ? index + 1 : index;\n            var allImage = conBox.querySelectorAll(opts.switchLoadClass);\n            var changeImagesSrc = function changeImagesSrc(img) {\n                if (img) {\n                    var imgSwitchSrc = img.getAttribute(opts.switchLoad);\n                    if (!imgSwitchSrc) {\n                        return false;\n                    }\n                    if (img.tagName.toLowerCase() == 'img') {\n                        img.src = imgSwitchSrc;\n                    } else {\n                        img.style.backgroundImage = \"url(\" + imgSwitchSrc + \")\";\n                    }\n                }\n            };\n            if (allImage.length > 0) {\n                changeImagesSrc(allImage[nowIndex]);\n                changeImagesSrc(allImage[nowIndex - 1]);\n                changeImagesSrc(allImage[nowIndex + 1]);\n            }\n        })();\n        doStartFun();\n        endTimeout = setTimeout(function () {\n            doEndFun();\n        }, delayTime);\n        //给按钮区域的切换每一项加上className\n        for (var i = 0; i < navObjSize; i++) {\n            removeClass(navObj[i], opts.titOnClassName);\n            if (i == index) {\n                addClass(navObj[i], opts.titOnClassName);\n            }\n        }\n        /*\n         * 给主体区域的切换每一项加上className\n         * 注:如果想配合className写css3小效果,建议使用effect属性的left值\n         * 否则切换到尾帧和切换到首帧时,视觉上的体验不好\n         * */\n        // (function () {\n        //     var nowJ = effect == \"leftLoop\" ? index + 1 : index;\n        //     for (var j = 0; j < conBox.children.length; j++) {\n        //         removeClass(conBox.children[j], opts.titOnClassName);\n        //         if (j == nowJ) {\n        //             addClass(conBox.children[j], opts.titOnClassName);\n        //         }\n        //     }\n        // })();\n        //loop控制是否继续循环\n        if (loop == false) {\n            removeClass(nextBtn, \"nextStop\");\n            removeClass(prevBtn, \"prevStop\");\n            if (index == 0) {\n                addClass(prevBtn, \"prevStop\");\n            } else if (index == navObjSize - 1) {\n                addClass(nextBtn, \"nextStop\");\n            }\n        }\n        if (pageState) {\n            pageState.innerHTML = \"<span>\" + (index + 1) + \"</span>/\" + navObjSize;\n        }\n    };\n    //初始化执行\n    doPlay();\n    //自动播放\n    if (autoPlay) {\n        inter = setInterval(function () {\n            index++;\n            doPlay();\n        }, interTime);\n    }\n    //点击事件\n    if (navObj) {\n        for (var z = 0; z < navObjSize; z++) {\n            (function () {\n                var j = z;\n                navObj[j].addEventListener('click', function () {\n                    clearTimeout(timeout);\n                    clearTimeout(endTimeout);\n                    index = j;\n                    doPlay();\n                });\n            })();\n        }\n    }\n    if (nextBtn) {\n        nextBtn.addEventListener('click', function () {\n            if (loop == true || index != navObjSize - 1) {\n                clearTimeout(timeout);\n                clearTimeout(endTimeout);\n                index++;\n                doPlay();\n            }\n        });\n    }\n    if (prevBtn) {\n        prevBtn.addEventListener('click', function () {\n            if (loop == true || index != 0) {\n                clearTimeout(timeout);\n                clearTimeout(endTimeout);\n                index--;\n                doPlay();\n            }\n        });\n    }\n    //触摸开始函数\n    var tStart = function tStart(e) {\n        clearTimeout(timeout);\n        clearTimeout(endTimeout);\n        scrollY = undefined;\n        distX = 0;\n        var point = hasTouch ? e.touches[0] : e;\n        startX = point.pageX;\n        startY = point.pageY;\n        //添加“触摸移动”事件监听\n        conBox.addEventListener(touchMove, tMove, false);\n        //添加“触摸结束”事件监听\n        conBox.addEventListener(touchEnd, tEnd, false);\n    };\n    //触摸移动函数\n    var tMove = function tMove(e) {\n        if (hasTouch) {\n            if (e.touches.length > 1 || e.scale && e.scale !== 1) {\n                return;\n            }\n        }\n        //多点或缩放\n        var point = hasTouch ? e.touches[0] : e;\n        distX = point.pageX - startX;\n        distY = point.pageY - startY;\n        if (typeof scrollY == 'undefined') {\n            scrollY = !!(scrollY || Math.abs(distX) < Math.abs(distY));\n        }\n        if (!scrollY) {\n            e.preventDefault();\n            if (autoPlay) {\n                clearInterval(inter);\n            }\n            switch (effect) {\n                case \"left\":\n                    if (index == 0 && distX > 0 || index >= navObjSize - 1 && distX < 0) {\n                        distX = distX * 0.4;\n                    }\n                    translate(-index * slideW + distX, 0);\n                    break;\n                case \"leftLoop\":\n                    translate(-(index + 1) * slideW + distX, 0);\n                    break;\n            }\n        }\n    };\n    //触摸结束函数\n    var tEnd = function tEnd(e) {\n        if (distX == 0) {\n            return;\n        }\n        e.preventDefault();\n        if (!scrollY) {\n            if (Math.abs(distX) > slideW / 10) {\n                distX > 0 ? index-- : index++;\n            }\n            doPlay(true);\n            if (autoPlay) {\n                inter = setInterval(function () {\n                    index++;\n                    doPlay();\n                }, interTime);\n            }\n        }\n\n        conBox.removeEventListener(touchMove, tMove, false);\n        conBox.removeEventListener(touchEnd, tEnd, false);\n    };\n    //添加“触摸开始”事件监听\n    conBox.addEventListener(touchStart, tStart, false);\n};\n\nmodule.exports = TouchSlide;\n\n/***/ }),\n\n/***/ 6:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar tools = __webpack_require__(1); // 工具方法集合\nvar applications = __webpack_require__(0); // 应用方法集合\nvar SuperType = __webpack_require__(2);\n// 超类型(子类型继承的对象)\nvar route = '/phone/';\n\n// 子类型\nvar SubType = tools.constructorInherit({\n    superType: SuperType,\n    // 默认参数(继承超类型)\n    parameter: {\n        // 回调\n        callback: {},\n        // 配置\n        config: {},\n        // 数据\n        data: {\n            items: [{\n                href: route,\n                icon: 'icon-shouye',\n                text: '首页',\n                isShowMark: false\n            }, {\n                href: route + 'dev-globals/',\n                icon: 'icon-kaifa',\n                text: '开发全局',\n                isShowMark: false\n            }, {\n                href: route + 'dev-components/',\n                icon: 'icon-kaifa',\n                text: '开发组件',\n                isShowMark: false\n            }, {\n                href: route + 'dev-words/',\n                icon: 'icon-kaifa',\n                text: '标准词汇',\n                isShowMark: false\n            }, {\n                href: route + 'mine/',\n                icon: 'icon-wode',\n                text: '我的',\n                isShowMark: false\n            }]\n        }\n    }\n});\n\n// 内部模块的创建(覆盖超类型)\nSubType.prototype.moduleDomCreate = function () {\n    var data = this.opts.data;\n    var items = data.items;\n    var html = '';\n    items.forEach(function (v) {\n        var markHtml = '';\n        if (v.isShowMark) {\n            markHtml = '<div class=\"g-navigation-mark\"></div>';\n        }\n        html += '\\n            <a href=\"' + v.href + '\" class=\"g-navigation-item\">\\n                <div class=\"g-navigation-icon iconfont ' + v.icon + '\"></div>\\n                <div class=\"g-navigation-text\">' + v.text + '</div>\\n                ' + markHtml + '\\n            </a>\\n        ';\n    });\n    this.moduleDom = applications.createElement({\n        style: this.opts.config.moduleDomStyle,\n        customAttribute: this.opts.config.moduleDomCustomAttribute,\n        attribute: {\n            className: 'g-navigation',\n            innerHTML: html\n        }\n    });\n};\n\n// 功能(覆盖超类型)\nSubType.prototype.power = function () {\n    // 功能重写待续...\n};\n\nmodule.exports = SubType;\n\n/***/ })\n\n},[33]);\n\n\n// WEBPACK FOOTER //\n// js/pages/home.36fb1388ead1f0c4c001.js","window.addEventListener('load', function () {\n    setTimeout(function () {\n        // slide切换\n        (function () {\n            const Slide = require('../components/g-slide');\n            new Slide({\n                wrap: '.page-slide',\n                data: {\n                    items: [\n                        {\n                            img: {\n                                width: 0,\n                                height: 0,\n                                src: 'http://img1.imgtn.bdimg.com/it/u=1056872014,4038868309&fm=23&gp=0.jpg',\n                            },\n                            href: '',\n                        },\n                        {\n                            img: {\n                                width: 0,\n                                height: 0,\n                                src: 'http://img3.imgtn.bdimg.com/it/u=1732308780,3782498029&fm=23&gp=0.jpg',\n                            },\n                            href: '',\n                        },\n                        {\n                            img: {\n                                width: 0,\n                                height: 0,\n                                src: 'http://img3.imgtn.bdimg.com/it/u=4027566086,3099254237&fm=23&gp=0.jpg',\n                            },\n                            href: '',\n                        },\n                        {\n                            img: {\n                                width: 0,\n                                height: 0,\n                                src: 'http://img4.imgtn.bdimg.com/it/u=120609946,455952432&fm=23&gp=0.jpg',\n                            },\n                            href: '',\n                        },\n                        {\n                            img: {\n                                width: 0,\n                                height: 0,\n                                src: 'http://img2.imgtn.bdimg.com/it/u=2763208243,961494673&fm=23&gp=0.jpg',\n                            },\n                            href: '',\n                        },\n                    ],\n                },\n            });\n        }());\n\n        // 导航\n        (function () {\n            const Navigation = require('../components/g-navigation');\n            new Navigation({wrap: '.page-navigation'});\n        }());\n\n        // vue\n        (function () {\n            require('../components-vue/g-img-list');\n            const Vue = require('vue');\n            new Vue({\n                el: '.page-vue-app',\n                template: `<div class=\"page-vue\">\n                    <g-picture-list></g-picture-list>\n                </div>`,\n            });\n        }());\n\n        require('../../scss/pages/home.scss');// 当前页面用到的样式\n        const common = require('../commons/common');// 每个页面都要用到的js(一定要放到最底部)\n    }, 0);\n});\n\n\n\n// WEBPACK FOOTER //\n// ./static/src/phone/js/pages/home.js","import Vue from 'vue';\n\nVue.component('g-picture-list', {\n    template: `<div class=\"g-picture-list\">\n        <img class=\"g-lazy-load\" data-src=\"${require('../../images/home/p-waiting.jpg')}\" alt=\"\">\n        <img class=\"g-lazy-load\" data-src=\"${require('../../images/home/p-waiting.png')}\" alt=\"\">\n    </div>`,\n});\n\n\n\n// WEBPACK FOOTER //\n// ./static/src/phone/js/components-vue/g-img-list.js","module.exports = __webpack_public_path__ + \"images/p-waiting.d4f6dd4c.jpg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./static/src/phone/images/home/p-waiting.jpg\n// module id = 36\n// module chunks = 2","module.exports = __webpack_public_path__ + \"images/p-waiting.054b1f3c.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./static/src/phone/images/home/p-waiting.png\n// module id = 37\n// module chunks = 2","const tools = require('../utils/tools');// 工具方法集合\nconst applications = require('../utils/applications');// 应用方法集合\nconst SuperType = require('../components/g-super-type');// 超类型(子类型继承的对象)\nconst TouchSlide = require('../plugs/touch-slide');// 轮播图插件\n\n// 子类型\nconst SubType = tools.constructorInherit({\n    superType: SuperType,\n    // 默认参数(继承超类型)\n    parameter: {\n        // 回调\n        callback: {\n            startFun: function () {\n            },\n            endFun: function () {\n            },\n        },\n        // 配置\n        config: {\n            isShowHref: true, // 是否有跳转\n            // TouchSlide插件的配置\n            touchSlide: {\n                slideCell: '', // 外部容器,这个值会在底部进行覆盖,因为在这里没办法获取this\n                mainCell: '.g-slide-body', // 切换元素的包裹层对象\n                titCell: '.g-slide-header .g-slide-items', // 导航元素对象\n                effect: 'leftLoop', // 效果'left' 'leftLoop'\n                autoPlay: true, // 自动播放\n                delayTime: 200, // 切换一次的持续时间\n                interTime: 3000, // 多久切换一次\n                startFun: function () {\n                    console.log('此处的函数会被覆盖,请在callback里执行回调');\n                },\n                endFun: function () {\n                    console.log('此处的函数会被覆盖,请在callback里执行回调');\n                },\n                defaultIndex: 0, // 默认的当前位置索引\n                switchLoadClass: '.pre-load', // 预加载的class\n                switchLoad: 'data-src', // 预加载的属性\n            },\n        },\n        // 数据\n        data: {\n            items: [\n                {\n                    img: {\n                        width: 0,\n                        height: 0,\n                        src: 'http://img1.imgtn.bdimg.com/it/u=1056872014,4038868309&fm=23&gp=0.jpg',\n                    },\n                    href: '',\n                },\n            ],\n        },\n    },\n});\n\n// 内部模块的创建(覆盖超类型)\nSubType.prototype.moduleDomCreate = function () {\n    this.moduleDom = applications.createElement({\n        style: this.opts.config.moduleDomStyle,\n        customAttribute: this.opts.config.moduleDomCustomAttribute,\n        attribute: {\n            className: 'g-slide',\n            innerHTML: `\n                ${this.renderHeader()}\n                ${this.renderBody()}\n            `,\n        },\n    });\n};\n\nSubType.prototype.renderHeader = function () {\n    const self = this;\n    let html = '';\n    const data = self.opts.data;\n    let className = '';\n    data.items.forEach(function (v, i) {\n        if (i === self.opts.config.touchSlide.defaultIndex) {\n            className = 'on';\n        }\n        html += `<div class=\"g-slide-items ${className}\"></div>`;\n    });\n    return `<div class=\"g-slide-header\">${html}</div>`;\n};\n\nSubType.prototype.renderBody = function () {\n    const self = this;\n    let html = '';\n    const data = self.opts.data;\n    data.items.forEach(function (v) {\n        if (self.opts.config.isShowHref) {\n            html += `<a href=\"${v.href || 'javascript:;'}\" class=\"g-slide-items pre-load\" data-src=\"${v.img.src}\"></a>`;\n        } else {\n            html += `<a class=\"g-slide-items pre-load\" data-src=\"${v.img.src}\"></a>`;\n        }\n    });\n    return `<div class=\"g-slide-body\">${html}</div>`;\n};\n\n// 功能(覆盖超类型)\nSubType.prototype.power = function () {\n    const self = this;\n    const callback = self.opts.callback;\n    const config = self.opts.config;\n    const touchSlide = config.touchSlide;\n    touchSlide.slideCell = self.opts.wrap;// 外部容器,必须是id\n    touchSlide.startFun = function (i) {\n        // 因为以下功能在插件本身进行了实现(本人对touch-slide插件进行了小修改),所以这里就注释了\n        // var allImg = self.moduleDom.querySelectorAll('.g-slide-body .g-slide-items');\n        // var nowIndex = ( i + 1);\n        // if (touchSlide.effect == 'left') {\n        //     nowIndex = i;\n        // }\n        // var nowImg = allImg[nowIndex];\n        // var prevImg = allImg[nowIndex - 1];\n        // var nextImg = allImg[nowIndex + 1];\n        // nowImg.style.backgroundImage = `url(${nowImg.dataset.src})`;\n        // prevImg && (prevImg.style.backgroundImage = `url(${prevImg.dataset.src})`);\n        // nextImg && (nextImg.style.backgroundImage = `url(${nextImg.dataset.src})`);\n        callback.startFun({self: self, index: i});\n    };\n    touchSlide.endFun = function (i) {\n        callback.endFun({self: self, index: i});\n    };\n    TouchSlide(self.opts.config.touchSlide);\n};\n\nmodule.exports = SubType;\n\n\n\n// WEBPACK FOOTER //\n// ./static/src/phone/js/components/g-slide.js","/*!\n * TouchSlide v1.1\n * javascript触屏滑动特效插件，移动端滑动特效，触屏焦点图，触屏Tab切换，触屏多图切换等\n * 详尽信息请看官网：http://www.SuperSlide2.com/TouchSlide/\n *\n * Copyright 2013 大话主席\n *\n * 请尊重原创，保留头部版权\n * 在保留版权的前提下可应用于个人或商业用途\n\n * 1.1 宽度自适应（修复安卓横屏时滑动范围不变的bug）\n */\n\n/*\n * 本人对此文件进行了稍微改动,还请见谅\n * 1.支持传入class和dom节点\n * 2.样式修改成flex布局\n * 3.把一些不规范的语法警告提示修正\n * 4.添加预加载功能pre-load,去掉插件自带的懒加载功能\n * 5.给主体区域的切换每一项加上className\n * */\n\nvar TouchSlide = function (a) {\n    a = a || {};\n    var opts = {\n        slideCell: a.slideCell || \"#touchSlide\", //运行效果主对象，必须用id！，例如 slideCell:\"#touchSlide\"\n        titCell: a.titCell || \".hd li\", // 导航对象，当自动分页设为true时为“导航对象包裹层”\n        mainCell: a.mainCell || \".bd\", // 切换对象包裹层\n        effect: a.effect || \"left\", // 效果，支持 left、leftLoop\n        autoPlay: a.autoPlay || false, // 自动播放\n        delayTime: a.delayTime || 200, // 效果持续时间\n        interTime: a.interTime || 2500, // 自动运行间隔\n        defaultIndex: a.defaultIndex || 0, // 默认的当前位置索引。0是第一个； defaultIndex:1 时，相当于从第2个开始执行\n        titOnClassName: a.titOnClassName || \"on\", // 当前导航对象添加的className\n        autoPage: a.autoPage || false, // 自动分页，当为true时titCell为“导航对象包裹层”\n        prevCell: a.prevCell || \".prev\", // 前一页按钮\n        nextCell: a.nextCell || \".next\", // 后一页按钮\n        pageStateCell: a.pageStateCell || \".pageState\", // 分页状态对象，用于显示分页状态，例如：2/3\n        pnLoop: a.pnLoop == 'undefined ' ? true : a.pnLoop, // 前后按钮点击是否继续执行效果，当为最前/后页是会自动添加“prevStop”/“nextStop”控制样色\n        startFun: a.startFun || null, // 每次切换效果开始时执行函数，用于处理特殊情况或创建更多效果。用法 satrtFun:function(i,c){ }； 其中i为当前分页，c为总页数\n        endFun: a.endFun || null, // 每次切换效果结束时执行函数，用于处理特殊情况或创建更多效果。用法 endFun:function(i,c){ }； 其中i为当前分页，c为总页数\n        switchLoadClass: a.switchLoadClass || '.pre-load',//预加载的class\n        switchLoad: a.switchLoad || 'data-src' //预加载的属性\n    };\n    var slideCell = null;\n    //如果是字符串\n    if (Object.prototype.toString.call(opts.slideCell).slice(8, -1).toLowerCase() == 'string') {\n        slideCell = document.querySelector(opts.slideCell);\n    }\n    //如果是dom节点(一个元素)    原生的\n    if (opts.slideCell.nodeType == 1) {\n        slideCell = opts.slideCell;\n    }\n    /*\n     * 如果是dom集合(一组元素)    HtmlCollection(通过getElementsBy系列获取到的)\n     * 如果是dom集合(一组元素)    NodeList(通过querySelectorAll获取到的)\n     * */\n    if (Object.prototype.toString.call(opts.slideCell).slice(8, -1).toLowerCase() == 'htmlcollection' || Object.prototype.toString.call(opts.slideCell).slice(8, -1).toLowerCase() == 'nodelist') {\n        slideCell = opts.slideCell[0];\n    }\n    if (!slideCell) {\n        return;\n    }\n    //简单模拟jquery选择器\n    var obj = function (str, parEle) {\n        str = str.split(\" \");\n        var par = [];\n        parEle = parEle || document;\n        var retn = [parEle];\n        for (var attr in str) {\n            if (str.hasOwnProperty(attr)) {\n                if (str[attr].length != 0) {\n                    par.push(str[attr]);\n                }\n            }\n        }\n        //去掉重复空格\n        for (var i in par) {\n            if (par.hasOwnProperty(i)) {\n                if (retn.length == 0) {\n                    return false;\n                }\n                var _retn = [];\n                for (var r in retn) {\n                    if (retn.hasOwnProperty(r)) {\n                        if (par[i][0] == \"#\") {\n                            _retn.push(document.getElementById(par[i].replace(\"#\", \"\")));\n                        } else if (par[i][0] == \".\") {\n                            var tag = retn[r].getElementsByTagName('*');\n                            for (var j = 0; j < tag.length; j++) {\n                                var cln = tag[j].className;\n                                if (cln && cln.search && cln.search(new RegExp(\"\\\\b\" + par[i].replace(\".\", \"\") + \"\\\\b\")) != -1) {\n                                    _retn.push(tag[j]);\n                                }\n                            }\n                        } else {\n                            var tag2 = retn[r].getElementsByTagName(par[i]);\n                            for (var k = 0; k < tag2.length; k++) {\n                                _retn.push(tag2[k])\n                            }\n                        }\n                    }\n                }\n                retn = _retn;\n            }\n        }\n        return retn.length == 0 || retn[0] == parEle ? false : retn;\n    };\n    // 创建包裹层\n    var wrap = function (el, v) {\n        var tmp = document.createElement('div');\n        tmp.innerHTML = v;\n        tmp = tmp.children[0];\n        var _el = el.cloneNode(true);\n        tmp.appendChild(_el);\n        el.parentNode.replaceChild(tmp, el);\n        conBox = _el; // 重置conBox\n        return tmp;\n    };\n    // class处理\n    var addClass = function (ele, className) {\n        if (!ele || !className || (ele.className && ele.className.search(new RegExp(\"\\\\b\" + className + \"\\\\b\")) != -1)) {\n            return;\n        }\n        ele.className += (ele.className ? \" \" : \"\") + className;\n    };\n    var removeClass = function (ele, className) {\n        if (!ele || !className || (ele.className && ele.className.search(new RegExp(\"\\\\b\" + className + \"\\\\b\")) == -1)) {\n            return;\n        }\n        ele.className = ele.className.replace(new RegExp(\"\\\\s*\\\\b\" + className + \"\\\\b\", \"g\"), \"\");\n    };\n    //全局对象\n    var effect = opts.effect;\n    var prevBtn = obj(opts.prevCell, slideCell)[0];\n    var nextBtn = obj(opts.nextCell, slideCell)[0];\n    var pageState = obj(opts.pageStateCell)[0];\n    var conBox = obj(opts.mainCell, slideCell)[0];//内容元素父层对象\n    if (!conBox) {\n        return;\n    }\n    var conBoxSize = conBox.children.length;\n    var navObj = obj(opts.titCell, slideCell);//导航子元素结合\n    var navObjSize = navObj ? navObj.length : conBoxSize;\n    /*字符串转换*/\n    var index = parseInt(opts.defaultIndex);\n    var delayTime = parseInt(opts.delayTime);\n    var interTime = parseInt(opts.interTime);\n    var autoPlay = (!(opts.autoPlay == \"false\" || opts.autoPlay == false));\n    var autoPage = (!(opts.autoPage == \"false\" || opts.autoPage == false));\n    var loop = (!(opts.pnLoop == \"false\" || opts.pnLoop == false));\n    var oldIndex = index;\n    var inter = null;// autoPlay的setInterval\n    var timeout = null; // leftLoop的setTimeout\n    var endTimeout = null;  //translate的setTimeout\n    var startX = 0;\n    var startY = 0;\n    var distX = 0;\n    var distY = 0;\n    //var dist = 0; //手指滑动距离\n    var isTouchPad = (/hp-tablet/gi).test(navigator.appVersion);\n    var hasTouch = 'ontouchstart' in window && !isTouchPad;\n    var touchStart = hasTouch ? 'touchstart' : 'mousedown';\n    var touchMove = hasTouch ? 'touchmove' : '';\n    var touchEnd = hasTouch ? 'touchend' : 'mouseup';\n    var slideW = conBox.parentNode.clientWidth;// mainCell滑动距离\n    var twCell;\n    var scrollY;\n    var tempSize = conBoxSize;\n    //处理分页\n    if (navObjSize == 0) {\n        navObjSize = conBoxSize;\n    }\n    if (autoPage) {\n        navObjSize = conBoxSize;\n        navObj = navObj[0];\n        navObj.innerHTML = \"\";\n        var str = \"\";\n\n        if (opts.autoPage == true || opts.autoPage == \"true\") {\n            for (var i = 0; i < navObjSize; i++) {\n                str += \"<li>\" + (i + 1) + \"</li>\"\n            }\n        }\n        else {\n            for (var x = 0; x < navObjSize; x++) {\n                str += opts.autoPage.replace(\"$\", (x + 1))\n            }\n        }\n        navObj.innerHTML = str;\n        navObj = navObj.children;//重置navObj\n    }\n    if (effect == \"leftLoop\") {\n        tempSize += 2;\n        conBox.appendChild(conBox.children[0].cloneNode(true));\n        conBox.insertBefore(conBox.children[conBoxSize - 1].cloneNode(true), conBox.children[0]);\n    }\n    twCell = wrap(conBox, '<div class=\"tempWrap\" style=\"height:inherit;overflow:hidden; position:relative;\"></div>');\n    conBox.style.cssText = \"display:flex;width:\" + tempSize * slideW + \"px;\" + \"position:relative;overflow:hidden;padding:0;margin:0;\";\n    for (var y = 0; y < tempSize; y++) {\n        conBox.children[y].style.cssText = \"height:inherit;display:flex;align-items: center;justify-content: center;width:\" + slideW + \"px\"\n    }\n    var doStartFun = function () {\n        if (typeof opts.startFun == 'function') {\n            opts.startFun(index, navObjSize)\n        }\n    };\n    var doEndFun = function () {\n        if (typeof opts.endFun == 'function') {\n            opts.endFun(index, navObjSize)\n        }\n    };\n    //动态设置滑动宽度\n    var orientationChange = function () {\n        slideW = twCell.clientWidth;\n        conBox.style.width = tempSize * slideW + \"px\";\n        for (var i = 0; i < tempSize; i++) {\n            conBox.children[i].style.width = slideW + \"px\";\n        }\n        var ind = effect == \"leftLoop\" ? index + 1 : index;\n        translate(-ind * slideW, 0);\n    };\n    window.addEventListener(\"resize\", orientationChange, false);\n    //滑动效果\n    var translate = function (dist, speed, ele) {\n        if (!!ele) {\n            ele = ele.style;\n        } else {\n            ele = conBox.style;\n        }\n        ele.webkitTransitionDuration = ele.MozTransitionDuration = ele.msTransitionDuration = ele.OTransitionDuration = ele.transitionDuration = speed + 'ms';\n        ele.webkitTransform = 'translate(' + dist + 'px,0)' + 'translateZ(0)';\n        ele.msTransform = ele.MozTransform = ele.OTransform = 'translateX(' + dist + 'px)';\n    };\n    //效果函数\n    var doPlay = function (isTouch) {\n        switch (effect) {\n            case \"left\":\n                if (index >= navObjSize) {\n                    index = isTouch ? index - 1 : 0;\n                } else if (index < 0) {\n                    index = isTouch ? 0 : navObjSize - 1;\n                }\n                translate((-index * slideW), delayTime);\n                oldIndex = index;\n                break;\n            case \"leftLoop\":\n                translate(-(index + 1) * slideW, delayTime);\n                if (index == -1) {\n                    timeout = setTimeout(function () {\n                        translate(-navObjSize * slideW, 0);\n                    }, delayTime);\n                    index = navObjSize - 1;\n                } else if (index == navObjSize) {\n                    timeout = setTimeout(function () {\n                        translate(-slideW, 0);\n                    }, delayTime);\n                    index = 0;\n                }\n                oldIndex = index;\n                break;\n\n        }\n        //预加载\n        (function () {\n            var nowIndex = effect == \"leftLoop\" ? index + 1 : index;\n            var allImage = conBox.querySelectorAll(opts.switchLoadClass);\n            var changeImagesSrc = function (img) {\n                if (img) {\n                    var imgSwitchSrc = img.getAttribute(opts.switchLoad);\n                    if (!imgSwitchSrc) {\n                        return false;\n                    }\n                    if (img.tagName.toLowerCase() == 'img') {\n                        img.src = imgSwitchSrc;\n                    } else {\n                        img.style.backgroundImage = `url(${imgSwitchSrc})`;\n                    }\n                }\n            };\n            if (allImage.length > 0) {\n                changeImagesSrc(allImage[nowIndex]);\n                changeImagesSrc(allImage[nowIndex - 1]);\n                changeImagesSrc(allImage[nowIndex + 1]);\n            }\n        })();\n        doStartFun();\n        endTimeout = setTimeout(function () {\n            doEndFun();\n        }, delayTime);\n        //给按钮区域的切换每一项加上className\n        for (var i = 0; i < navObjSize; i++) {\n            removeClass(navObj[i], opts.titOnClassName);\n            if (i == index) {\n                addClass(navObj[i], opts.titOnClassName);\n            }\n        }\n        /*\n         * 给主体区域的切换每一项加上className\n         * 注:如果想配合className写css3小效果,建议使用effect属性的left值\n         * 否则切换到尾帧和切换到首帧时,视觉上的体验不好\n         * */\n        // (function () {\n        //     var nowJ = effect == \"leftLoop\" ? index + 1 : index;\n        //     for (var j = 0; j < conBox.children.length; j++) {\n        //         removeClass(conBox.children[j], opts.titOnClassName);\n        //         if (j == nowJ) {\n        //             addClass(conBox.children[j], opts.titOnClassName);\n        //         }\n        //     }\n        // })();\n        //loop控制是否继续循环\n        if (loop == false) {\n            removeClass(nextBtn, \"nextStop\");\n            removeClass(prevBtn, \"prevStop\");\n            if (index == 0) {\n                addClass(prevBtn, \"prevStop\")\n            } else if (index == navObjSize - 1) {\n                addClass(nextBtn, \"nextStop\")\n            }\n        }\n        if (pageState) {\n            pageState.innerHTML = \"<span>\" + (index + 1) + \"</span>/\" + navObjSize;\n        }\n    };\n    //初始化执行\n    doPlay();\n    //自动播放\n    if (autoPlay) {\n        inter = setInterval(function () {\n            index++;\n            doPlay()\n        }, interTime);\n    }\n    //点击事件\n    if (navObj) {\n        for (var z = 0; z < navObjSize; z++) {\n            (function () {\n                var j = z;\n                navObj[j].addEventListener('click', function () {\n                    clearTimeout(timeout);\n                    clearTimeout(endTimeout);\n                    index = j;\n                    doPlay();\n                })\n            })()\n        }\n    }\n    if (nextBtn) {\n        nextBtn.addEventListener('click', function () {\n            if (loop == true || index != navObjSize - 1) {\n                clearTimeout(timeout);\n                clearTimeout(endTimeout);\n                index++;\n                doPlay();\n            }\n        })\n    }\n    if (prevBtn) {\n        prevBtn.addEventListener('click', function () {\n            if (loop == true || index != 0) {\n                clearTimeout(timeout);\n                clearTimeout(endTimeout);\n                index--;\n                doPlay();\n            }\n        })\n    }\n    //触摸开始函数\n    var tStart = function (e) {\n        clearTimeout(timeout);\n        clearTimeout(endTimeout);\n        scrollY = undefined;\n        distX = 0;\n        var point = hasTouch ? e.touches[0] : e;\n        startX = point.pageX;\n        startY = point.pageY;\n        //添加“触摸移动”事件监听\n        conBox.addEventListener(touchMove, tMove, false);\n        //添加“触摸结束”事件监听\n        conBox.addEventListener(touchEnd, tEnd, false);\n    };\n    //触摸移动函数\n    var tMove = function (e) {\n        if (hasTouch) {\n            if (e.touches.length > 1 || e.scale && e.scale !== 1) {\n                return;\n            }\n        }\n        //多点或缩放\n        var point = hasTouch ? e.touches[0] : e;\n        distX = point.pageX - startX;\n        distY = point.pageY - startY;\n        if (typeof scrollY == 'undefined') {\n            scrollY = !!( scrollY || Math.abs(distX) < Math.abs(distY) );\n        }\n        if (!scrollY) {\n            e.preventDefault();\n            if (autoPlay) {\n                clearInterval(inter)\n            }\n            switch (effect) {\n                case \"left\":\n                    if ((index == 0 && distX > 0) || (index >= navObjSize - 1 && distX < 0 )) {\n                        distX = distX * 0.4\n                    }\n                    translate(-index * slideW + distX, 0);\n                    break;\n                case \"leftLoop\":\n                    translate(-(index + 1) * slideW + distX, 0);\n                    break;\n            }\n        }\n    };\n    //触摸结束函数\n    var tEnd = function (e) {\n        if (distX == 0) {\n            return;\n        }\n        e.preventDefault();\n        if (!scrollY) {\n            if (Math.abs(distX) > slideW / 10) {\n                distX > 0 ? index-- : index++;\n            }\n            doPlay(true);\n            if (autoPlay) {\n                inter = setInterval(function () {\n                    index++;\n                    doPlay()\n                }, interTime);\n            }\n        }\n\n        conBox.removeEventListener(touchMove, tMove, false);\n        conBox.removeEventListener(touchEnd, tEnd, false);\n    };\n    //添加“触摸开始”事件监听\n    conBox.addEventListener(touchStart, tStart, false);\n};\n\nmodule.exports = TouchSlide;\n\n\n// WEBPACK FOOTER //\n// ./static/src/phone/js/plugs/touch-slide.js","const tools = require('../utils/tools');// 工具方法集合\nconst applications = require('../utils/applications');// 应用方法集合\nconst SuperType = require('../components/g-super-type');\n// 超类型(子类型继承的对象)\nconst route = '/phone/';\n\n// 子类型\nconst SubType = tools.constructorInherit({\n    superType: SuperType,\n    // 默认参数(继承超类型)\n    parameter: {\n        // 回调\n        callback: {},\n        // 配置\n        config: {},\n        // 数据\n        data: {\n            items: [\n                {\n                    href: route,\n                    icon: 'icon-shouye',\n                    text: '首页',\n                    isShowMark: false,\n                },\n                {\n                    href: `${route}dev-globals/`,\n                    icon: 'icon-kaifa',\n                    text: '开发全局',\n                    isShowMark: false,\n                },\n                {\n                    href: `${route}dev-components/`,\n                    icon: 'icon-kaifa',\n                    text: '开发组件',\n                    isShowMark: false,\n                },\n                {\n                    href: `${route}dev-words/`,\n                    icon: 'icon-kaifa',\n                    text: '标准词汇',\n                    isShowMark: false,\n                },\n                {\n                    href: `${route}mine/`,\n                    icon: 'icon-wode',\n                    text: '我的',\n                    isShowMark: false,\n                },\n            ],\n        },\n    },\n});\n\n// 内部模块的创建(覆盖超类型)\nSubType.prototype.moduleDomCreate = function () {\n    const data = this.opts.data;\n    const items = data.items;\n    let html = '';\n    items.forEach(function (v) {\n        let markHtml = '';\n        if (v.isShowMark) {\n            markHtml = '<div class=\"g-navigation-mark\"></div>';\n        }\n        html += `\n            <a href=\"${v.href}\" class=\"g-navigation-item\">\n                <div class=\"g-navigation-icon iconfont ${v.icon}\"></div>\n                <div class=\"g-navigation-text\">${v.text}</div>\n                ${markHtml}\n            </a>\n        `;\n    });\n    this.moduleDom = applications.createElement({\n        style: this.opts.config.moduleDomStyle,\n        customAttribute: this.opts.config.moduleDomCustomAttribute,\n        attribute: {\n            className: 'g-navigation',\n            innerHTML: html,\n        },\n    });\n};\n\n// 功能(覆盖超类型)\nSubType.prototype.power = function () {\n    // 功能重写待续...\n};\n\nmodule.exports = SubType;\n\n\n\n// WEBPACK FOOTER //\n// ./static/src/phone/js/components/g-navigation.js"],"sourceRoot":""}