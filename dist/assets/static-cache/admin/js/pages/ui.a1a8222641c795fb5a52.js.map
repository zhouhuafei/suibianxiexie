{"version":3,"sources":["webpack:///js/pages/ui.a1a8222641c795fb5a52.js","webpack:///./app/admin/assets/js/pages/ui/index.js"],"names":["webpackJsonp","123","module","exports","__webpack_require__","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_createClass","defineProperties","target","props","i","length","descriptor","defineProperty","key","protoProps","staticProps","require","Super","_require","Message","Confirm","Popover","Validate","GoTop","TooltipApp","Copyright","LazyLoad","$","each","config","element","this","content","eventType","positionLocation","_Super","Sub","getPrototypeOf","apply","arguments","superSelf","dataInfo","routes","validateInput","setValidate","Number","document","querySelector","addEventListener","callback","cancel","time","isShowIcon","isShowClose","icon","confirm","isAllPassValidate","close","closeContent","isShowHeader","headerContent","isShowBody","isCustom","isShowFooter","isShowConfirm","confirmContent","isShowCancel","cancelContent","isShowMask","isHandHide","axios","ajax","url","api","list","route","method","data","type","obj","test","b","a","arr","arr2","then","json","console","log","formData","FormData","append","JSON","stringify","124"],"mappings":"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","file":"js/pages/ui.a1a8222641c795fb5a52.js","sourcesContent":["webpackJsonp([5],{\n\n/***/ 123:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n__webpack_require__(124);\nvar Super = __webpack_require__(1);\n\nvar _require = __webpack_require__(15),\n    Message = _require.Message,\n    Confirm = _require.Confirm,\n    Validate = _require.Validate,\n    GoTop = _require.GoTop,\n    TooltipApp = _require.TooltipApp,\n    Copyright = _require.Copyright,\n    LazyLoad = _require.LazyLoad,\n    Popover = _require.Popover;\n\n$('.js-popover').each(function () {\n    new Popover({\n        config: {\n            element: this,\n            content: '建议尺寸：640*640',\n            eventType: 'click',\n            positionLocation: 'top-center'\n        }\n    });\n});\n\nvar Sub = function (_Super) {\n    _inherits(Sub, _Super);\n\n    function Sub() {\n        _classCallCheck(this, Sub);\n\n        return _possibleConstructorReturn(this, (Sub.__proto__ || Object.getPrototypeOf(Sub)).apply(this, arguments));\n    }\n\n    _createClass(Sub, [{\n        key: 'power',\n\n        // (功)(覆)功能(覆盖超类型)\n        value: function power() {\n            var superSelf = this;\n            var dataInfo = superSelf.dataInfo;\n            var routes = dataInfo.routes;\n\n            // 验证\n            (function () {\n                var validateInput = superSelf.validateInput;\n                validateInput.setValidate('no-999', function (value) {\n                    return Number(value) !== 999;\n                });\n                document.querySelector('.js-save').addEventListener('click', function () {\n                    // 测试确认框和提示框\n                    new Confirm({\n                        callback: {\n                            cancel: function cancel() {\n                                new Message({\n                                    config: {\n                                        time: 3000, // 展示的时间\n                                        isShowIcon: false, // 是否显示icon\n                                        isShowClose: true, // 是否显示关闭按钮\n                                        icon: 'icon-success', // icon的class\n                                        content: '已取消', // 内容信息\n                                        positionLocation: 'top' // 弹窗的定位位置    positionMethod定位方式强制fixed\n                                    }\n                                });\n                            },\n                            confirm: function confirm() {\n                                var isAllPassValidate = validateInput.isAllPassValidate();\n                                new Message({\n                                    config: {\n                                        time: 3000, // 展示的时间\n                                        isShowIcon: false, // 是否显示icon\n                                        isShowClose: true, // 是否显示关闭按钮\n                                        icon: 'icon-success', // icon的class\n                                        content: isAllPassValidate ? '验证已通过，可执行保存操作' : '验证尚未通过，不可执行保存操作', // 内容信息\n                                        positionLocation: 'top' // 弹窗的定位位置    positionMethod定位方式强制fixed\n                                    }\n                                });\n                            },\n                            close: function close() {\n                                new Message({\n                                    config: {\n                                        time: 3000, // 展示的时间\n                                        isShowIcon: false, // 是否显示icon\n                                        isShowClose: true, // 是否显示关闭按钮\n                                        icon: 'icon-success', // icon的class\n                                        content: '已关闭', // 内容信息\n                                        positionLocation: 'top' // 弹窗的定位位置    positionMethod定位方式强制fixed\n                                    }\n                                });\n                            }\n                        },\n                        config: {\n                            positionLocation: 'center', // 弹窗的定位位置('top'，'center'，'bottom')。positionMethod定位方式强制fixed。\n                            isShowClose: true, // 是否显示关闭按钮\n                            closeContent: '<div class=\"iconfont icon-close\"></div>', // 关闭按钮的内容\n                            isShowHeader: true, // 是否显示头部\n                            headerContent: '提示:', // 头部内容\n                            isShowBody: true, // 是否显示主体\n                            isShowIcon: false, // 是否显示icon\n                            icon: 'icon-warning', // icon的类型\n                            isCustom: false, // 是否自定义\n                            content: '<div>确定要执行这个操作?</div>', // 主体内容\n                            isShowFooter: true, // 是否显示尾部\n                            isShowConfirm: true, // 是否显示确认按钮\n                            confirmContent: '确认', // 确认按钮的内容\n                            isShowCancel: true, // 是否显示取消按钮\n                            cancelContent: '取消', // 取消按钮的内容\n                            isShowMask: true, // 是否显示遮罩\n                            isHandHide: false // 是否手动隐藏(一般只用于点击确认时)\n                        }\n                    });\n                });\n            })();\n\n            // 测试application/x-www-form-urlencoded\n            var axios = __webpack_require__(12);\n            var ajax = __webpack_require__(18);\n            axios({\n                url: dataInfo.api.list.route,\n                method: 'POST',\n                data: { type: 'axios', obj: { test: true, key: 'obj', b: { a: 1 } }, arr: ['a', 2, 'c', { a: 1 }], arr2: [] }\n            }).then(function (json) {\n                console.log('axios测试application/x-www-form-urlencoded测试axios:->', json);\n            });\n            ajax({\n                url: dataInfo.api.list.route,\n                method: 'POST',\n                data: { type: 'ajax', obj: { test: true, key: 'obj', b: { a: 1 } }, arr: ['a', 2, 'c', { a: 1 }], arr2: [] }\n            }).then(function (json) {\n                console.log('ajax测试application/x-www-form-urlencoded测试ajax:->', json);\n            });\n            // 测试multipart/form-data\n            {\n                var formData = new FormData();\n                formData.append('json', JSON.stringify({ a: 1, b: 2, obj: { arr: ['a', 'b', 'c'] } }));\n                formData.append('type', 'axios');\n                axios({\n                    url: dataInfo.api.list.route,\n                    method: 'POST',\n                    data: formData\n                }).then(function (json) {\n                    console.log('axios测试multipart/form-data测试axios:->', json);\n                });\n            }\n            {\n                var _formData = new FormData();\n                _formData.append('json', JSON.stringify({ a: 1, b: 2, obj: { arr: ['a', 'b', 'c'] } }));\n                _formData.append('type', 'ajax');\n                ajax({\n                    url: dataInfo.api.list.route,\n                    method: 'POST',\n                    data: _formData\n                }).then(function (json) {\n                    console.log('ajax测试multipart/form-data测试ajax:->', json);\n                });\n            }\n        }\n    }]);\n\n    return Sub;\n}(Super);\n\nnew Sub();\n\n/***/ }),\n\n/***/ 124:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ })\n\n},[123]);\n\n\n// WEBPACK FOOTER //\n// js/pages/ui.a1a8222641c795fb5a52.js","require('../../../scss/pages/ui.scss');\nconst Super = require('../../pages-super/super');\nconst {\n    Message,\n    Confirm,\n    Validate,\n    GoTop,\n    TooltipApp,\n    Copyright,\n    LazyLoad,\n    Popover,\n} = require('zhf.g-ui/dist/js/commons_dom/g-common/index.js');\n\n$('.js-popover').each(function () {\n    new Popover({\n        config: {\n            element: this,\n            content: '建议尺寸：640*640',\n            eventType: 'click',\n            positionLocation: 'top-center',\n        },\n    });\n});\n\nclass Sub extends Super {\n    // (功)(覆)功能(覆盖超类型)\n    power() {\n        const superSelf = this;\n        const dataInfo = superSelf.dataInfo;\n        const routes = dataInfo.routes;\n\n        // 验证\n        (function () {\n            const validateInput = superSelf.validateInput;\n            validateInput.setValidate('no-999', function (value) {\n                return Number(value) !== 999;\n            });\n            document.querySelector('.js-save').addEventListener('click', function () {\n                // 测试确认框和提示框\n                new Confirm({\n                    callback: {\n                        cancel: function () {\n                            new Message({\n                                config: {\n                                    time: 3000, // 展示的时间\n                                    isShowIcon: false, // 是否显示icon\n                                    isShowClose: true, // 是否显示关闭按钮\n                                    icon: 'icon-success', // icon的class\n                                    content: '已取消', // 内容信息\n                                    positionLocation: 'top', // 弹窗的定位位置    positionMethod定位方式强制fixed\n                                },\n                            });\n                        },\n                        confirm: function () {\n                            const isAllPassValidate = validateInput.isAllPassValidate();\n                            new Message({\n                                config: {\n                                    time: 3000, // 展示的时间\n                                    isShowIcon: false, // 是否显示icon\n                                    isShowClose: true, // 是否显示关闭按钮\n                                    icon: 'icon-success', // icon的class\n                                    content: isAllPassValidate ? '验证已通过，可执行保存操作' : '验证尚未通过，不可执行保存操作', // 内容信息\n                                    positionLocation: 'top', // 弹窗的定位位置    positionMethod定位方式强制fixed\n                                },\n                            });\n                        },\n                        close: function () {\n                            new Message({\n                                config: {\n                                    time: 3000, // 展示的时间\n                                    isShowIcon: false, // 是否显示icon\n                                    isShowClose: true, // 是否显示关闭按钮\n                                    icon: 'icon-success', // icon的class\n                                    content: '已关闭', // 内容信息\n                                    positionLocation: 'top', // 弹窗的定位位置    positionMethod定位方式强制fixed\n                                },\n                            });\n                        },\n                    },\n                    config: {\n                        positionLocation: 'center', // 弹窗的定位位置('top'，'center'，'bottom')。positionMethod定位方式强制fixed。\n                        isShowClose: true, // 是否显示关闭按钮\n                        closeContent: '<div class=\"iconfont icon-close\"></div>', // 关闭按钮的内容\n                        isShowHeader: true, // 是否显示头部\n                        headerContent: '提示:', // 头部内容\n                        isShowBody: true, // 是否显示主体\n                        isShowIcon: false, // 是否显示icon\n                        icon: 'icon-warning', // icon的类型\n                        isCustom: false, // 是否自定义\n                        content: '<div>确定要执行这个操作?</div>', // 主体内容\n                        isShowFooter: true, // 是否显示尾部\n                        isShowConfirm: true, // 是否显示确认按钮\n                        confirmContent: '确认', // 确认按钮的内容\n                        isShowCancel: true, // 是否显示取消按钮\n                        cancelContent: '取消', // 取消按钮的内容\n                        isShowMask: true, // 是否显示遮罩\n                        isHandHide: false, // 是否手动隐藏(一般只用于点击确认时)\n                    },\n                });\n            });\n        }());\n\n        // 测试application/x-www-form-urlencoded\n        const axios = require('../../api/axios');\n        const ajax = require('../../api/ajax');\n        axios({\n            url: dataInfo.api.list.route,\n            method: 'POST',\n            data: {type: 'axios', obj: {test: true, key: 'obj', b: {a: 1}}, arr: ['a', 2, 'c', {a: 1}], arr2: []},\n        }).then(function (json) {\n            console.log('axios测试application/x-www-form-urlencoded测试axios:->', json);\n        });\n        ajax({\n            url: dataInfo.api.list.route,\n            method: 'POST',\n            data: {type: 'ajax', obj: {test: true, key: 'obj', b: {a: 1}}, arr: ['a', 2, 'c', {a: 1}], arr2: []},\n        }).then(function (json) {\n            console.log('ajax测试application/x-www-form-urlencoded测试ajax:->', json);\n        });\n        // 测试multipart/form-data\n        {\n            const formData = new FormData();\n            formData.append('json', JSON.stringify({a: 1, b: 2, obj: {arr: ['a', 'b', 'c']}}));\n            formData.append('type', 'axios');\n            axios({\n                url: dataInfo.api.list.route,\n                method: 'POST',\n                data: formData,\n            }).then(function (json) {\n                console.log('axios测试multipart/form-data测试axios:->', json);\n            });\n        }\n        {\n            const formData = new FormData();\n            formData.append('json', JSON.stringify({a: 1, b: 2, obj: {arr: ['a', 'b', 'c']}}));\n            formData.append('type', 'ajax');\n            ajax({\n                url: dataInfo.api.list.route,\n                method: 'POST',\n                data: formData,\n            }).then(function (json) {\n                console.log('ajax测试multipart/form-data测试ajax:->', json);\n            });\n        }\n    }\n}\n\nnew Sub();\n\n\n\n// WEBPACK FOOTER //\n// ./app/admin/assets/js/pages/ui/index.js"],"sourceRoot":""}