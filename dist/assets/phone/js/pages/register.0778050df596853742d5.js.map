{"version":3,"sources":["webpack:///js/pages/register.0778050df596853742d5.js","webpack:///./app/phone/assets/js/pages/register.js"],"names":["webpackJsonp","104","module","exports","__webpack_require__","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_createClass","defineProperties","target","props","i","length","descriptor","defineProperty","key","protoProps","staticProps","Super","_Super","Sub","this","getPrototypeOf","apply","arguments","gDataInfo","dataInfo","axios","domForm","document","querySelector","domUsername","domPassword","domVerifyCode","domGetVerifyCode","domGetVerifyCodeHtml","innerHTML","isCanGetVerifyCode","addEventListener","ev","domSelf","preventDefault","username","formData","FormData","append","url","api","route","method","data","then","status","config","alert","icon","content","classList","add","tools","timeCountDown","seconds","isToTime","callback","run","obj","over","remove","userInfo","password","verifyCode","register","window","location","href","routes","login","105"],"mappings":"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","file":"js/pages/register.0778050df596853742d5.js","sourcesContent":["webpackJsonp([9],{\n\n/***/ 104:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n__webpack_require__(105);\nvar Super = __webpack_require__(3);\n\nvar Sub = function (_Super) {\n    _inherits(Sub, _Super);\n\n    function Sub() {\n        _classCallCheck(this, Sub);\n\n        return _possibleConstructorReturn(this, (Sub.__proto__ || Object.getPrototypeOf(Sub)).apply(this, arguments));\n    }\n\n    _createClass(Sub, [{\n        key: 'power',\n        value: function power() {\n            var self = this;\n            var gDataInfo = self.dataInfo;\n            var axios = self.axios;\n\n            // 获取验证码\n            var domForm = document.querySelector('#form');\n            var domUsername = document.querySelector('#username');\n            var domPassword = document.querySelector('#password');\n            var domVerifyCode = document.querySelector('#verify-code');\n            var domGetVerifyCode = document.querySelector('.get-verify-code');\n            var domGetVerifyCodeHtml = domGetVerifyCode.innerHTML;\n            var domGetVerifyCodeInactive = 'get-verify-code-inactive';\n            var isCanGetVerifyCode = true;\n            domGetVerifyCode.addEventListener('click', function (ev) {\n                var domSelf = this;\n                ev.preventDefault();\n                if (isCanGetVerifyCode) {\n                    isCanGetVerifyCode = false;\n                    var username = domUsername.value;\n                    var formData = new FormData();\n                    formData.append('username', username);\n                    formData.append('accountnum', 123456); // 数字 123456 会被立即转换成字符串 \"123456\"\n                    axios({\n                        url: gDataInfo.api['verify-code-register'].route,\n                        method: 'get',\n                        data: {\n                            username: username\n                        }\n                    }).then(function (dataInfo) {\n                        if (dataInfo.status === 'success') {\n                            var Dialog = __webpack_require__(10);\n                            new Dialog({ config: { alert: { icon: 'icon-chenggong', content: '验证码已发送' } } });\n                            domSelf.classList.add(domGetVerifyCodeInactive);\n                            self.tools.timeCountDown({\n                                seconds: 90,\n                                isToTime: false,\n                                callback: {\n                                    run: function run(obj) {\n                                        domGetVerifyCode.innerHTML = '<span class=\"g-button\">' + obj.seconds + '\\u79D2</span>';\n                                    },\n                                    over: function over() {\n                                        isCanGetVerifyCode = true;\n                                        domGetVerifyCode.innerHTML = domGetVerifyCodeHtml;\n                                        domSelf.classList.remove(domGetVerifyCodeInactive);\n                                    }\n                                }\n                            });\n                        } else {\n                            isCanGetVerifyCode = true;\n                        }\n                    });\n                }\n            });\n\n            // 立即注册\n            document.querySelector('.register').addEventListener('click', function () {\n                var isFormData = false;\n                var userInfo = new FormData(domForm);\n                if (!isFormData) {\n                    userInfo = {\n                        username: domUsername.value,\n                        password: domPassword.value,\n                        verifyCode: domVerifyCode.value\n                    };\n                }\n                axios({\n                    url: gDataInfo.api.register.route,\n                    method: 'post',\n                    data: userInfo\n                }).then(function (dataInfo) {\n                    if (dataInfo.status === 'success') {\n                        window.location.href = gDataInfo.routes.login.route;\n                    }\n                });\n            });\n        }\n    }]);\n\n    return Sub;\n}(Super);\n\nnew Sub();\n\n/***/ }),\n\n/***/ 105:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ })\n\n},[104]);\n\n\n// WEBPACK FOOTER //\n// js/pages/register.0778050df596853742d5.js","require('../../scss/pages/register.scss');\nconst Super = require('./super');\n\nclass Sub extends Super {\n    power() {\n        const self = this;\n        const gDataInfo = self.dataInfo;\n        const axios = self.axios;\n\n        // 获取验证码\n        const domForm = document.querySelector('#form');\n        const domUsername = document.querySelector('#username');\n        const domPassword = document.querySelector('#password');\n        const domVerifyCode = document.querySelector('#verify-code');\n        const domGetVerifyCode = document.querySelector('.get-verify-code');\n        const domGetVerifyCodeHtml = domGetVerifyCode.innerHTML;\n        const domGetVerifyCodeInactive = 'get-verify-code-inactive';\n        let isCanGetVerifyCode = true;\n        domGetVerifyCode.addEventListener('click', function (ev) {\n            const domSelf = this;\n            ev.preventDefault();\n            if (isCanGetVerifyCode) {\n                isCanGetVerifyCode = false;\n                const username = domUsername.value;\n                const formData = new FormData();\n                formData.append('username', username);\n                formData.append('accountnum', 123456); // 数字 123456 会被立即转换成字符串 \"123456\"\n                axios({\n                    url: gDataInfo.api['verify-code-register'].route,\n                    method: 'get',\n                    data: {\n                        username: username,\n                    },\n                }).then(function (dataInfo) {\n                    if (dataInfo.status === 'success') {\n                        const Dialog = require('../components-dom/g-dialog');\n                        new Dialog({config: {alert: {icon: 'icon-chenggong', content: '验证码已发送'}}});\n                        domSelf.classList.add(domGetVerifyCodeInactive);\n                        self.tools.timeCountDown({\n                            seconds: 90,\n                            isToTime: false,\n                            callback: {\n                                run: function (obj) {\n                                    domGetVerifyCode.innerHTML = `<span class=\"g-button\">${obj.seconds}秒</span>`;\n                                },\n                                over: function () {\n                                    isCanGetVerifyCode = true;\n                                    domGetVerifyCode.innerHTML = domGetVerifyCodeHtml;\n                                    domSelf.classList.remove(domGetVerifyCodeInactive);\n                                },\n                            },\n                        });\n                    } else {\n                        isCanGetVerifyCode = true;\n                    }\n                });\n            }\n        });\n\n        // 立即注册\n        document.querySelector('.register').addEventListener('click', function () {\n            const isFormData = false;\n            let userInfo = new FormData(domForm);\n            if (!isFormData) {\n                userInfo = {\n                    username: domUsername.value,\n                    password: domPassword.value,\n                    verifyCode: domVerifyCode.value,\n                };\n            }\n            axios({\n                url: gDataInfo.api.register.route,\n                method: 'post',\n                data: userInfo,\n            }).then(function (dataInfo) {\n                if (dataInfo.status === 'success') {\n                    window.location.href = gDataInfo.routes.login.route;\n                }\n            });\n        });\n    }\n}\n\nnew Sub();\n\n\n\n// WEBPACK FOOTER //\n// ./app/phone/assets/js/pages/register.js"],"sourceRoot":""}