{"version":3,"sources":["webpack:///js/pages/dev-globals.e5e923ebad1aef1c68fb.js","webpack:///./app/phone/assets/js/pages/dev-globals.js","webpack:///./app/phone/assets/js/components-dom/g-validate-form-hint.js"],"names":["webpackJsonp","116","module","exports","__webpack_require__","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_createClass","defineProperties","target","props","i","length","descriptor","defineProperty","key","protoProps","staticProps","Super","_Super","Sub","this","getPrototypeOf","apply","arguments","applications","select","items","callback","click","obj","console","log","element","setValidate","Number","117","118","ValidateForm","json","opts","tools","extend","hintClass","getDomArray","init","domAddPosition","checkStr","render","power","forEach","v","parentNode","customValidateRule","hintDom","document","createElement","classList","add","renderHintAdd","undefined","input","offsetWidth","innerHTML","txt","appendChild","renderHintRemove","parentDom","querySelector","removeChild","validateInput","keys","isValidateSuccess","fn","validateType","dataset","validate","validateHintTxt","hint","type","split","hintTxt","inputType","isPassword","isEmpty","isZero","isPositiveInteger","isAllPassValidate","eventsType","event","addEventListener","name"],"mappings":"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","file":"js/pages/dev-globals.e5e923ebad1aef1c68fb.js","sourcesContent":["webpackJsonp([8],{\n\n/***/ 116:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n__webpack_require__(117);\nvar Super = __webpack_require__(3);\n\nvar Sub = function (_Super) {\n    _inherits(Sub, _Super);\n\n    function Sub() {\n        _classCallCheck(this, Sub);\n\n        return _possibleConstructorReturn(this, (Sub.__proto__ || Object.getPrototypeOf(Sub)).apply(this, arguments));\n    }\n\n    _createClass(Sub, [{\n        key: 'power',\n        value: function power() {\n            var self = this;\n            var applications = self.applications;\n\n            // base函数测试\n            (function () {\n                // 测试全选\n                var Select = applications.select();\n                new Select({\n                    items: '.g-checkbox-checkbox',\n                    callback: {\n                        click: function click(obj) {\n                            console.log(obj);\n                        }\n                    }\n                });\n            })();\n\n            // 验证\n            (function () {\n                var ValidateInput = __webpack_require__(118);\n                var validateInput = new ValidateInput({ element: '.page-validate-form' });\n                validateInput.setValidate('no-999', function (value) {\n                    return Number(value) !== 999;\n                });\n            })();\n        }\n    }]);\n\n    return Sub;\n}(Super);\n\nnew Sub();\n\n/***/ }),\n\n/***/ 117:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 118:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar tools = __webpack_require__(0); // 工具方法集合\nvar applications = __webpack_require__(1); // 应用方法集合\nvar domAddPosition = __webpack_require__(16);\nvar checkStr = tools.checkStr;\n\nfunction ValidateForm(json) {\n    this.opts = tools.extend({\n        element: '',\n        hintClass: 'g-validate-form-hint'\n    }, json);\n    if (this.opts.element) {\n        this.element = applications.getDomArray(this.opts.element);\n    }\n    if (this.element.length) {\n        this.init();\n    }\n}\n\nValidateForm.prototype.init = function () {\n    this.render();\n    this.power();\n};\nValidateForm.prototype.render = function () {\n    var self = this;\n    self.element.forEach(function (v) {\n        if (v.parentNode) {\n            domAddPosition(v.parentNode, 'relative');\n        }\n        v.customValidateRule = {}; // 自定义规则\n        v.hintDom = document.createElement('span');\n        v.hintDom.classList.add(self.opts.hintClass);\n    });\n};\nValidateForm.prototype.renderHintAdd = function () {\n    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    // 只有没被隐藏的才进行验证\n    var input = opts.input;\n    var hintDom = input.hintDom;\n    if (input.offsetWidth && hintDom) {\n        hintDom.innerHTML = opts.txt;\n        input.parentNode.appendChild(hintDom);\n    }\n};\nValidateForm.prototype.renderHintRemove = function () {\n    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    var input = opts.input;\n    var parentDom = input.parentNode;\n    var hintDom = input.parentNode.querySelector('.' + this.opts.hintClass);\n    if (parentDom && hintDom) {\n        parentDom.removeChild(input.hintDom);\n    }\n};\nValidateForm.prototype.validateInput = function (input) {\n    var self = this;\n    var customValidateRule = input.customValidateRule;\n    Object.keys(customValidateRule).forEach(function (keys) {\n        var obj = customValidateRule[keys];\n        obj.isValidateSuccess = obj.fn(input.value);\n    });\n    var validateType = input.dataset.validate || 'undefined';\n    var validateHintTxt = input.dataset.hint || 'undefined';\n    var type = validateType.split(' ');\n    var hintTxt = validateHintTxt.split(' ');\n    var value = input.value;\n    var inputType = input.type;\n    var isPassword = inputType === 'password';\n    var isValidateSuccess = true; // 是否验证成功了\n    type.forEach(function (v, i) {\n        if (isValidateSuccess && customValidateRule[v]) {\n            if (isValidateSuccess && customValidateRule[v].isValidateSuccess) {\n                self.renderHintRemove({ input: input });\n                isValidateSuccess = true;\n            } else {\n                self.renderHintAdd({ txt: hintTxt[i], input: input });\n                isValidateSuccess = false;\n            }\n        }\n        if (isValidateSuccess && !customValidateRule[v]) {\n            if (isValidateSuccess && v === 'no-empty') {\n                // 设置了非空验证\n                var isEmpty = checkStr.isEmpty(value);\n                if (isPassword) {\n                    isEmpty = value === ''; // input为password类型的进行特殊处理\n                }\n                if (isEmpty) {\n                    self.renderHintAdd({ txt: hintTxt[i], input: input });\n                    isValidateSuccess = false;\n                } else {\n                    self.renderHintRemove({ input: input });\n                    isValidateSuccess = true;\n                }\n            }\n            if (isValidateSuccess && v === 'no-zero') {\n                // 设置了非零验证\n                if (checkStr.isZero(value)) {\n                    self.renderHintAdd({ txt: hintTxt[i], input: input });\n                    isValidateSuccess = false;\n                } else {\n                    self.renderHintRemove({ input: input });\n                    isValidateSuccess = true;\n                }\n            }\n            if (isValidateSuccess && v === 'yes-positive-integer') {\n                // 设置了正整数验证\n                if (checkStr.isPositiveInteger(value)) {\n                    self.renderHintRemove({ input: input });\n                    isValidateSuccess = true;\n                } else {\n                    self.renderHintAdd({ txt: hintTxt[i], input: input });\n                    isValidateSuccess = false;\n                }\n            }\n        }\n    });\n    input.isValidateSuccess = isValidateSuccess;\n};\nValidateForm.prototype.isAllPassValidate = function () {\n    var self = this;\n    var isValidateSuccess = true;\n    self.element.forEach(function (v) {\n        self.validateInput(v);\n        if (v.isValidateSuccess !== true) {\n            isValidateSuccess = false;\n        }\n    });\n    return isValidateSuccess;\n};\nValidateForm.prototype.power = function () {\n    var self = this;\n    self.element.forEach(function (v) {\n        var eventsType = v.dataset.event || 'blur';\n        v.addEventListener(eventsType, function () {\n            self.validateInput(this);\n        });\n    });\n};\n\n// 自定义验证规则\nValidateForm.prototype.setValidate = function (name, fn) {\n    this.element.forEach(function (v) {\n        v.customValidateRule[name] = {\n            fn: fn,\n            isValidateSuccess: fn(v.value)\n        };\n    });\n};\n\nmodule.exports = ValidateForm;\n\n/***/ })\n\n},[116]);\n\n\n// WEBPACK FOOTER //\n// js/pages/dev-globals.e5e923ebad1aef1c68fb.js","require('../../scss/pages/dev-globals.scss');\nconst Super = require('../pages-super/super');\n\nclass Sub extends Super {\n    power() {\n        const self = this;\n        const applications = self.applications;\n\n        // base函数测试\n        (function () {\n            // 测试全选\n            const Select = applications.select();\n            new Select({\n                items: '.g-checkbox-checkbox',\n                callback: {\n                    click: function (obj) {\n                        console.log(obj);\n                    },\n                },\n            });\n        }());\n\n        // 验证\n        (function () {\n            const ValidateInput = require('../components-dom/g-validate-form-hint');\n            const validateInput = new ValidateInput({element: '.page-validate-form'});\n            validateInput.setValidate('no-999', function (value) {\n                return Number(value) !== 999;\n            });\n        }());\n    }\n}\n\nnew Sub();\n\n\n\n// WEBPACK FOOTER //\n// ./app/phone/assets/js/pages/dev-globals.js","const tools = require('zhf.tools'); // 工具方法集合\nconst applications = require('zhf.applications'); // 应用方法集合\nconst domAddPosition = require('zhf.dom-add-position');\nconst checkStr = tools.checkStr;\n\nfunction ValidateForm(json) {\n    this.opts = tools.extend({\n        element: '',\n        hintClass: 'g-validate-form-hint',\n    }, json);\n    if (this.opts.element) {\n        this.element = applications.getDomArray(this.opts.element);\n    }\n    if (this.element.length) {\n        this.init();\n    }\n}\n\nValidateForm.prototype.init = function () {\n    this.render();\n    this.power();\n};\nValidateForm.prototype.render = function () {\n    const self = this;\n    self.element.forEach(function (v) {\n        if (v.parentNode) {\n            domAddPosition(v.parentNode, 'relative');\n        }\n        v.customValidateRule = {}; // 自定义规则\n        v.hintDom = document.createElement('span');\n        v.hintDom.classList.add(self.opts.hintClass);\n    });\n};\nValidateForm.prototype.renderHintAdd = function (opts = {}) {\n    // 只有没被隐藏的才进行验证\n    const input = opts.input;\n    const hintDom = input.hintDom;\n    if (input.offsetWidth && hintDom) {\n        hintDom.innerHTML = opts.txt;\n        input.parentNode.appendChild(hintDom);\n    }\n};\nValidateForm.prototype.renderHintRemove = function (opts = {}) {\n    const input = opts.input;\n    const parentDom = input.parentNode;\n    const hintDom = input.parentNode.querySelector(`.${this.opts.hintClass}`);\n    if (parentDom && hintDom) {\n        parentDom.removeChild(input.hintDom);\n    }\n};\nValidateForm.prototype.validateInput = function (input) {\n    const self = this;\n    const customValidateRule = input.customValidateRule;\n    Object.keys(customValidateRule).forEach((keys) => {\n        const obj = customValidateRule[keys];\n        obj.isValidateSuccess = obj.fn(input.value);\n    });\n    const validateType = input.dataset.validate || 'undefined';\n    const validateHintTxt = input.dataset.hint || 'undefined';\n    const type = validateType.split(' ');\n    const hintTxt = validateHintTxt.split(' ');\n    const value = input.value;\n    const inputType = input.type;\n    const isPassword = inputType === 'password';\n    let isValidateSuccess = true; // 是否验证成功了\n    type.forEach(function (v, i) {\n        if (isValidateSuccess && customValidateRule[v]) {\n            if (isValidateSuccess && customValidateRule[v].isValidateSuccess) {\n                self.renderHintRemove({input: input});\n                isValidateSuccess = true;\n            } else {\n                self.renderHintAdd({txt: hintTxt[i], input: input});\n                isValidateSuccess = false;\n            }\n        }\n        if (isValidateSuccess && !customValidateRule[v]) {\n            if (isValidateSuccess && v === 'no-empty') { // 设置了非空验证\n                let isEmpty = checkStr.isEmpty(value);\n                if (isPassword) {\n                    isEmpty = value === ''; // input为password类型的进行特殊处理\n                }\n                if (isEmpty) {\n                    self.renderHintAdd({txt: hintTxt[i], input: input});\n                    isValidateSuccess = false;\n                } else {\n                    self.renderHintRemove({input: input});\n                    isValidateSuccess = true;\n                }\n            }\n            if (isValidateSuccess && v === 'no-zero') { // 设置了非零验证\n                if (checkStr.isZero(value)) {\n                    self.renderHintAdd({txt: hintTxt[i], input: input});\n                    isValidateSuccess = false;\n                } else {\n                    self.renderHintRemove({input: input});\n                    isValidateSuccess = true;\n                }\n            }\n            if (isValidateSuccess && v === 'yes-positive-integer') { // 设置了正整数验证\n                if (checkStr.isPositiveInteger(value)) {\n                    self.renderHintRemove({input: input});\n                    isValidateSuccess = true;\n                } else {\n                    self.renderHintAdd({txt: hintTxt[i], input: input});\n                    isValidateSuccess = false;\n                }\n            }\n        }\n    });\n    input.isValidateSuccess = isValidateSuccess;\n};\nValidateForm.prototype.isAllPassValidate = function () {\n    const self = this;\n    let isValidateSuccess = true;\n    self.element.forEach(function (v) {\n        self.validateInput(v);\n        if (v.isValidateSuccess !== true) {\n            isValidateSuccess = false;\n        }\n    });\n    return isValidateSuccess;\n};\nValidateForm.prototype.power = function () {\n    const self = this;\n    self.element.forEach(function (v) {\n        const eventsType = v.dataset.event || 'blur';\n        v.addEventListener(eventsType, function () {\n            self.validateInput(this);\n        });\n    });\n};\n\n// 自定义验证规则\nValidateForm.prototype.setValidate = function (name, fn) {\n    this.element.forEach(function (v) {\n        v.customValidateRule[name] = {\n            fn: fn,\n            isValidateSuccess: fn(v.value),\n        };\n    });\n};\n\nmodule.exports = ValidateForm;\n\n\n\n// WEBPACK FOOTER //\n// ./app/phone/assets/js/components-dom/g-validate-form-hint.js"],"sourceRoot":""}