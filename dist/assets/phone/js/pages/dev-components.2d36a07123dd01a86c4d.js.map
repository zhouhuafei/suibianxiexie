{"version":3,"sources":["webpack:///js/pages/dev-components.2d36a07123dd01a86c4d.js","webpack:///./app/phone/assets/js/components-dom/g-slide.js","webpack:///./app/phone/assets/js/plugs/touch-slide.js","webpack:///./app/phone/assets/js/components-dom/g-navigation.js","webpack:///./app/phone/assets/js/components-dom-super/g-super-es6.js","webpack:///./app/phone/assets/js/pages/dev-components.js","webpack:///./app/phone/assets/js/components-dom/g-loading.js","webpack:///./app/phone/assets/js/components-dom/g-pagination.js","webpack:///./app/phone/assets/js/components-dom/g-no-data.js","webpack:///./app/phone/assets/js/components-dom/g-sub.js","webpack:///./app/phone/assets/js/components-dom/g-sub-es6.js","webpack:///./app/phone/assets/js/components-dom/g-radio-switch.js","webpack:///./app/phone/assets/js/components-dom/g-table.js"],"names":["webpackJsonp","17","module","exports","__webpack_require__","tools","applications","Super","TouchSlide","Sub","constructorInherit","callback","startFun","endFun","config","isShowHref","touchSlide","slideCell","mainCell","titCell","effect","autoPlay","delayTime","interTime","console","log","defaultIndex","switchLoadClass","switchLoad","data","items","img","width","height","src","href","prototype","moduleDomCreate","this","moduleDom","createElement","style","opts","moduleDomStyle","customAttribute","moduleDomCustomAttribute","attribute","className","innerHTML","renderHeader","renderBody","self","html","forEach","v","i","power","wrap","index","18","a","titOnClassName","autoPage","prevCell","nextCell","pageStateCell","pnLoop","Object","toString","call","slice","toLowerCase","document","querySelector","nodeType","obj","str","parEle","split","par","retn","attr","hasOwnProperty","length","push","_retn","r","getElementById","replace","tag","getElementsByTagName","j","cln","search","RegExp","tag2","k","addClass","ele","removeClass","prevBtn","nextBtn","pageState","conBox","twCell","scrollY","conBoxSize","children","navObj","navObjSize","parseInt","loop","oldIndex","inter","timeout","endTimeout","startX","startY","distX","distY","isTouchPad","test","navigator","appVersion","hasTouch","window","touchStart","touchMove","touchEnd","slideW","parentNode","clientWidth","tempSize","x","appendChild","cloneNode","insertBefore","el","tmp","_el","replaceChild","cssText","y","doStartFun","doEndFun","orientationChange","translate","addEventListener","dist","speed","webkitTransitionDuration","MozTransitionDuration","msTransitionDuration","OTransitionDuration","transitionDuration","webkitTransform","msTransform","MozTransform","OTransform","doPlay","isTouch","setTimeout","nowIndex","allImage","querySelectorAll","changeImagesSrc","imgSwitchSrc","getAttribute","tagName","backgroundImage","setInterval","z","clearTimeout","tStart","e","undefined","point","touches","pageX","pageY","tMove","tEnd","scale","Math","abs","preventDefault","clearInterval","removeEventListener","19","icon","text","isShowMark","route","markHtml","42","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","protoProps","staticProps","json","extend","defaults","moduleDomCreateBefore","moduleDomCreateAfter","moduleDomRenderBefore","moduleDomRenderAfter","moduleDomRemoveBefore","moduleDomRemoveAfter","moduleDomShowBefore","moduleDomShowAfter","moduleDomHideBefore","moduleDomHideAfter","wrapDomGetBefore","wrapDomGetAfter","wrapDomRemoveBefore","wrapDomRemoveAfter","moduleDomRenderMethod","method","child","moduleDomIsRender","moduleDomIsClearTimer","inherits","wrapDom","moduleDomTimer","init","value","render","moduleDomRemove","wrapDomGet","moduleDomRender","renderMethod","dom","getDomArray","removeChild","moduleDomClearTimer","keys","outerHTML","43","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","_Super","getPrototypeOf","apply","arguments","Loading","WhenScrollBottom","whenScrollBottom","num","isInitRender","success","status","dataLoadContinue","Dialog","confirm","alert","content","cancel","close","type","click","header","body","footer","then","require","bind","catch","oe","44","83","positionMethod","positionLocation","moduleDomHtml","moduleDomClass","84","defaultData","nowCount","allCount","nowPage","allPage","ceil","prevPage","nextPage","selectPage","renderOption","prevDom","nextDom","btnInactiveClass","selectDom","prevPageDisable","nextPageDisable","classList","contains","oldChecked","previousElementSibling","selected","nextPageEnable","nextElementSibling","prevPageEnable","add","remove","85","button","isShowIcon","buttonIconHtml","86","87","88","isHand","txt","on","off","moduleDomActiveClass","isOn","89","moduleDomCreateHeader","moduleDomCreateBody","moduleDomCreateFooter","v0","row","v1"],"mappings":"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","file":"js/pages/dev-components.2d36a07123dd01a86c4d.js","sourcesContent":["webpackJsonp([3],{\n\n/***/ 17:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar tools = __webpack_require__(0); // 工具方法集合\nvar applications = __webpack_require__(1); // 应用方法集合\nvar Super = __webpack_require__(2); // 超类型(子类型继承的对象)\nvar TouchSlide = __webpack_require__(18); // 轮播图插件\n\n// 子类型\nvar Sub = tools.constructorInherit(Super, {\n    // 回调\n    callback: {\n        startFun: function startFun() {},\n        endFun: function endFun() {}\n    },\n    // 配置\n    config: {\n        isShowHref: true, // 是否有跳转\n        // TouchSlide插件的配置\n        touchSlide: {\n            slideCell: '', // 外部容器,这个值会在底部进行覆盖,因为在这里没办法获取this\n            mainCell: '.g-slide-body', // 切换元素的包裹层对象\n            titCell: '.g-slide-header .g-slide-items', // 导航元素对象\n            effect: 'leftLoop', // 效果'left' 'leftLoop'\n            autoPlay: true, // 自动播放\n            delayTime: 200, // 切换一次的持续时间\n            interTime: 3000, // 多久切换一次\n            startFun: function startFun() {\n                console.log('此处的函数会被覆盖,请在callback里执行回调');\n            },\n            endFun: function endFun() {\n                console.log('此处的函数会被覆盖,请在callback里执行回调');\n            },\n            defaultIndex: 0, // 默认的当前位置索引\n            switchLoadClass: '.pre-load', // 预加载的class\n            switchLoad: 'data-src' // 预加载的属性\n        }\n    },\n    // 数据\n    data: {\n        items: [{\n            img: {\n                width: 0,\n                height: 0,\n                src: 'http://img1.imgtn.bdimg.com/it/u=1056872014,4038868309&fm=23&gp=0.jpg'\n            },\n            href: ''\n        }]\n    }\n});\n\n// 内部模块的创建(覆盖超类型)\nSub.prototype.moduleDomCreate = function () {\n    this.moduleDom = applications.createElement({\n        style: this.opts.config.moduleDomStyle,\n        customAttribute: this.opts.config.moduleDomCustomAttribute,\n        attribute: {\n            className: 'g-slide',\n            innerHTML: '\\n                ' + this.renderHeader() + '\\n                ' + this.renderBody() + '\\n            '\n        }\n    });\n};\n\nSub.prototype.renderHeader = function () {\n    var self = this;\n    var html = '';\n    var data = self.opts.data;\n    var className = '';\n    data.items.forEach(function (v, i) {\n        if (i === self.opts.config.touchSlide.defaultIndex) {\n            className = 'on';\n        }\n        html += '<div class=\"g-slide-items ' + className + '\"></div>';\n    });\n    return '<div class=\"g-slide-header\">' + html + '</div>';\n};\n\nSub.prototype.renderBody = function () {\n    var self = this;\n    var html = '';\n    var data = self.opts.data;\n    data.items.forEach(function (v) {\n        if (self.opts.config.isShowHref) {\n            html += '<a href=\"' + (v.href || 'javascript:;') + '\" class=\"g-slide-items pre-load\" data-src=\"' + v.img.src + '\"></a>';\n        } else {\n            html += '<a class=\"g-slide-items pre-load\" data-src=\"' + v.img.src + '\"></a>';\n        }\n    });\n    return '<div class=\"g-slide-body\">' + html + '</div>';\n};\n\n// 功能(覆盖超类型)\nSub.prototype.power = function () {\n    var self = this;\n    var callback = self.opts.callback;\n    var config = self.opts.config;\n    var touchSlide = config.touchSlide;\n    touchSlide.slideCell = self.opts.wrap; // 外部容器,必须是id\n    touchSlide.startFun = function (i) {\n        // 因为以下功能在插件本身进行了实现(本人对touch-slide插件进行了小修改),所以这里就注释了\n        // var allImg = self.moduleDom.querySelectorAll('.g-slide-body .g-slide-items');\n        // var nowIndex = ( i + 1);\n        // if (touchSlide.effect == 'left') {\n        //     nowIndex = i;\n        // }\n        // var nowImg = allImg[nowIndex];\n        // var prevImg = allImg[nowIndex - 1];\n        // var nextImg = allImg[nowIndex + 1];\n        // nowImg.style.backgroundImage = `url(${nowImg.dataset.src})`;\n        // prevImg && (prevImg.style.backgroundImage = `url(${prevImg.dataset.src})`);\n        // nextImg && (nextImg.style.backgroundImage = `url(${nextImg.dataset.src})`);\n        callback.startFun({ self: self, index: i });\n    };\n    touchSlide.endFun = function (i) {\n        callback.endFun({ self: self, index: i });\n    };\n    TouchSlide(self.opts.config.touchSlide);\n};\n\nmodule.exports = Sub;\n\n/***/ }),\n\n/***/ 18:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/*!\r\n * TouchSlide v1.1\r\n * javascript触屏滑动特效插件，移动端滑动特效，触屏焦点图，触屏Tab切换，触屏多图切换等\r\n * 详尽信息请看官网：http://www.SuperSlide2.com/TouchSlide/\r\n *\r\n * Copyright 2013 大话主席\r\n *\r\n * 请尊重原创，保留头部版权\r\n * 在保留版权的前提下可应用于个人或商业用途\r\n\r\n * 1.1 宽度自适应（修复安卓横屏时滑动范围不变的bug）\r\n */\n\n/*\r\n * 本人对此文件进行了稍微改动,还请见谅\r\n * 1.支持传入class和dom节点\r\n * 2.样式修改成flex布局\r\n * 3.把一些不规范的语法警告提示修正\r\n * 4.添加预加载功能pre-load,去掉插件自带的懒加载功能\r\n * 5.给主体区域的切换每一项加上className\r\n * */\n\nvar TouchSlide = function TouchSlide(a) {\n    a = a || {};\n    var opts = {\n        slideCell: a.slideCell || \"#touchSlide\", //运行效果主对象，必须用id！，例如 slideCell:\"#touchSlide\"\n        titCell: a.titCell || \".hd li\", // 导航对象，当自动分页设为true时为“导航对象包裹层”\n        mainCell: a.mainCell || \".bd\", // 切换对象包裹层\n        effect: a.effect || \"left\", // 效果，支持 left、leftLoop\n        autoPlay: a.autoPlay || false, // 自动播放\n        delayTime: a.delayTime || 200, // 效果持续时间\n        interTime: a.interTime || 2500, // 自动运行间隔\n        defaultIndex: a.defaultIndex || 0, // 默认的当前位置索引。0是第一个； defaultIndex:1 时，相当于从第2个开始执行\n        titOnClassName: a.titOnClassName || \"on\", // 当前导航对象添加的className\n        autoPage: a.autoPage || false, // 自动分页，当为true时titCell为“导航对象包裹层”\n        prevCell: a.prevCell || \".prev\", // 前一页按钮\n        nextCell: a.nextCell || \".next\", // 后一页按钮\n        pageStateCell: a.pageStateCell || \".pageState\", // 分页状态对象，用于显示分页状态，例如：2/3\n        pnLoop: a.pnLoop == 'undefined ' ? true : a.pnLoop, // 前后按钮点击是否继续执行效果，当为最前/后页是会自动添加“prevStop”/“nextStop”控制样色\n        startFun: a.startFun || null, // 每次切换效果开始时执行函数，用于处理特殊情况或创建更多效果。用法 satrtFun:function(i,c){ }； 其中i为当前分页，c为总页数\n        endFun: a.endFun || null, // 每次切换效果结束时执行函数，用于处理特殊情况或创建更多效果。用法 endFun:function(i,c){ }； 其中i为当前分页，c为总页数\n        switchLoadClass: a.switchLoadClass || '.pre-load', //预加载的class\n        switchLoad: a.switchLoad || 'data-src' //预加载的属性\n    };\n    var slideCell = null;\n    //如果是字符串\n    if (Object.prototype.toString.call(opts.slideCell).slice(8, -1).toLowerCase() == 'string') {\n        slideCell = document.querySelector(opts.slideCell);\n    }\n    //如果是dom节点(一个元素)    原生的\n    if (opts.slideCell.nodeType == 1) {\n        slideCell = opts.slideCell;\n    }\n    /*\r\n     * 如果是dom集合(一组元素)    HtmlCollection(通过getElementsBy系列获取到的)\r\n     * 如果是dom集合(一组元素)    NodeList(通过querySelectorAll获取到的)\r\n     * */\n    if (Object.prototype.toString.call(opts.slideCell).slice(8, -1).toLowerCase() == 'htmlcollection' || Object.prototype.toString.call(opts.slideCell).slice(8, -1).toLowerCase() == 'nodelist') {\n        slideCell = opts.slideCell[0];\n    }\n    if (!slideCell) {\n        return;\n    }\n    //简单模拟jquery选择器\n    var obj = function obj(str, parEle) {\n        str = str.split(\" \");\n        var par = [];\n        parEle = parEle || document;\n        var retn = [parEle];\n        for (var attr in str) {\n            if (str.hasOwnProperty(attr)) {\n                if (str[attr].length != 0) {\n                    par.push(str[attr]);\n                }\n            }\n        }\n        //去掉重复空格\n        for (var i in par) {\n            if (par.hasOwnProperty(i)) {\n                if (retn.length == 0) {\n                    return false;\n                }\n                var _retn = [];\n                for (var r in retn) {\n                    if (retn.hasOwnProperty(r)) {\n                        if (par[i][0] == \"#\") {\n                            _retn.push(document.getElementById(par[i].replace(\"#\", \"\")));\n                        } else if (par[i][0] == \".\") {\n                            var tag = retn[r].getElementsByTagName('*');\n                            for (var j = 0; j < tag.length; j++) {\n                                var cln = tag[j].className;\n                                if (cln && cln.search && cln.search(new RegExp(\"\\\\b\" + par[i].replace(\".\", \"\") + \"\\\\b\")) != -1) {\n                                    _retn.push(tag[j]);\n                                }\n                            }\n                        } else {\n                            var tag2 = retn[r].getElementsByTagName(par[i]);\n                            for (var k = 0; k < tag2.length; k++) {\n                                _retn.push(tag2[k]);\n                            }\n                        }\n                    }\n                }\n                retn = _retn;\n            }\n        }\n        return retn.length == 0 || retn[0] == parEle ? false : retn;\n    };\n    // 创建包裹层\n    var wrap = function wrap(el, v) {\n        var tmp = document.createElement('div');\n        tmp.innerHTML = v;\n        tmp = tmp.children[0];\n        var _el = el.cloneNode(true);\n        tmp.appendChild(_el);\n        el.parentNode.replaceChild(tmp, el);\n        conBox = _el; // 重置conBox\n        return tmp;\n    };\n    // class处理\n    var addClass = function addClass(ele, className) {\n        if (!ele || !className || ele.className && ele.className.search(new RegExp(\"\\\\b\" + className + \"\\\\b\")) != -1) {\n            return;\n        }\n        ele.className += (ele.className ? \" \" : \"\") + className;\n    };\n    var removeClass = function removeClass(ele, className) {\n        if (!ele || !className || ele.className && ele.className.search(new RegExp(\"\\\\b\" + className + \"\\\\b\")) == -1) {\n            return;\n        }\n        ele.className = ele.className.replace(new RegExp(\"\\\\s*\\\\b\" + className + \"\\\\b\", \"g\"), \"\");\n    };\n    //全局对象\n    var effect = opts.effect;\n    var prevBtn = obj(opts.prevCell, slideCell)[0];\n    var nextBtn = obj(opts.nextCell, slideCell)[0];\n    var pageState = obj(opts.pageStateCell)[0];\n    var conBox = obj(opts.mainCell, slideCell)[0]; //内容元素父层对象\n    if (!conBox) {\n        return;\n    }\n    var conBoxSize = conBox.children.length;\n    var navObj = obj(opts.titCell, slideCell); //导航子元素结合\n    var navObjSize = navObj ? navObj.length : conBoxSize;\n    /*字符串转换*/\n    var index = parseInt(opts.defaultIndex);\n    var delayTime = parseInt(opts.delayTime);\n    var interTime = parseInt(opts.interTime);\n    var autoPlay = !(opts.autoPlay == \"false\" || opts.autoPlay == false);\n    var autoPage = !(opts.autoPage == \"false\" || opts.autoPage == false);\n    var loop = !(opts.pnLoop == \"false\" || opts.pnLoop == false);\n    var oldIndex = index;\n    var inter = null; // autoPlay的setInterval\n    var timeout = null; // leftLoop的setTimeout\n    var endTimeout = null; //translate的setTimeout\n    var startX = 0;\n    var startY = 0;\n    var distX = 0;\n    var distY = 0;\n    //var dist = 0; //手指滑动距离\n    var isTouchPad = /hp-tablet/gi.test(navigator.appVersion);\n    var hasTouch = 'ontouchstart' in window && !isTouchPad;\n    var touchStart = hasTouch ? 'touchstart' : 'mousedown';\n    var touchMove = hasTouch ? 'touchmove' : '';\n    var touchEnd = hasTouch ? 'touchend' : 'mouseup';\n    var slideW = conBox.parentNode.clientWidth; // mainCell滑动距离\n    var twCell;\n    var scrollY;\n    var tempSize = conBoxSize;\n    //处理分页\n    if (navObjSize == 0) {\n        navObjSize = conBoxSize;\n    }\n    if (autoPage) {\n        navObjSize = conBoxSize;\n        navObj = navObj[0];\n        navObj.innerHTML = \"\";\n        var str = \"\";\n\n        if (opts.autoPage == true || opts.autoPage == \"true\") {\n            for (var i = 0; i < navObjSize; i++) {\n                str += \"<li>\" + (i + 1) + \"</li>\";\n            }\n        } else {\n            for (var x = 0; x < navObjSize; x++) {\n                str += opts.autoPage.replace(\"$\", x + 1);\n            }\n        }\n        navObj.innerHTML = str;\n        navObj = navObj.children; //重置navObj\n    }\n    if (effect == \"leftLoop\") {\n        tempSize += 2;\n        conBox.appendChild(conBox.children[0].cloneNode(true));\n        conBox.insertBefore(conBox.children[conBoxSize - 1].cloneNode(true), conBox.children[0]);\n    }\n    twCell = wrap(conBox, '<div class=\"tempWrap\" style=\"height:inherit;overflow:hidden; position:relative;\"></div>');\n    conBox.style.cssText = \"display:flex;width:\" + tempSize * slideW + \"px;\" + \"position:relative;overflow:hidden;padding:0;margin:0;\";\n    for (var y = 0; y < tempSize; y++) {\n        conBox.children[y].style.cssText = \"height:inherit;display:flex;align-items: center;justify-content: center;width:\" + slideW + \"px\";\n    }\n    var doStartFun = function doStartFun() {\n        if (typeof opts.startFun == 'function') {\n            opts.startFun(index, navObjSize);\n        }\n    };\n    var doEndFun = function doEndFun() {\n        if (typeof opts.endFun == 'function') {\n            opts.endFun(index, navObjSize);\n        }\n    };\n    //动态设置滑动宽度\n    var orientationChange = function orientationChange() {\n        slideW = twCell.clientWidth;\n        conBox.style.width = tempSize * slideW + \"px\";\n        for (var i = 0; i < tempSize; i++) {\n            conBox.children[i].style.width = slideW + \"px\";\n        }\n        var ind = effect == \"leftLoop\" ? index + 1 : index;\n        translate(-ind * slideW, 0);\n    };\n    window.addEventListener(\"resize\", orientationChange, false);\n    //滑动效果\n    var translate = function translate(dist, speed, ele) {\n        if (!!ele) {\n            ele = ele.style;\n        } else {\n            ele = conBox.style;\n        }\n        ele.webkitTransitionDuration = ele.MozTransitionDuration = ele.msTransitionDuration = ele.OTransitionDuration = ele.transitionDuration = speed + 'ms';\n        ele.webkitTransform = 'translate(' + dist + 'px,0)' + 'translateZ(0)';\n        ele.msTransform = ele.MozTransform = ele.OTransform = 'translateX(' + dist + 'px)';\n    };\n    //效果函数\n    var doPlay = function doPlay(isTouch) {\n        switch (effect) {\n            case \"left\":\n                if (index >= navObjSize) {\n                    index = isTouch ? index - 1 : 0;\n                } else if (index < 0) {\n                    index = isTouch ? 0 : navObjSize - 1;\n                }\n                translate(-index * slideW, delayTime);\n                oldIndex = index;\n                break;\n            case \"leftLoop\":\n                translate(-(index + 1) * slideW, delayTime);\n                if (index == -1) {\n                    timeout = setTimeout(function () {\n                        translate(-navObjSize * slideW, 0);\n                    }, delayTime);\n                    index = navObjSize - 1;\n                } else if (index == navObjSize) {\n                    timeout = setTimeout(function () {\n                        translate(-slideW, 0);\n                    }, delayTime);\n                    index = 0;\n                }\n                oldIndex = index;\n                break;\n\n        }\n        //预加载\n        (function () {\n            var nowIndex = effect == \"leftLoop\" ? index + 1 : index;\n            var allImage = conBox.querySelectorAll(opts.switchLoadClass);\n            var changeImagesSrc = function changeImagesSrc(img) {\n                if (img) {\n                    var imgSwitchSrc = img.getAttribute(opts.switchLoad);\n                    if (!imgSwitchSrc) {\n                        return false;\n                    }\n                    if (img.tagName.toLowerCase() == 'img') {\n                        img.src = imgSwitchSrc;\n                    } else {\n                        img.style.backgroundImage = \"url(\" + imgSwitchSrc + \")\";\n                    }\n                }\n            };\n            if (allImage.length > 0) {\n                changeImagesSrc(allImage[nowIndex]);\n                changeImagesSrc(allImage[nowIndex - 1]);\n                changeImagesSrc(allImage[nowIndex + 1]);\n            }\n        })();\n        doStartFun();\n        endTimeout = setTimeout(function () {\n            doEndFun();\n        }, delayTime);\n        //给按钮区域的切换每一项加上className\n        for (var i = 0; i < navObjSize; i++) {\n            removeClass(navObj[i], opts.titOnClassName);\n            if (i == index) {\n                addClass(navObj[i], opts.titOnClassName);\n            }\n        }\n        /*\r\n         * 给主体区域的切换每一项加上className\r\n         * 注:如果想配合className写css3小效果,建议使用effect属性的left值\r\n         * 否则切换到尾帧和切换到首帧时,视觉上的体验不好\r\n         * */\n        // (function () {\n        //     var nowJ = effect == \"leftLoop\" ? index + 1 : index;\n        //     for (var j = 0; j < conBox.children.length; j++) {\n        //         removeClass(conBox.children[j], opts.titOnClassName);\n        //         if (j == nowJ) {\n        //             addClass(conBox.children[j], opts.titOnClassName);\n        //         }\n        //     }\n        // })();\n        //loop控制是否继续循环\n        if (loop == false) {\n            removeClass(nextBtn, \"nextStop\");\n            removeClass(prevBtn, \"prevStop\");\n            if (index == 0) {\n                addClass(prevBtn, \"prevStop\");\n            } else if (index == navObjSize - 1) {\n                addClass(nextBtn, \"nextStop\");\n            }\n        }\n        if (pageState) {\n            pageState.innerHTML = \"<span>\" + (index + 1) + \"</span>/\" + navObjSize;\n        }\n    };\n    //初始化执行\n    doPlay();\n    //自动播放\n    if (autoPlay) {\n        inter = setInterval(function () {\n            index++;\n            doPlay();\n        }, interTime);\n    }\n    //点击事件\n    if (navObj) {\n        for (var z = 0; z < navObjSize; z++) {\n            (function () {\n                var j = z;\n                navObj[j].addEventListener('click', function () {\n                    clearTimeout(timeout);\n                    clearTimeout(endTimeout);\n                    index = j;\n                    doPlay();\n                });\n            })();\n        }\n    }\n    if (nextBtn) {\n        nextBtn.addEventListener('click', function () {\n            if (loop == true || index != navObjSize - 1) {\n                clearTimeout(timeout);\n                clearTimeout(endTimeout);\n                index++;\n                doPlay();\n            }\n        });\n    }\n    if (prevBtn) {\n        prevBtn.addEventListener('click', function () {\n            if (loop == true || index != 0) {\n                clearTimeout(timeout);\n                clearTimeout(endTimeout);\n                index--;\n                doPlay();\n            }\n        });\n    }\n    //触摸开始函数\n    var tStart = function tStart(e) {\n        clearTimeout(timeout);\n        clearTimeout(endTimeout);\n        scrollY = undefined;\n        distX = 0;\n        var point = hasTouch ? e.touches[0] : e;\n        startX = point.pageX;\n        startY = point.pageY;\n        //添加“触摸移动”事件监听\n        conBox.addEventListener(touchMove, tMove, false);\n        //添加“触摸结束”事件监听\n        conBox.addEventListener(touchEnd, tEnd, false);\n    };\n    //触摸移动函数\n    var tMove = function tMove(e) {\n        if (hasTouch) {\n            if (e.touches.length > 1 || e.scale && e.scale !== 1) {\n                return;\n            }\n        }\n        //多点或缩放\n        var point = hasTouch ? e.touches[0] : e;\n        distX = point.pageX - startX;\n        distY = point.pageY - startY;\n        if (typeof scrollY == 'undefined') {\n            scrollY = !!(scrollY || Math.abs(distX) < Math.abs(distY));\n        }\n        if (!scrollY) {\n            e.preventDefault();\n            if (autoPlay) {\n                clearInterval(inter);\n            }\n            switch (effect) {\n                case \"left\":\n                    if (index == 0 && distX > 0 || index >= navObjSize - 1 && distX < 0) {\n                        distX = distX * 0.4;\n                    }\n                    translate(-index * slideW + distX, 0);\n                    break;\n                case \"leftLoop\":\n                    translate(-(index + 1) * slideW + distX, 0);\n                    break;\n            }\n        }\n    };\n    //触摸结束函数\n    var tEnd = function tEnd(e) {\n        if (distX == 0) {\n            return;\n        }\n        e.preventDefault();\n        if (!scrollY) {\n            if (Math.abs(distX) > slideW / 10) {\n                distX > 0 ? index-- : index++;\n            }\n            doPlay(true);\n            if (autoPlay) {\n                inter = setInterval(function () {\n                    index++;\n                    doPlay();\n                }, interTime);\n            }\n        }\n\n        conBox.removeEventListener(touchMove, tMove, false);\n        conBox.removeEventListener(touchEnd, tEnd, false);\n    };\n    //添加“触摸开始”事件监听\n    conBox.addEventListener(touchStart, tStart, false);\n};\n\nmodule.exports = TouchSlide;\n\n/***/ }),\n\n/***/ 19:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar tools = __webpack_require__(0); // 工具方法集合\nvar applications = __webpack_require__(1); // 应用方法集合\nvar Super = __webpack_require__(2); // 超类型(子类型继承的对象)\n// 超类型(子类型继承的对象)\nvar route = '/';\n\n// 子类型\nvar Sub = tools.constructorInherit(Super, {\n    // 回调\n    callback: {},\n    // 配置\n    config: {},\n    // 数据\n    data: {\n        items: [{\n            href: route,\n            icon: 'icon-home',\n            text: '首页',\n            isShowMark: false\n        }, {\n            href: route + 'dev-globals/',\n            icon: 'icon-dev',\n            text: '开发全局',\n            isShowMark: false\n        }, {\n            href: route + 'dev-components/',\n            icon: 'icon-dev',\n            text: '开发组件',\n            isShowMark: false\n        }, {\n            href: route + 'dev-words/',\n            icon: 'icon-dev',\n            text: '开发词汇',\n            isShowMark: false\n        }, {\n            href: route + 'mine/',\n            icon: 'icon-mine',\n            text: '我的',\n            isShowMark: false\n        }]\n    }\n});\n\n// 内部模块的创建(覆盖超类型)\nSub.prototype.moduleDomCreate = function () {\n    var data = this.opts.data;\n    var items = data.items;\n    var html = '';\n    items.forEach(function (v) {\n        var markHtml = '';\n        if (v.isShowMark) {\n            markHtml = '<div class=\"g-navigation-mark\"></div>';\n        }\n        html += '\\n            <a href=\"' + v.href + '\" class=\"g-navigation-item\">\\n                <div class=\"g-navigation-icon iconfont ' + v.icon + '\"></div>\\n                <div class=\"g-navigation-text\">' + v.text + '</div>\\n                ' + markHtml + '\\n            </a>\\n        ';\n    });\n    this.moduleDom = applications.createElement({\n        style: this.opts.config.moduleDomStyle,\n        customAttribute: this.opts.config.moduleDomCustomAttribute,\n        attribute: {\n            className: 'g-navigation',\n            innerHTML: html\n        }\n    });\n};\n\n// 功能(覆盖超类型)\nSub.prototype.power = function () {\n    // 功能重写待续...\n};\n\nmodule.exports = Sub;\n\n/***/ }),\n\n/***/ 42:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar tools = __webpack_require__(0); // 工具方法集合\nvar applications = __webpack_require__(1); // 应用方法集合\n\n// 底层构造函数\n\nvar Super = function () {\n    function Super(json) {\n        _classCallCheck(this, Super);\n\n        // 函数外部传来的参数\n        this.opts = tools.extend({\n            // 内部默认参数\n            defaults: {\n                // 父级\n                wrap: '.g-body', // 这个仅支持传入选择器和原生dom节点\n                // 回调\n                callback: {\n                    // 内部模块创建之前\n                    moduleDomCreateBefore: function moduleDomCreateBefore(self) {\n                        // 内部模块创建之前的回调待续...\n                    },\n                    // 内部模块创建之后\n                    moduleDomCreateAfter: function moduleDomCreateAfter(self) {\n                        // 内部模块创建之后的回调待续...\n                    },\n                    // 内部模块渲染之前\n                    moduleDomRenderBefore: function moduleDomRenderBefore(self) {\n                        // 内部模块渲染之前的回调待续...\n                    },\n                    // 内部模块渲染之后\n                    moduleDomRenderAfter: function moduleDomRenderAfter(self) {\n                        // 内部模块渲染之后的回调待续...\n                    },\n                    // 内部模块移除之前\n                    moduleDomRemoveBefore: function moduleDomRemoveBefore(self) {\n                        // 内部模块移除之前的回调待续...\n                    },\n                    // 内部模块移除之后\n                    moduleDomRemoveAfter: function moduleDomRemoveAfter(self) {\n                        // 内部模块移除之后的回调待续...\n                    },\n                    // 内部模块显示之前\n                    moduleDomShowBefore: function moduleDomShowBefore(self) {\n                        // 内部模块显示之前的回调待续...\n                    },\n                    // 内部模块显示之后\n                    moduleDomShowAfter: function moduleDomShowAfter(self) {\n                        // 内部模块显示之后的回调待续...\n                    },\n                    // 内部模块隐藏之前\n                    moduleDomHideBefore: function moduleDomHideBefore(self) {\n                        // 内部模块隐藏之前的回调待续...\n                    },\n                    // 内部模块隐藏之后\n                    moduleDomHideAfter: function moduleDomHideAfter(self) {\n                        // 内部模块隐藏之后的回调待续...\n                    },\n                    // 外部容器获取之前\n                    wrapDomGetBefore: function wrapDomGetBefore(self) {\n                        // 外部容器获取之前的回调待续...\n                    },\n                    // 外部容器获取之后\n                    wrapDomGetAfter: function wrapDomGetAfter(self) {\n                        // 外部容器获取之后的回调待续...\n                    },\n                    // 外部容器移除之前\n                    wrapDomRemoveBefore: function wrapDomRemoveBefore(self) {\n                        // 外部容器移除之前的回调待续...\n                    },\n                    // 外部容器移除之后\n                    wrapDomRemoveAfter: function wrapDomRemoveAfter(self) {\n                        // 外部容器移除之后的回调待续...\n                    }\n                },\n                // 配置\n                config: {\n                    // 内部模块的自定义属性\n                    moduleDomCustomAttribute: {},\n                    // 内部模块插入到外部容器的方式\n                    moduleDomRenderMethod: {\n                        method: 'appendChild', // 'appendChild','insertBefore'\n                        child: null\n                    },\n                    moduleDomStyle: {}, // 内部模块的样式\n                    moduleDomIsRender: true, // 内部模块是否渲染\n                    moduleDomIsClearTimer: true // 内部模块是否清除所有定时器(默认清除)\n                },\n                // 数据\n                data: {}\n            },\n            // 外部传入参数\n            inherits: json\n        });\n        // 函数内部自带的属性\n        this.moduleDom = null; // 内部的模块\n        this.wrapDom = null; // 内部模块的外部承载容器,如果没有也没关系,不过不往里面append罢了\n        this.moduleDomTimer = {}; // 内部模块的定时器存储(假设内部模块有定时器)\n        this.init();\n    }\n\n    // 初始化\n\n\n    _createClass(Super, [{\n        key: 'init',\n        value: function init() {\n            this.render();\n            this.power();\n        }\n\n        // 渲染\n\n    }, {\n        key: 'render',\n        value: function render() {\n            this.moduleDomRemove(); // 内部模块的移除(重新初始化的时候要移除掉以前有的内部模块)\n\n            var callback = this.opts.callback;\n            callback.moduleDomCreateBefore(this);\n            this.moduleDomCreate(); // 内部模块的创建\n            callback.moduleDomCreateAfter(this);\n\n            this.wrapDomGet(); // 外部容器的获取\n            this.moduleDomRender(); // 内部模块的渲染(如果外部容器存在,就把内部模块填充到外部容器里)\n        }\n\n        // 功能(这个方法需要在子类型里被覆盖掉)\n\n    }, {\n        key: 'power',\n        value: function power() {}\n        // 功能待续...\n\n\n        // 内部模块的创建(这个方法需要在子类型里被覆盖掉)\n\n    }, {\n        key: 'moduleDomCreate',\n        value: function moduleDomCreate() {\n            this.moduleDom = applications.createElement({\n                style: this.opts.config.moduleDomStyle,\n                customAttribute: this.opts.config.moduleDomCustomAttribute,\n                attribute: {\n                    className: 'g-super-type-es6',\n                    innerHTML: '\\n                    <div class=\"g-super-type-es6-text\" style=\"text-align: center;\">\\u5468\\u534E\\u98DE\\u7231\\u4FAF\\u4E3D\\u6770,\\u4FAF\\u4E3D\\u6770\\u7231\\u5468\\u534E\\u98DEsup-es6</div>\\n                '\n                }\n            });\n        }\n\n        // 内部模块的渲染\n\n    }, {\n        key: 'moduleDomRender',\n        value: function moduleDomRender() {\n            var callback = this.opts.callback;\n            var config = this.opts.config;\n            if (config.moduleDomIsRender && this.wrapDom) {\n                callback.moduleDomRenderBefore(this);\n                var renderMethod = config.moduleDomRenderMethod;\n                if (renderMethod.method === 'insertBefore') {\n                    var dom = applications.getDomArray(renderMethod.child)[0];\n                    if (dom) {\n                        this.wrapDom.insertBefore(this.moduleDom, dom);\n                    } else {\n                        this.wrapDom.insertBefore(this.moduleDom, this.wrapDom.children[0]);\n                    }\n                }\n                if (renderMethod.method === 'appendChild') {\n                    this.wrapDom.appendChild(this.moduleDom);\n                }\n                callback.moduleDomRenderAfter(this);\n            }\n        }\n\n        // 内部模块的移除\n\n    }, {\n        key: 'moduleDomRemove',\n        value: function moduleDomRemove() {\n            var callback = this.opts.callback;\n            if (this.moduleDom && this.moduleDom.parentNode) {\n                callback.moduleDomRemoveBefore(this);\n                this.moduleDom.parentNode.removeChild(this.moduleDom);\n                callback.moduleDomRemoveAfter(this);\n            }\n            this.moduleDomClearTimer();\n        }\n\n        // 内部模块的定时器清除(假设内部模块有定时器)\n\n    }, {\n        key: 'moduleDomClearTimer',\n        value: function moduleDomClearTimer() {\n            var self = this;\n            if (self.opts.config.moduleDomIsClearTimer) {\n                Object.keys(self.moduleDomTimer).forEach(function (attr) {\n                    clearInterval(self.moduleDomTimer[attr]);\n                    clearTimeout(self.moduleDomTimer[attr]);\n                });\n            }\n        }\n\n        // 内部模块的隐藏(显示隐藏和是否清除定时器无关)\n\n    }, {\n        key: 'moduleDomHide',\n        value: function moduleDomHide() {\n            var callback = this.opts.callback;\n            if (this.moduleDom.parentNode) {\n                this.opts.config.moduleDomIsRender = false;\n                callback.moduleDomHideBefore(this);\n                this.moduleDom.parentNode.removeChild(this.moduleDom);\n                callback.moduleDomHideAfter(this);\n            }\n        }\n\n        // 内部模块的显示(显示隐藏和是否清除定时器无关)\n\n    }, {\n        key: 'moduleDomShow',\n        value: function moduleDomShow() {\n            var callback = this.opts.callback;\n            callback.moduleDomShowBefore(this);\n            if (this.wrapDom) {\n                this.opts.config.moduleDomIsRender = true;\n                this.moduleDomRender();\n            }\n            callback.moduleDomShowAfter(this);\n        }\n\n        // 外部容器的获取\n\n    }, {\n        key: 'wrapDomGet',\n        value: function wrapDomGet() {\n            var callback = this.opts.callback;\n            callback.wrapDomGetBefore(this);\n            this.wrapDom = applications.getDomArray(this.opts.wrap)[0];\n            callback.wrapDomGetAfter(this);\n        }\n\n        // 外部容器的移除\n\n    }, {\n        key: 'wrapDomRemove',\n        value: function wrapDomRemove() {\n            var callback = this.opts.callback;\n            // 先移除内部的模块\n            this.moduleDomRemove();\n            // 再移除外部的容器\n            if (this.wrapDom) {\n                callback.wrapDomRemoveBefore(this);\n                this.wrapDom.parentNode.removeChild(this.wrapDom);\n                callback.wrapDomRemoveAfter(this);\n            }\n        }\n\n        // 获取内部模块的整体html结构\n\n    }, {\n        key: 'getModuleDomHtml',\n        value: function getModuleDomHtml() {\n            return this.moduleDom.outerHTML;\n        }\n    }]);\n\n    return Super;\n}();\n\nmodule.exports = Super;\n\n/***/ }),\n\n/***/ 43:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n__webpack_require__(44);\nvar Super = __webpack_require__(3);\n\nvar Sub = function (_Super) {\n    _inherits(Sub, _Super);\n\n    function Sub() {\n        _classCallCheck(this, Sub);\n\n        return _possibleConstructorReturn(this, (Sub.__proto__ || Object.getPrototypeOf(Sub)).apply(this, arguments));\n    }\n\n    _createClass(Sub, [{\n        key: 'power',\n        value: function power() {\n            var self = this;\n            var applications = self.applications;\n\n            // ajax测试\n            (function () {\n                // const Ajax = require('../api/ajax');\n                // new Ajax({\n                //     callback: {},\n                //     config: {\n                //         url: '/api/getList',\n                //     },\n                //     data: {\n                //         hellow: 'hellow',\n                //     },\n                // });\n            })();\n\n            // 测试滚动到底部功能以及loading组件\n            (function () {\n                var Loading = __webpack_require__(83);\n                var WhenScrollBottom = applications.whenScrollBottom();\n                var num = 0;\n                new WhenScrollBottom({\n                    isInitRender: false,\n                    callback: {\n                        success: function success(self) {\n                            num++;\n                            new Loading({\n                                wrap: '.g-body',\n                                config: {\n                                    status: 'loading'\n                                }\n                            });\n                            if (num >= 5) {\n                                new Loading({\n                                    config: {\n                                        status: 'over'\n                                    }\n                                });\n                            } else {\n                                self.dataLoadContinue();\n                            }\n                        }\n                    }\n                });\n            })();\n\n            // slide切换\n            (function () {\n                var Slide = __webpack_require__(17);\n                new Slide({\n                    wrap: '.page-slide',\n                    data: {\n                        items: [{\n                            img: {\n                                width: 0,\n                                height: 0,\n                                src: 'http://img1.imgtn.bdimg.com/it/u=1056872014,4038868309&fm=23&gp=0.jpg'\n                            },\n                            href: ''\n                        }, {\n                            img: {\n                                width: 0,\n                                height: 0,\n                                src: 'http://img3.imgtn.bdimg.com/it/u=1732308780,3782498029&fm=23&gp=0.jpg'\n                            },\n                            href: ''\n                        }, {\n                            img: {\n                                width: 0,\n                                height: 0,\n                                src: 'http://img3.imgtn.bdimg.com/it/u=4027566086,3099254237&fm=23&gp=0.jpg'\n                            },\n                            href: ''\n                        }, {\n                            img: {\n                                width: 0,\n                                height: 0,\n                                src: 'http://img4.imgtn.bdimg.com/it/u=120609946,455952432&fm=23&gp=0.jpg'\n                            },\n                            href: ''\n                        }, {\n                            img: {\n                                width: 0,\n                                height: 0,\n                                src: 'http://img2.imgtn.bdimg.com/it/u=2763208243,961494673&fm=23&gp=0.jpg'\n                            },\n                            href: ''\n                        }]\n                    }\n                });\n            })();\n\n            // 导航\n            (function () {\n                var Navigation = __webpack_require__(19);\n                new Navigation({ wrap: '.page-navigation' });\n            })();\n\n            // 弹窗测试\n            (function () {\n                var Dialog = __webpack_require__(9);\n                document.querySelector('.page-button-dialog').addEventListener('click', function () {\n                    new Dialog({\n                        callback: {\n                            confirm: function confirm() {\n                                new Dialog({ config: { alert: { icon: 'icon-success', content: '已确认' } } });\n                            },\n                            cancel: function cancel() {\n                                new Dialog({ config: { alert: { icon: 'icon-success', content: '已取消' } } });\n                            },\n                            close: function close() {\n                                new Dialog({ config: { alert: { icon: 'icon-success', content: '已关闭' } } });\n                            }\n                        },\n                        config: {\n                            type: 'confirm'\n                        }\n                    });\n                });\n            })();\n\n            // 分页测试\n            (function () {\n                var Pagination = __webpack_require__(84);\n                new Pagination({ wrap: '.page-pagination' });\n            })();\n\n            // 没有数据\n            (function () {\n                var NoData = __webpack_require__(85);\n                new NoData({ wrap: '.page-no-data' });\n            })();\n\n            // 超类型模块测试\n            (function () {\n                var Super = __webpack_require__(2);\n                new Super({ wrap: '.page-super-type' });\n                var Sub = __webpack_require__(86);\n                new Sub({ wrap: '.page-super-type' });\n                new Sub(); // constructorInherit里parameter去掉了对象引用,否则这个子类的默认参数wrap会变成上面.page-super-type(bug回忆)\n                var SuperEs6 = __webpack_require__(42);\n                new SuperEs6({ wrap: '.page-super-type' });\n                var SubEs6 = __webpack_require__(87);\n                new SubEs6({ wrap: '.page-super-type' });\n            })();\n\n            // 单选开关\n            (function () {\n                var Radio = __webpack_require__(88);\n                new Radio({\n                    wrap: '.page-radio-switch',\n                    callback: {\n                        click: function click(json) {\n                            console.log(json);\n                        }\n                    }\n                });\n            })();\n\n            // 表格\n            (function () {\n                var Table = __webpack_require__(89);\n                new Table({\n                    wrap: '.page-table',\n                    data: {\n                        header: [{\n                            content: '<div>header0</div>'\n                        }, {\n                            content: '<div>header1</div>'\n                        }, {\n                            content: '<div>header2</div>'\n                        }],\n                        body: [[{\n                            content: '<div>body0-0</div>'\n                        }, {\n                            content: '<div>body1-0</div>'\n                        }, {\n                            content: '<div>body2-0</div>'\n                        }], [{\n                            content: '<div>body0-1</div>'\n                        }, {\n                            content: '<div>body1-1</div>'\n                        }, {\n                            content: '<div>body2-1</div>'\n                        }], [{\n                            content: '<div>body0-2</div>'\n                        }, {\n                            content: '<div>body1-2</div>'\n                        }, {\n                            content: '<div>body2-2</div>'\n                        }]],\n                        footer: ''\n                    }\n                });\n            })();\n\n            // 星评\n            (function () {\n                __webpack_require__.e/* require.ensure */(1).then((function (require) {\n                    var Star = __webpack_require__(120);\n                    new Star({\n                        wrap: '.page-star',\n                        callback: {\n                            click: function click(json) {\n                                console.log(json);\n                            }\n                        }\n                    });\n                }).bind(null, __webpack_require__)).catch(__webpack_require__.oe);\n            })();\n        }\n    }]);\n\n    return Sub;\n}(Super);\n\nnew Sub();\n\n/***/ }),\n\n/***/ 44:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 83:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar tools = __webpack_require__(0); // 工具方法集合\nvar applications = __webpack_require__(1); // 应用方法集合\nvar Super = __webpack_require__(2); // 超类型(子类型继承的对象)\n\n// 子类型\nvar Sub = tools.constructorInherit(Super, {\n    // 回调\n    callback: {},\n    // 配置\n    config: {\n        status: 'loading', // 加载状态 loading(加载中) over(加载完毕)\n        positionMethod: '', // 模块的定位方式 'fixed'(相对于整个文档) 'absolute'(相对于外部容器)\n        positionLocation: 'center' // 模块的定位位置\n    },\n    // 数据\n    data: {}\n});\n\n// 内部模块的创建(覆盖超类型)\nSub.prototype.moduleDomCreate = function () {\n    var config = this.opts.config;\n    var moduleDomHtml = '';\n    var moduleDomClass = '';\n    var status = config.status;\n    var positionMethod = config.positionMethod;\n    var positionLocation = config.positionLocation;\n    // 加载中\n    if (status === 'loading') {\n        moduleDomClass = 'g-loading-run ';\n        // 相对文档居中\n        if (positionMethod === 'fixed') {\n            moduleDomClass += 'g-loading-fixed g-loading-' + positionLocation;\n        }\n        // 相对容器居中\n        if (positionMethod === 'absolute') {\n            moduleDomClass += 'g-loading-absolute g-loading-' + positionLocation;\n        }\n        moduleDomHtml = '\\n            <div class=\"g-loading-body\">\\n                <div class=\"g-loading-run-icon iconfont icon-loading\"></div>\\n            </div>\\n        ';\n    }\n    // 加载完毕\n    if (status === 'over') {\n        moduleDomClass = 'g-loading-over ';\n        // 相对文档居中\n        if (positionMethod === 'fixed') {\n            moduleDomClass += 'g-loading-fixed g-loading-' + positionLocation;\n        }\n        // 相对容器居中\n        if (positionMethod === 'absolute') {\n            moduleDomClass += 'g-loading-absolute g-loading-' + positionLocation;\n        }\n        moduleDomHtml = '\\n            <div class=\"g-loading-body\">\\n                <div class=\"g-loading-over-icon iconfont icon-no-data\"></div>\\n                <div class=\"g-loading-over-text\">\\u6CA1\\u6709\\u6570\\u636E\\u4E86</div>\\n            </div>\\n        ';\n    }\n    // 模块创建\n    this.moduleDom = applications.createElement({\n        style: this.opts.config.moduleDomStyle,\n        customAttribute: this.opts.config.moduleDomCustomAttribute,\n        attribute: {\n            className: 'g-loading ' + moduleDomClass,\n            innerHTML: moduleDomHtml\n        }\n    });\n};\n\n// 功能(覆盖超类型)\nSub.prototype.power = function () {\n    // 功能重写待续...\n};\n\nmodule.exports = Sub;\n\n/***/ }),\n\n/***/ 84:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar tools = __webpack_require__(0); // 工具方法集合\nvar applications = __webpack_require__(1); // 应用方法集合\nvar Super = __webpack_require__(2); // 超类型(子类型继承的对象)\n\n// 默认数据\nvar defaultData = {\n    nowCount: 10, // 当前页的数据条数\n    allCount: 100, // 数据总条数\n    nowPage: 1, // 当前页\n    allPage: null // 总页数\n};\ndefaultData.allPage = Math.ceil(defaultData.allCount / defaultData.nowCount);\n\n// 子类型\nvar Sub = tools.constructorInherit(Super, {\n    // 回调\n    callback: {\n        // 上一页的回调\n        prevPage: function prevPage() {},\n        // 下一页的回调\n        nextPage: function nextPage() {},\n        // 选择某一页的回调\n        selectPage: function selectPage() {}\n    },\n    // 配置\n    config: {},\n    // 数据\n    data: defaultData\n});\n\n// 内部模块的创建(覆盖超类型)\nSub.prototype.moduleDomCreate = function () {\n    this.moduleDom = applications.createElement({\n        style: this.opts.config.moduleDomStyle,\n        customAttribute: this.opts.config.moduleDomCustomAttribute,\n        attribute: {\n            className: 'g-pagination',\n            innerHTML: '\\n                <div class=\"g-pagination-text\">\\u7B2C</div>\\n                <div class=\"g-pagination-now-page\">\\n                    <label class=\"g-select\">\\n                        <span class=\"g-select-wrap\">\\n                            <select class=\"g-select-select\">\\n                                ' + this.renderOption() + '\\n                            </select>\\n                            <span class=\"g-select-mark iconfont icon-select\"></span>\\n                        </span>\\n                    </label>\\n                </div>\\n                <div class=\"g-pagination-text\">\\u9875</div>\\n                <a href=\"javascript:;\" class=\"g-pagination-btn g-pagination-btn-inactive iconfont icon-prev\"></a>\\n                <a href=\"javascript:;\" class=\"g-pagination-btn iconfont icon-next\"></a>\\n            '\n        }\n    });\n    this.prevDom = this.moduleDom.querySelectorAll('.g-pagination-btn')[0]; // 上一页的按钮\n    this.nextDom = this.moduleDom.querySelectorAll('.g-pagination-btn')[1]; // 下一页的按钮\n    this.btnInactiveClass = 'g-pagination-btn-inactive'; // 上一页和下一页的禁用状态\n    this.selectDom = this.moduleDom.querySelector('.g-pagination-now-page .g-select-select'); // 选择某一页的按钮\n};\n\n// 渲染第几页里面的页码\nSub.prototype.renderOption = function () {\n    var html = '';\n    for (var i = 0; i < this.opts.data.allPage; i++) {\n        html += '<option value=\"' + (i + 1) + '\">' + (i + 1) + '</option>';\n    }\n    return html;\n};\n\n// 功能(覆盖超类型)\nSub.prototype.power = function () {\n    var self = this;\n    var data = this.opts.data;\n    if (data.nowPage === 1) {\n        this.prevPageDisable();\n    }\n    if (data.nowPage === data.allPage) {\n        this.nextPageDisable();\n    }\n\n    this.prevDom.addEventListener('click', function () {\n        if (!this.classList.contains(self.btnInactiveClass)) {\n            self.prevPage();\n        }\n    });\n\n    this.nextDom.addEventListener('click', function () {\n        if (!this.classList.contains(self.btnInactiveClass)) {\n            self.nextPage();\n        }\n    });\n\n    this.selectDom.addEventListener('change', function () {\n        self.selectPage();\n    });\n};\n\n// 上一页\nSub.prototype.prevPage = function () {\n    var data = this.opts.data;\n    if (data.nowPage > 1) {\n        data.nowPage--;\n        var oldChecked = this.selectDom.querySelector('option:checked');\n        if (oldChecked.previousElementSibling) {\n            oldChecked.selected = false;\n            oldChecked.previousElementSibling.selected = true;\n        }\n        this.nextPageEnable();\n        this.opts.callback.prevPage(this);\n    }\n    if (data.nowPage === 1) {\n        this.prevPageDisable();\n    }\n    console.log(data);\n};\n\n// 下一页\nSub.prototype.nextPage = function () {\n    var data = this.opts.data;\n    if (data.nowPage < data.allPage) {\n        data.nowPage++;\n        var oldChecked = this.selectDom.querySelector('option:checked');\n        if (oldChecked.nextElementSibling) {\n            oldChecked.selected = false;\n            oldChecked.nextElementSibling.selected = true;\n        }\n        this.prevPageEnable();\n        this.opts.callback.nextPage(this);\n    }\n    if (data.nowPage === data.allPage) {\n        this.nextPageDisable();\n    }\n    console.log(data);\n};\n\n// 选择第几页\nSub.prototype.selectPage = function () {\n    var data = this.opts.data;\n    data.nowPage = this.selectDom.value;\n    this.nextPageEnable();\n    this.prevPageEnable();\n    if (data.nowPage === 1) {\n        this.prevPageDisable();\n    }\n    if (data.nowPage === data.allPage) {\n        this.nextPageDisable();\n    }\n    this.opts.callback.selectPage(this);\n    console.log(data);\n};\n\n// 上一页禁用\nSub.prototype.prevPageDisable = function () {\n    this.prevDom.classList.add(this.btnInactiveClass);\n};\n\n// 上一页启用\nSub.prototype.prevPageEnable = function () {\n    this.prevDom.classList.remove(this.btnInactiveClass);\n};\n\n// 下一页禁用\nSub.prototype.nextPageDisable = function () {\n    this.nextDom.classList.add(this.btnInactiveClass);\n};\n\n// 下一页启用\nSub.prototype.nextPageEnable = function () {\n    this.nextDom.classList.remove(this.btnInactiveClass);\n};\n\nmodule.exports = Sub;\n\n/***/ }),\n\n/***/ 85:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar tools = __webpack_require__(0); // 工具方法集合\nvar applications = __webpack_require__(1); // 应用方法集合\nvar Super = __webpack_require__(2); // 超类型(子类型继承的对象)\n\n// 子类型\nvar Sub = tools.constructorInherit(Super, {\n    // 回调\n    callback: {},\n    // 配置\n    config: {\n        button: {\n            isShowIcon: false\n        }\n    },\n    // 数据\n    data: {\n        icon: 'icon-no-data',\n        text: '没有数据',\n        button: {\n            icon: 'icon-home',\n            text: '回首页',\n            href: '/'\n        }\n    }\n});\n\n// 内部模块的创建(覆盖超类型)\nSub.prototype.moduleDomCreate = function () {\n    var data = this.opts.data;\n    var buttonIconHtml = '';\n    if (this.opts.config.button.isShowIcon) {\n        buttonIconHtml = '<div class=\"g-button-icon iconfont ' + data.button.icon + '\"></div>';\n    }\n    this.moduleDom = applications.createElement({\n        style: this.opts.config.moduleDomStyle,\n        customAttribute: this.opts.config.moduleDomCustomAttribute,\n        attribute: {\n            className: 'g-no-data',\n            innerHTML: '\\n                <div class=\"g-no-data-icon iconfont ' + data.icon + '\"></div>\\n                <div class=\"g-no-data-text\">' + data.text + '</div>\\n                <a class=\"g-no-data-button g-button\" href=\"' + data.button.href + '\">\\n                    ' + buttonIconHtml + '\\n                    <div class=\"g-button-text\">' + data.button.text + '</div>\\n                </a>\\n            '\n        }\n    });\n};\n\n// 功能(覆盖超类型)\nSub.prototype.power = function () {\n    // 功能重写待续...\n};\n\nmodule.exports = Sub;\n\n/***/ }),\n\n/***/ 86:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar tools = __webpack_require__(0); // 工具方法集合\nvar applications = __webpack_require__(1); // 应用方法集合\nvar Super = __webpack_require__(2); // 超类型(子类型继承的对象)\n\n// 子类型\nvar Sub = tools.constructorInherit(Super, {\n    // 回调\n    callback: {},\n    // 配置\n    config: {},\n    // 数据\n    data: {}\n});\n\n// 内部模块的创建(覆盖超类型)\nSub.prototype.moduleDomCreate = function () {\n    this.moduleDom = applications.createElement({\n        style: this.opts.config.moduleDomStyle,\n        customAttribute: this.opts.config.moduleDomCustomAttribute,\n        attribute: {\n            className: 'g-sub-type',\n            innerHTML: '\\n                <div class=\"g-sub-type-text\" style=\"text-align: center;\">\\u5468\\u534E\\u98DE\\u7231\\u4FAF\\u4E3D\\u6770,\\u4FAF\\u4E3D\\u6770\\u7231\\u5468\\u534E\\u98DEsub-es5</div>\\n            '\n        }\n    });\n};\n\n// 功能(覆盖超类型)\nSub.prototype.power = function () {\n    // 功能重写待续...\n};\n\nmodule.exports = Sub;\n\n/***/ }),\n\n/***/ 87:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar tools = __webpack_require__(0); // 工具方法集合\nvar applications = __webpack_require__(1); // 应用方法集合\nvar Super = __webpack_require__(42); // 超类型(子类型继承的对象)\n\n// 子类型\n\nvar Sub = function (_Super) {\n    _inherits(Sub, _Super);\n\n    function Sub(json) {\n        _classCallCheck(this, Sub);\n\n        return _possibleConstructorReturn(this, (Sub.__proto__ || Object.getPrototypeOf(Sub)).call(this, tools.extend({\n            defaults: {\n                // 回调\n                callback: {},\n                // 配置\n                config: {},\n                // 数据\n                data: {}\n            },\n            inherits: json\n        })));\n    }\n\n    // 内部模块的创建(覆盖超类型)\n\n\n    _createClass(Sub, [{\n        key: 'moduleDomCreate',\n        value: function moduleDomCreate() {\n            this.moduleDom = applications.createElement({\n                style: this.opts.config.moduleDomStyle,\n                customAttribute: this.opts.config.moduleDomCustomAttribute,\n                attribute: {\n                    className: 'g-sub-type-es6',\n                    innerHTML: '\\n                    <div class=\"g-sub-type-es6-text\" style=\"text-align: center;\">\\u5468\\u534E\\u98DE\\u7231\\u4FAF\\u4E3D\\u6770,\\u4FAF\\u4E3D\\u6770\\u7231\\u5468\\u534E\\u98DEsub-es6</div>\\n                '\n                }\n            });\n        }\n\n        // 功能重写(覆盖超类型)\n\n    }, {\n        key: 'power',\n        value: function power() {\n            // 功能重写待续...\n        }\n    }]);\n\n    return Sub;\n}(Super);\n\nmodule.exports = Sub;\n\n/***/ }),\n\n/***/ 88:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar tools = __webpack_require__(0); // 工具方法集合\nvar applications = __webpack_require__(1); // 应用方法集合\nvar Super = __webpack_require__(2); // 超类型(子类型继承的对象)\n\n// 子类型\nvar Sub = tools.constructorInherit(Super, {\n    // 回调\n    callback: {\n        click: function click() {}\n    },\n    // 配置\n    config: {\n        isHand: false, // 是否手动控制\n        status: 'on', // 状态\n        txt: {\n            on: '已开启',\n            off: '已关闭'\n        }\n    },\n    // 数据\n    data: {}\n});\n\n// 内部模块的创建(覆盖超类型)\nSub.prototype.moduleDomCreate = function () {\n    var config = this.opts.config;\n    this.moduleDomActiveClass = 'g-radio-switch-active';\n    var isOn = '';\n    if (config.status === 'on') {\n        isOn = this.moduleDomActiveClass;\n    }\n    this.moduleDom = applications.createElement({\n        style: config.moduleDomStyle,\n        customAttribute: config.moduleDomCustomAttribute,\n        attribute: {\n            className: 'g-radio-switch ' + isOn,\n            innerHTML: '\\n                <div class=\"g-radio-switch-wrap\">\\n                    <div class=\"g-radio-switch-round\"></div>\\n                </div>\\n                <div class=\"g-radio-switch-text\">' + config.txt[config.status] + '</div>\\n            '\n        }\n    });\n};\n\n// 功能(覆盖超类型)\nSub.prototype.power = function () {\n    var self = this;\n    var config = this.opts.config;\n    this.moduleDom.addEventListener('click', function () {\n        if (!config.isHand) {\n            if (!self.isOn()) {\n                self.on();\n            } else {\n                self.off();\n            }\n        }\n        self.opts.callback.click({ status: config.status });\n    });\n};\n\n// 是否处于开启状态\nSub.prototype.isOn = function () {\n    return this.moduleDom.classList.contains(this.moduleDomActiveClass);\n};\n\n// 开启\nSub.prototype.on = function () {\n    var config = this.opts.config;\n    if (!this.isOn()) {\n        this.moduleDom.classList.add(this.moduleDomActiveClass);\n        config.status = 'on';\n        this.moduleDom.querySelector('.g-radio-switch-text').innerHTML = '' + config.txt[config.status];\n    }\n};\n\n// 关闭\nSub.prototype.off = function () {\n    var config = this.opts.config;\n    if (this.isOn()) {\n        this.moduleDom.classList.remove(this.moduleDomActiveClass);\n        config.status = 'off';\n        this.moduleDom.querySelector('.g-radio-switch-text').innerHTML = '' + config.txt[config.status];\n    }\n};\n\nmodule.exports = Sub;\n\n/***/ }),\n\n/***/ 89:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar tools = __webpack_require__(0); // 工具方法集合\nvar applications = __webpack_require__(1); // 应用方法集合\nvar Super = __webpack_require__(2); // 超类型(子类型继承的对象)\n\n// 子类型\nvar Sub = tools.constructorInherit(Super, {\n    // 回调\n    callback: {},\n    // 配置\n    config: {},\n    // 数据\n    data: {\n        header: [{ content: 'undefined-header0' }, { content: 'undefined-header1' }, { content: 'undefined-header2' }],\n        body: [[{ content: 'undefined-body0-0' }, { content: 'undefined-body0-1' }, { content: 'undefined-body0-2' }]],\n        footer: ''\n    }\n});\n\n// 内部模块的创建(覆盖超类型)\nSub.prototype.moduleDomCreate = function () {\n    this.moduleDom = applications.createElement({\n        style: this.opts.config.moduleDomStyle,\n        customAttribute: this.opts.config.moduleDomCustomAttribute,\n        attribute: {\n            className: 'g-table',\n            innerHTML: '\\n                <div class=\"g-table-header\">\\n                    <div class=\"g-table-row\">\\n                        ' + this.moduleDomCreateHeader() + '\\n                    </div>\\n                </div>\\n                <div class=\"g-table-body\">\\n                    ' + this.moduleDomCreateBody() + '\\n                </div>\\n                <div class=\"g-table-footer\">\\n                    ' + this.moduleDomCreateFooter() + '\\n                </div>\\n            '\n        }\n    });\n};\n\nSub.prototype.moduleDomCreateHeader = function () {\n    var html = '';\n    this.opts.data.header.forEach(function (v) {\n        html += '\\n            <div class=\"g-table-col\">\\n                <div class=\"g-table-col-wrap\">\\n                    ' + v.content + '\\n                </div>\\n            </div>\\n        ';\n    });\n    return html;\n};\n\nSub.prototype.moduleDomCreateBody = function () {\n    var html = '';\n    this.opts.data.body.forEach(function (v0) {\n        var row = '';\n        v0.forEach(function (v1) {\n            row += '\\n                <div class=\"g-table-col\">\\n                    <div class=\"g-table-col-wrap\">\\n                        ' + v1.content + '\\n                    </div>\\n                </div>\\n            ';\n        });\n        html += '<div class=\"g-table-row\">' + row + '</div>';\n    });\n    return html;\n};\n\nSub.prototype.moduleDomCreateFooter = function () {\n    return this.opts.data.footer;\n};\n\n// 功能(覆盖超类型)\nSub.prototype.power = function () {\n    // 功能重写待续...\n};\n\nmodule.exports = Sub;\n\n/***/ })\n\n},[43]);\n\n\n// WEBPACK FOOTER //\n// js/pages/dev-components.2d36a07123dd01a86c4d.js","const tools = require('../utils/tools'); // 工具方法集合\nconst applications = require('../utils/applications'); // 应用方法集合\nconst Super = require('../components-dom-super/g-super'); // 超类型(子类型继承的对象)\nconst TouchSlide = require('../plugs/touch-slide'); // 轮播图插件\n\n// 子类型\nconst Sub = tools.constructorInherit(Super, {\n    // 回调\n    callback: {\n        startFun: function () {\n        },\n        endFun: function () {\n        },\n    },\n    // 配置\n    config: {\n        isShowHref: true, // 是否有跳转\n        // TouchSlide插件的配置\n        touchSlide: {\n            slideCell: '', // 外部容器,这个值会在底部进行覆盖,因为在这里没办法获取this\n            mainCell: '.g-slide-body', // 切换元素的包裹层对象\n            titCell: '.g-slide-header .g-slide-items', // 导航元素对象\n            effect: 'leftLoop', // 效果'left' 'leftLoop'\n            autoPlay: true, // 自动播放\n            delayTime: 200, // 切换一次的持续时间\n            interTime: 3000, // 多久切换一次\n            startFun: function () {\n                console.log('此处的函数会被覆盖,请在callback里执行回调');\n            },\n            endFun: function () {\n                console.log('此处的函数会被覆盖,请在callback里执行回调');\n            },\n            defaultIndex: 0, // 默认的当前位置索引\n            switchLoadClass: '.pre-load', // 预加载的class\n            switchLoad: 'data-src', // 预加载的属性\n        },\n    },\n    // 数据\n    data: {\n        items: [\n            {\n                img: {\n                    width: 0,\n                    height: 0,\n                    src: 'http://img1.imgtn.bdimg.com/it/u=1056872014,4038868309&fm=23&gp=0.jpg',\n                },\n                href: '',\n            },\n        ],\n    },\n});\n\n// 内部模块的创建(覆盖超类型)\nSub.prototype.moduleDomCreate = function () {\n    this.moduleDom = applications.createElement({\n        style: this.opts.config.moduleDomStyle,\n        customAttribute: this.opts.config.moduleDomCustomAttribute,\n        attribute: {\n            className: 'g-slide',\n            innerHTML: `\n                ${this.renderHeader()}\n                ${this.renderBody()}\n            `,\n        },\n    });\n};\n\nSub.prototype.renderHeader = function () {\n    const self = this;\n    let html = '';\n    const data = self.opts.data;\n    let className = '';\n    data.items.forEach(function (v, i) {\n        if (i === self.opts.config.touchSlide.defaultIndex) {\n            className = 'on';\n        }\n        html += `<div class=\"g-slide-items ${className}\"></div>`;\n    });\n    return `<div class=\"g-slide-header\">${html}</div>`;\n};\n\nSub.prototype.renderBody = function () {\n    const self = this;\n    let html = '';\n    const data = self.opts.data;\n    data.items.forEach(function (v) {\n        if (self.opts.config.isShowHref) {\n            html += `<a href=\"${v.href || 'javascript:;'}\" class=\"g-slide-items pre-load\" data-src=\"${v.img.src}\"></a>`;\n        } else {\n            html += `<a class=\"g-slide-items pre-load\" data-src=\"${v.img.src}\"></a>`;\n        }\n    });\n    return `<div class=\"g-slide-body\">${html}</div>`;\n};\n\n// 功能(覆盖超类型)\nSub.prototype.power = function () {\n    const self = this;\n    const callback = self.opts.callback;\n    const config = self.opts.config;\n    const touchSlide = config.touchSlide;\n    touchSlide.slideCell = self.opts.wrap;// 外部容器,必须是id\n    touchSlide.startFun = function (i) {\n        // 因为以下功能在插件本身进行了实现(本人对touch-slide插件进行了小修改),所以这里就注释了\n        // var allImg = self.moduleDom.querySelectorAll('.g-slide-body .g-slide-items');\n        // var nowIndex = ( i + 1);\n        // if (touchSlide.effect == 'left') {\n        //     nowIndex = i;\n        // }\n        // var nowImg = allImg[nowIndex];\n        // var prevImg = allImg[nowIndex - 1];\n        // var nextImg = allImg[nowIndex + 1];\n        // nowImg.style.backgroundImage = `url(${nowImg.dataset.src})`;\n        // prevImg && (prevImg.style.backgroundImage = `url(${prevImg.dataset.src})`);\n        // nextImg && (nextImg.style.backgroundImage = `url(${nextImg.dataset.src})`);\n        callback.startFun({self: self, index: i});\n    };\n    touchSlide.endFun = function (i) {\n        callback.endFun({self: self, index: i});\n    };\n    TouchSlide(self.opts.config.touchSlide);\n};\n\nmodule.exports = Sub;\n\n\n\n// WEBPACK FOOTER //\n// ./app/phone/assets/js/components-dom/g-slide.js","/*!\r\n * TouchSlide v1.1\r\n * javascript触屏滑动特效插件，移动端滑动特效，触屏焦点图，触屏Tab切换，触屏多图切换等\r\n * 详尽信息请看官网：http://www.SuperSlide2.com/TouchSlide/\r\n *\r\n * Copyright 2013 大话主席\r\n *\r\n * 请尊重原创，保留头部版权\r\n * 在保留版权的前提下可应用于个人或商业用途\r\n\r\n * 1.1 宽度自适应（修复安卓横屏时滑动范围不变的bug）\r\n */\r\n\r\n/*\r\n * 本人对此文件进行了稍微改动,还请见谅\r\n * 1.支持传入class和dom节点\r\n * 2.样式修改成flex布局\r\n * 3.把一些不规范的语法警告提示修正\r\n * 4.添加预加载功能pre-load,去掉插件自带的懒加载功能\r\n * 5.给主体区域的切换每一项加上className\r\n * */\r\n\r\nvar TouchSlide = function (a) {\r\n    a = a || {};\r\n    var opts = {\r\n        slideCell: a.slideCell || \"#touchSlide\", //运行效果主对象，必须用id！，例如 slideCell:\"#touchSlide\"\r\n        titCell: a.titCell || \".hd li\", // 导航对象，当自动分页设为true时为“导航对象包裹层”\r\n        mainCell: a.mainCell || \".bd\", // 切换对象包裹层\r\n        effect: a.effect || \"left\", // 效果，支持 left、leftLoop\r\n        autoPlay: a.autoPlay || false, // 自动播放\r\n        delayTime: a.delayTime || 200, // 效果持续时间\r\n        interTime: a.interTime || 2500, // 自动运行间隔\r\n        defaultIndex: a.defaultIndex || 0, // 默认的当前位置索引。0是第一个； defaultIndex:1 时，相当于从第2个开始执行\r\n        titOnClassName: a.titOnClassName || \"on\", // 当前导航对象添加的className\r\n        autoPage: a.autoPage || false, // 自动分页，当为true时titCell为“导航对象包裹层”\r\n        prevCell: a.prevCell || \".prev\", // 前一页按钮\r\n        nextCell: a.nextCell || \".next\", // 后一页按钮\r\n        pageStateCell: a.pageStateCell || \".pageState\", // 分页状态对象，用于显示分页状态，例如：2/3\r\n        pnLoop: a.pnLoop == 'undefined ' ? true : a.pnLoop, // 前后按钮点击是否继续执行效果，当为最前/后页是会自动添加“prevStop”/“nextStop”控制样色\r\n        startFun: a.startFun || null, // 每次切换效果开始时执行函数，用于处理特殊情况或创建更多效果。用法 satrtFun:function(i,c){ }； 其中i为当前分页，c为总页数\r\n        endFun: a.endFun || null, // 每次切换效果结束时执行函数，用于处理特殊情况或创建更多效果。用法 endFun:function(i,c){ }； 其中i为当前分页，c为总页数\r\n        switchLoadClass: a.switchLoadClass || '.pre-load',//预加载的class\r\n        switchLoad: a.switchLoad || 'data-src' //预加载的属性\r\n    };\r\n    var slideCell = null;\r\n    //如果是字符串\r\n    if (Object.prototype.toString.call(opts.slideCell).slice(8, -1).toLowerCase() == 'string') {\r\n        slideCell = document.querySelector(opts.slideCell);\r\n    }\r\n    //如果是dom节点(一个元素)    原生的\r\n    if (opts.slideCell.nodeType == 1) {\r\n        slideCell = opts.slideCell;\r\n    }\r\n    /*\r\n     * 如果是dom集合(一组元素)    HtmlCollection(通过getElementsBy系列获取到的)\r\n     * 如果是dom集合(一组元素)    NodeList(通过querySelectorAll获取到的)\r\n     * */\r\n    if (Object.prototype.toString.call(opts.slideCell).slice(8, -1).toLowerCase() == 'htmlcollection' || Object.prototype.toString.call(opts.slideCell).slice(8, -1).toLowerCase() == 'nodelist') {\r\n        slideCell = opts.slideCell[0];\r\n    }\r\n    if (!slideCell) {\r\n        return;\r\n    }\r\n    //简单模拟jquery选择器\r\n    var obj = function (str, parEle) {\r\n        str = str.split(\" \");\r\n        var par = [];\r\n        parEle = parEle || document;\r\n        var retn = [parEle];\r\n        for (var attr in str) {\r\n            if (str.hasOwnProperty(attr)) {\r\n                if (str[attr].length != 0) {\r\n                    par.push(str[attr]);\r\n                }\r\n            }\r\n        }\r\n        //去掉重复空格\r\n        for (var i in par) {\r\n            if (par.hasOwnProperty(i)) {\r\n                if (retn.length == 0) {\r\n                    return false;\r\n                }\r\n                var _retn = [];\r\n                for (var r in retn) {\r\n                    if (retn.hasOwnProperty(r)) {\r\n                        if (par[i][0] == \"#\") {\r\n                            _retn.push(document.getElementById(par[i].replace(\"#\", \"\")));\r\n                        } else if (par[i][0] == \".\") {\r\n                            var tag = retn[r].getElementsByTagName('*');\r\n                            for (var j = 0; j < tag.length; j++) {\r\n                                var cln = tag[j].className;\r\n                                if (cln && cln.search && cln.search(new RegExp(\"\\\\b\" + par[i].replace(\".\", \"\") + \"\\\\b\")) != -1) {\r\n                                    _retn.push(tag[j]);\r\n                                }\r\n                            }\r\n                        } else {\r\n                            var tag2 = retn[r].getElementsByTagName(par[i]);\r\n                            for (var k = 0; k < tag2.length; k++) {\r\n                                _retn.push(tag2[k])\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                retn = _retn;\r\n            }\r\n        }\r\n        return retn.length == 0 || retn[0] == parEle ? false : retn;\r\n    };\r\n    // 创建包裹层\r\n    var wrap = function (el, v) {\r\n        var tmp = document.createElement('div');\r\n        tmp.innerHTML = v;\r\n        tmp = tmp.children[0];\r\n        var _el = el.cloneNode(true);\r\n        tmp.appendChild(_el);\r\n        el.parentNode.replaceChild(tmp, el);\r\n        conBox = _el; // 重置conBox\r\n        return tmp;\r\n    };\r\n    // class处理\r\n    var addClass = function (ele, className) {\r\n        if (!ele || !className || (ele.className && ele.className.search(new RegExp(\"\\\\b\" + className + \"\\\\b\")) != -1)) {\r\n            return;\r\n        }\r\n        ele.className += (ele.className ? \" \" : \"\") + className;\r\n    };\r\n    var removeClass = function (ele, className) {\r\n        if (!ele || !className || (ele.className && ele.className.search(new RegExp(\"\\\\b\" + className + \"\\\\b\")) == -1)) {\r\n            return;\r\n        }\r\n        ele.className = ele.className.replace(new RegExp(\"\\\\s*\\\\b\" + className + \"\\\\b\", \"g\"), \"\");\r\n    };\r\n    //全局对象\r\n    var effect = opts.effect;\r\n    var prevBtn = obj(opts.prevCell, slideCell)[0];\r\n    var nextBtn = obj(opts.nextCell, slideCell)[0];\r\n    var pageState = obj(opts.pageStateCell)[0];\r\n    var conBox = obj(opts.mainCell, slideCell)[0];//内容元素父层对象\r\n    if (!conBox) {\r\n        return;\r\n    }\r\n    var conBoxSize = conBox.children.length;\r\n    var navObj = obj(opts.titCell, slideCell);//导航子元素结合\r\n    var navObjSize = navObj ? navObj.length : conBoxSize;\r\n    /*字符串转换*/\r\n    var index = parseInt(opts.defaultIndex);\r\n    var delayTime = parseInt(opts.delayTime);\r\n    var interTime = parseInt(opts.interTime);\r\n    var autoPlay = (!(opts.autoPlay == \"false\" || opts.autoPlay == false));\r\n    var autoPage = (!(opts.autoPage == \"false\" || opts.autoPage == false));\r\n    var loop = (!(opts.pnLoop == \"false\" || opts.pnLoop == false));\r\n    var oldIndex = index;\r\n    var inter = null;// autoPlay的setInterval\r\n    var timeout = null; // leftLoop的setTimeout\r\n    var endTimeout = null;  //translate的setTimeout\r\n    var startX = 0;\r\n    var startY = 0;\r\n    var distX = 0;\r\n    var distY = 0;\r\n    //var dist = 0; //手指滑动距离\r\n    var isTouchPad = (/hp-tablet/gi).test(navigator.appVersion);\r\n    var hasTouch = 'ontouchstart' in window && !isTouchPad;\r\n    var touchStart = hasTouch ? 'touchstart' : 'mousedown';\r\n    var touchMove = hasTouch ? 'touchmove' : '';\r\n    var touchEnd = hasTouch ? 'touchend' : 'mouseup';\r\n    var slideW = conBox.parentNode.clientWidth;// mainCell滑动距离\r\n    var twCell;\r\n    var scrollY;\r\n    var tempSize = conBoxSize;\r\n    //处理分页\r\n    if (navObjSize == 0) {\r\n        navObjSize = conBoxSize;\r\n    }\r\n    if (autoPage) {\r\n        navObjSize = conBoxSize;\r\n        navObj = navObj[0];\r\n        navObj.innerHTML = \"\";\r\n        var str = \"\";\r\n\r\n        if (opts.autoPage == true || opts.autoPage == \"true\") {\r\n            for (var i = 0; i < navObjSize; i++) {\r\n                str += \"<li>\" + (i + 1) + \"</li>\"\r\n            }\r\n        }\r\n        else {\r\n            for (var x = 0; x < navObjSize; x++) {\r\n                str += opts.autoPage.replace(\"$\", (x + 1))\r\n            }\r\n        }\r\n        navObj.innerHTML = str;\r\n        navObj = navObj.children;//重置navObj\r\n    }\r\n    if (effect == \"leftLoop\") {\r\n        tempSize += 2;\r\n        conBox.appendChild(conBox.children[0].cloneNode(true));\r\n        conBox.insertBefore(conBox.children[conBoxSize - 1].cloneNode(true), conBox.children[0]);\r\n    }\r\n    twCell = wrap(conBox, '<div class=\"tempWrap\" style=\"height:inherit;overflow:hidden; position:relative;\"></div>');\r\n    conBox.style.cssText = \"display:flex;width:\" + tempSize * slideW + \"px;\" + \"position:relative;overflow:hidden;padding:0;margin:0;\";\r\n    for (var y = 0; y < tempSize; y++) {\r\n        conBox.children[y].style.cssText = \"height:inherit;display:flex;align-items: center;justify-content: center;width:\" + slideW + \"px\"\r\n    }\r\n    var doStartFun = function () {\r\n        if (typeof opts.startFun == 'function') {\r\n            opts.startFun(index, navObjSize)\r\n        }\r\n    };\r\n    var doEndFun = function () {\r\n        if (typeof opts.endFun == 'function') {\r\n            opts.endFun(index, navObjSize)\r\n        }\r\n    };\r\n    //动态设置滑动宽度\r\n    var orientationChange = function () {\r\n        slideW = twCell.clientWidth;\r\n        conBox.style.width = tempSize * slideW + \"px\";\r\n        for (var i = 0; i < tempSize; i++) {\r\n            conBox.children[i].style.width = slideW + \"px\";\r\n        }\r\n        var ind = effect == \"leftLoop\" ? index + 1 : index;\r\n        translate(-ind * slideW, 0);\r\n    };\r\n    window.addEventListener(\"resize\", orientationChange, false);\r\n    //滑动效果\r\n    var translate = function (dist, speed, ele) {\r\n        if (!!ele) {\r\n            ele = ele.style;\r\n        } else {\r\n            ele = conBox.style;\r\n        }\r\n        ele.webkitTransitionDuration = ele.MozTransitionDuration = ele.msTransitionDuration = ele.OTransitionDuration = ele.transitionDuration = speed + 'ms';\r\n        ele.webkitTransform = 'translate(' + dist + 'px,0)' + 'translateZ(0)';\r\n        ele.msTransform = ele.MozTransform = ele.OTransform = 'translateX(' + dist + 'px)';\r\n    };\r\n    //效果函数\r\n    var doPlay = function (isTouch) {\r\n        switch (effect) {\r\n            case \"left\":\r\n                if (index >= navObjSize) {\r\n                    index = isTouch ? index - 1 : 0;\r\n                } else if (index < 0) {\r\n                    index = isTouch ? 0 : navObjSize - 1;\r\n                }\r\n                translate((-index * slideW), delayTime);\r\n                oldIndex = index;\r\n                break;\r\n            case \"leftLoop\":\r\n                translate(-(index + 1) * slideW, delayTime);\r\n                if (index == -1) {\r\n                    timeout = setTimeout(function () {\r\n                        translate(-navObjSize * slideW, 0);\r\n                    }, delayTime);\r\n                    index = navObjSize - 1;\r\n                } else if (index == navObjSize) {\r\n                    timeout = setTimeout(function () {\r\n                        translate(-slideW, 0);\r\n                    }, delayTime);\r\n                    index = 0;\r\n                }\r\n                oldIndex = index;\r\n                break;\r\n\r\n        }\r\n        //预加载\r\n        (function () {\r\n            var nowIndex = effect == \"leftLoop\" ? index + 1 : index;\r\n            var allImage = conBox.querySelectorAll(opts.switchLoadClass);\r\n            var changeImagesSrc = function (img) {\r\n                if (img) {\r\n                    var imgSwitchSrc = img.getAttribute(opts.switchLoad);\r\n                    if (!imgSwitchSrc) {\r\n                        return false;\r\n                    }\r\n                    if (img.tagName.toLowerCase() == 'img') {\r\n                        img.src = imgSwitchSrc;\r\n                    } else {\r\n                        img.style.backgroundImage = `url(${imgSwitchSrc})`;\r\n                    }\r\n                }\r\n            };\r\n            if (allImage.length > 0) {\r\n                changeImagesSrc(allImage[nowIndex]);\r\n                changeImagesSrc(allImage[nowIndex - 1]);\r\n                changeImagesSrc(allImage[nowIndex + 1]);\r\n            }\r\n        })();\r\n        doStartFun();\r\n        endTimeout = setTimeout(function () {\r\n            doEndFun();\r\n        }, delayTime);\r\n        //给按钮区域的切换每一项加上className\r\n        for (var i = 0; i < navObjSize; i++) {\r\n            removeClass(navObj[i], opts.titOnClassName);\r\n            if (i == index) {\r\n                addClass(navObj[i], opts.titOnClassName);\r\n            }\r\n        }\r\n        /*\r\n         * 给主体区域的切换每一项加上className\r\n         * 注:如果想配合className写css3小效果,建议使用effect属性的left值\r\n         * 否则切换到尾帧和切换到首帧时,视觉上的体验不好\r\n         * */\r\n        // (function () {\r\n        //     var nowJ = effect == \"leftLoop\" ? index + 1 : index;\r\n        //     for (var j = 0; j < conBox.children.length; j++) {\r\n        //         removeClass(conBox.children[j], opts.titOnClassName);\r\n        //         if (j == nowJ) {\r\n        //             addClass(conBox.children[j], opts.titOnClassName);\r\n        //         }\r\n        //     }\r\n        // })();\r\n        //loop控制是否继续循环\r\n        if (loop == false) {\r\n            removeClass(nextBtn, \"nextStop\");\r\n            removeClass(prevBtn, \"prevStop\");\r\n            if (index == 0) {\r\n                addClass(prevBtn, \"prevStop\")\r\n            } else if (index == navObjSize - 1) {\r\n                addClass(nextBtn, \"nextStop\")\r\n            }\r\n        }\r\n        if (pageState) {\r\n            pageState.innerHTML = \"<span>\" + (index + 1) + \"</span>/\" + navObjSize;\r\n        }\r\n    };\r\n    //初始化执行\r\n    doPlay();\r\n    //自动播放\r\n    if (autoPlay) {\r\n        inter = setInterval(function () {\r\n            index++;\r\n            doPlay()\r\n        }, interTime);\r\n    }\r\n    //点击事件\r\n    if (navObj) {\r\n        for (var z = 0; z < navObjSize; z++) {\r\n            (function () {\r\n                var j = z;\r\n                navObj[j].addEventListener('click', function () {\r\n                    clearTimeout(timeout);\r\n                    clearTimeout(endTimeout);\r\n                    index = j;\r\n                    doPlay();\r\n                })\r\n            })()\r\n        }\r\n    }\r\n    if (nextBtn) {\r\n        nextBtn.addEventListener('click', function () {\r\n            if (loop == true || index != navObjSize - 1) {\r\n                clearTimeout(timeout);\r\n                clearTimeout(endTimeout);\r\n                index++;\r\n                doPlay();\r\n            }\r\n        })\r\n    }\r\n    if (prevBtn) {\r\n        prevBtn.addEventListener('click', function () {\r\n            if (loop == true || index != 0) {\r\n                clearTimeout(timeout);\r\n                clearTimeout(endTimeout);\r\n                index--;\r\n                doPlay();\r\n            }\r\n        })\r\n    }\r\n    //触摸开始函数\r\n    var tStart = function (e) {\r\n        clearTimeout(timeout);\r\n        clearTimeout(endTimeout);\r\n        scrollY = undefined;\r\n        distX = 0;\r\n        var point = hasTouch ? e.touches[0] : e;\r\n        startX = point.pageX;\r\n        startY = point.pageY;\r\n        //添加“触摸移动”事件监听\r\n        conBox.addEventListener(touchMove, tMove, false);\r\n        //添加“触摸结束”事件监听\r\n        conBox.addEventListener(touchEnd, tEnd, false);\r\n    };\r\n    //触摸移动函数\r\n    var tMove = function (e) {\r\n        if (hasTouch) {\r\n            if (e.touches.length > 1 || e.scale && e.scale !== 1) {\r\n                return;\r\n            }\r\n        }\r\n        //多点或缩放\r\n        var point = hasTouch ? e.touches[0] : e;\r\n        distX = point.pageX - startX;\r\n        distY = point.pageY - startY;\r\n        if (typeof scrollY == 'undefined') {\r\n            scrollY = !!( scrollY || Math.abs(distX) < Math.abs(distY) );\r\n        }\r\n        if (!scrollY) {\r\n            e.preventDefault();\r\n            if (autoPlay) {\r\n                clearInterval(inter)\r\n            }\r\n            switch (effect) {\r\n                case \"left\":\r\n                    if ((index == 0 && distX > 0) || (index >= navObjSize - 1 && distX < 0 )) {\r\n                        distX = distX * 0.4\r\n                    }\r\n                    translate(-index * slideW + distX, 0);\r\n                    break;\r\n                case \"leftLoop\":\r\n                    translate(-(index + 1) * slideW + distX, 0);\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n    //触摸结束函数\r\n    var tEnd = function (e) {\r\n        if (distX == 0) {\r\n            return;\r\n        }\r\n        e.preventDefault();\r\n        if (!scrollY) {\r\n            if (Math.abs(distX) > slideW / 10) {\r\n                distX > 0 ? index-- : index++;\r\n            }\r\n            doPlay(true);\r\n            if (autoPlay) {\r\n                inter = setInterval(function () {\r\n                    index++;\r\n                    doPlay()\r\n                }, interTime);\r\n            }\r\n        }\r\n\r\n        conBox.removeEventListener(touchMove, tMove, false);\r\n        conBox.removeEventListener(touchEnd, tEnd, false);\r\n    };\r\n    //添加“触摸开始”事件监听\r\n    conBox.addEventListener(touchStart, tStart, false);\r\n};\r\n\r\nmodule.exports = TouchSlide;\n\n\n// WEBPACK FOOTER //\n// ./app/phone/assets/js/plugs/touch-slide.js","const tools = require('../utils/tools'); // 工具方法集合\nconst applications = require('../utils/applications'); // 应用方法集合\nconst Super = require('../components-dom-super/g-super'); // 超类型(子类型继承的对象)\n// 超类型(子类型继承的对象)\nconst route = '/';\n\n// 子类型\nconst Sub = tools.constructorInherit(Super, {\n    // 回调\n    callback: {},\n    // 配置\n    config: {},\n    // 数据\n    data: {\n        items: [\n            {\n                href: route,\n                icon: 'icon-home',\n                text: '首页',\n                isShowMark: false,\n            },\n            {\n                href: `${route}dev-globals/`,\n                icon: 'icon-dev',\n                text: '开发全局',\n                isShowMark: false,\n            },\n            {\n                href: `${route}dev-components/`,\n                icon: 'icon-dev',\n                text: '开发组件',\n                isShowMark: false,\n            },\n            {\n                href: `${route}dev-words/`,\n                icon: 'icon-dev',\n                text: '开发词汇',\n                isShowMark: false,\n            },\n            {\n                href: `${route}mine/`,\n                icon: 'icon-mine',\n                text: '我的',\n                isShowMark: false,\n            },\n        ],\n    },\n});\n\n// 内部模块的创建(覆盖超类型)\nSub.prototype.moduleDomCreate = function () {\n    const data = this.opts.data;\n    const items = data.items;\n    let html = '';\n    items.forEach(function (v) {\n        let markHtml = '';\n        if (v.isShowMark) {\n            markHtml = '<div class=\"g-navigation-mark\"></div>';\n        }\n        html += `\n            <a href=\"${v.href}\" class=\"g-navigation-item\">\n                <div class=\"g-navigation-icon iconfont ${v.icon}\"></div>\n                <div class=\"g-navigation-text\">${v.text}</div>\n                ${markHtml}\n            </a>\n        `;\n    });\n    this.moduleDom = applications.createElement({\n        style: this.opts.config.moduleDomStyle,\n        customAttribute: this.opts.config.moduleDomCustomAttribute,\n        attribute: {\n            className: 'g-navigation',\n            innerHTML: html,\n        },\n    });\n};\n\n// 功能(覆盖超类型)\nSub.prototype.power = function () {\n    // 功能重写待续...\n};\n\nmodule.exports = Sub;\n\n\n\n// WEBPACK FOOTER //\n// ./app/phone/assets/js/components-dom/g-navigation.js","const tools = require('../utils/tools');// 工具方法集合\r\nconst applications = require('../utils/applications');// 应用方法集合\r\n\r\n// 底层构造函数\r\nclass Super {\r\n    constructor(json) {\r\n        // 函数外部传来的参数\r\n        this.opts = tools.extend({\r\n            // 内部默认参数\r\n            defaults: {\r\n                // 父级\r\n                wrap: '.g-body', // 这个仅支持传入选择器和原生dom节点\r\n                // 回调\r\n                callback: {\r\n                    // 内部模块创建之前\r\n                    moduleDomCreateBefore: function (self) {\r\n                        // 内部模块创建之前的回调待续...\r\n                    },\r\n                    // 内部模块创建之后\r\n                    moduleDomCreateAfter: function (self) {\r\n                        // 内部模块创建之后的回调待续...\r\n                    },\r\n                    // 内部模块渲染之前\r\n                    moduleDomRenderBefore: function (self) {\r\n                        // 内部模块渲染之前的回调待续...\r\n                    },\r\n                    // 内部模块渲染之后\r\n                    moduleDomRenderAfter: function (self) {\r\n                        // 内部模块渲染之后的回调待续...\r\n                    },\r\n                    // 内部模块移除之前\r\n                    moduleDomRemoveBefore: function (self) {\r\n                        // 内部模块移除之前的回调待续...\r\n                    },\r\n                    // 内部模块移除之后\r\n                    moduleDomRemoveAfter: function (self) {\r\n                        // 内部模块移除之后的回调待续...\r\n                    },\r\n                    // 内部模块显示之前\r\n                    moduleDomShowBefore: function (self) {\r\n                        // 内部模块显示之前的回调待续...\r\n                    },\r\n                    // 内部模块显示之后\r\n                    moduleDomShowAfter: function (self) {\r\n                        // 内部模块显示之后的回调待续...\r\n                    },\r\n                    // 内部模块隐藏之前\r\n                    moduleDomHideBefore: function (self) {\r\n                        // 内部模块隐藏之前的回调待续...\r\n                    },\r\n                    // 内部模块隐藏之后\r\n                    moduleDomHideAfter: function (self) {\r\n                        // 内部模块隐藏之后的回调待续...\r\n                    },\r\n                    // 外部容器获取之前\r\n                    wrapDomGetBefore: function (self) {\r\n                        // 外部容器获取之前的回调待续...\r\n                    },\r\n                    // 外部容器获取之后\r\n                    wrapDomGetAfter: function (self) {\r\n                        // 外部容器获取之后的回调待续...\r\n                    },\r\n                    // 外部容器移除之前\r\n                    wrapDomRemoveBefore: function (self) {\r\n                        // 外部容器移除之前的回调待续...\r\n                    },\r\n                    // 外部容器移除之后\r\n                    wrapDomRemoveAfter: function (self) {\r\n                        // 外部容器移除之后的回调待续...\r\n                    },\r\n                },\r\n                // 配置\r\n                config: {\r\n                    // 内部模块的自定义属性\r\n                    moduleDomCustomAttribute: {},\r\n                    // 内部模块插入到外部容器的方式\r\n                    moduleDomRenderMethod: {\r\n                        method: 'appendChild', // 'appendChild','insertBefore'\r\n                        child: null,\r\n                    },\r\n                    moduleDomStyle: {}, // 内部模块的样式\r\n                    moduleDomIsRender: true, // 内部模块是否渲染\r\n                    moduleDomIsClearTimer: true, // 内部模块是否清除所有定时器(默认清除)\r\n                },\r\n                // 数据\r\n                data: {},\r\n            },\r\n            // 外部传入参数\r\n            inherits: json,\r\n        });\r\n        // 函数内部自带的属性\r\n        this.moduleDom = null;// 内部的模块\r\n        this.wrapDom = null;// 内部模块的外部承载容器,如果没有也没关系,不过不往里面append罢了\r\n        this.moduleDomTimer = {};// 内部模块的定时器存储(假设内部模块有定时器)\r\n        this.init();\r\n    }\r\n\r\n    // 初始化\r\n    init() {\r\n        this.render();\r\n        this.power();\r\n    }\r\n\r\n    // 渲染\r\n    render() {\r\n        this.moduleDomRemove();// 内部模块的移除(重新初始化的时候要移除掉以前有的内部模块)\r\n\r\n        const callback = this.opts.callback;\r\n        callback.moduleDomCreateBefore(this);\r\n        this.moduleDomCreate();// 内部模块的创建\r\n        callback.moduleDomCreateAfter(this);\r\n\r\n        this.wrapDomGet();// 外部容器的获取\r\n        this.moduleDomRender();// 内部模块的渲染(如果外部容器存在,就把内部模块填充到外部容器里)\r\n    }\r\n\r\n    // 功能(这个方法需要在子类型里被覆盖掉)\r\n    power() {\r\n        // 功能待续...\r\n    }\r\n\r\n    // 内部模块的创建(这个方法需要在子类型里被覆盖掉)\r\n    moduleDomCreate() {\r\n        this.moduleDom = applications.createElement({\r\n            style: this.opts.config.moduleDomStyle,\r\n            customAttribute: this.opts.config.moduleDomCustomAttribute,\r\n            attribute: {\r\n                className: 'g-super-type-es6',\r\n                innerHTML: `\r\n                    <div class=\"g-super-type-es6-text\" style=\"text-align: center;\">周华飞爱侯丽杰,侯丽杰爱周华飞sup-es6</div>\r\n                `,\r\n            },\r\n        });\r\n    }\r\n\r\n    // 内部模块的渲染\r\n    moduleDomRender() {\r\n        const callback = this.opts.callback;\r\n        const config = this.opts.config;\r\n        if (config.moduleDomIsRender && this.wrapDom) {\r\n            callback.moduleDomRenderBefore(this);\r\n            const renderMethod = config.moduleDomRenderMethod;\r\n            if (renderMethod.method === 'insertBefore') {\r\n                const dom = applications.getDomArray(renderMethod.child)[0];\r\n                if (dom) {\r\n                    this.wrapDom.insertBefore(this.moduleDom, dom);\r\n                } else {\r\n                    this.wrapDom.insertBefore(this.moduleDom, this.wrapDom.children[0]);\r\n                }\r\n            }\r\n            if (renderMethod.method === 'appendChild') {\r\n                this.wrapDom.appendChild(this.moduleDom);\r\n            }\r\n            callback.moduleDomRenderAfter(this);\r\n        }\r\n    }\r\n\r\n    // 内部模块的移除\r\n    moduleDomRemove() {\r\n        const callback = this.opts.callback;\r\n        if (this.moduleDom && this.moduleDom.parentNode) {\r\n            callback.moduleDomRemoveBefore(this);\r\n            this.moduleDom.parentNode.removeChild(this.moduleDom);\r\n            callback.moduleDomRemoveAfter(this);\r\n        }\r\n        this.moduleDomClearTimer();\r\n    }\r\n\r\n    // 内部模块的定时器清除(假设内部模块有定时器)\r\n    moduleDomClearTimer() {\r\n        const self = this;\r\n        if (self.opts.config.moduleDomIsClearTimer) {\r\n            Object.keys(self.moduleDomTimer).forEach(function (attr) {\r\n                clearInterval(self.moduleDomTimer[attr]);\r\n                clearTimeout(self.moduleDomTimer[attr]);\r\n            });\r\n        }\r\n    }\r\n\r\n    // 内部模块的隐藏(显示隐藏和是否清除定时器无关)\r\n    moduleDomHide() {\r\n        const callback = this.opts.callback;\r\n        if (this.moduleDom.parentNode) {\r\n            this.opts.config.moduleDomIsRender = false;\r\n            callback.moduleDomHideBefore(this);\r\n            this.moduleDom.parentNode.removeChild(this.moduleDom);\r\n            callback.moduleDomHideAfter(this);\r\n        }\r\n    }\r\n\r\n    // 内部模块的显示(显示隐藏和是否清除定时器无关)\r\n    moduleDomShow() {\r\n        const callback = this.opts.callback;\r\n        callback.moduleDomShowBefore(this);\r\n        if (this.wrapDom) {\r\n            this.opts.config.moduleDomIsRender = true;\r\n            this.moduleDomRender();\r\n        }\r\n        callback.moduleDomShowAfter(this);\r\n    }\r\n\r\n    // 外部容器的获取\r\n    wrapDomGet() {\r\n        const callback = this.opts.callback;\r\n        callback.wrapDomGetBefore(this);\r\n        this.wrapDom = applications.getDomArray(this.opts.wrap)[0];\r\n        callback.wrapDomGetAfter(this);\r\n    }\r\n\r\n    // 外部容器的移除\r\n    wrapDomRemove() {\r\n        const callback = this.opts.callback;\r\n        // 先移除内部的模块\r\n        this.moduleDomRemove();\r\n        // 再移除外部的容器\r\n        if (this.wrapDom) {\r\n            callback.wrapDomRemoveBefore(this);\r\n            this.wrapDom.parentNode.removeChild(this.wrapDom);\r\n            callback.wrapDomRemoveAfter(this);\r\n        }\r\n    }\r\n\r\n    // 获取内部模块的整体html结构\r\n    getModuleDomHtml() {\r\n        return this.moduleDom.outerHTML;\r\n    }\r\n}\r\n\r\nmodule.exports = Super;\r\n\n\n\n// WEBPACK FOOTER //\n// ./app/phone/assets/js/components-dom-super/g-super-es6.js","require('../../scss/pages/dev-components.scss');\r\nconst Super = require('../pages-super/super');\r\n\r\nclass Sub extends Super {\r\n    power() {\r\n        const self = this;\r\n        const applications = self.applications;\r\n\r\n        // ajax测试\r\n        (function () {\r\n            // const Ajax = require('../api/ajax');\r\n            // new Ajax({\r\n            //     callback: {},\r\n            //     config: {\r\n            //         url: '/api/getList',\r\n            //     },\r\n            //     data: {\r\n            //         hellow: 'hellow',\r\n            //     },\r\n            // });\r\n        }());\r\n\r\n        // 测试滚动到底部功能以及loading组件\r\n        (function () {\r\n            const Loading = require('../components-dom/g-loading');\r\n            const WhenScrollBottom = applications.whenScrollBottom();\r\n            let num = 0;\r\n            new WhenScrollBottom({\r\n                isInitRender: false,\r\n                callback: {\r\n                    success: function (self) {\r\n                        num++;\r\n                        new Loading({\r\n                            wrap: '.g-body',\r\n                            config: {\r\n                                status: 'loading',\r\n                            },\r\n                        });\r\n                        if (num >= 5) {\r\n                            new Loading({\r\n                                config: {\r\n                                    status: 'over',\r\n                                },\r\n                            });\r\n                        } else {\r\n                            self.dataLoadContinue();\r\n                        }\r\n                    },\r\n                },\r\n            });\r\n        }());\r\n\r\n        // slide切换\r\n        (function () {\r\n            const Slide = require('../components-dom/g-slide');\r\n            new Slide({\r\n                wrap: '.page-slide',\r\n                data: {\r\n                    items: [\r\n                        {\r\n                            img: {\r\n                                width: 0,\r\n                                height: 0,\r\n                                src: 'http://img1.imgtn.bdimg.com/it/u=1056872014,4038868309&fm=23&gp=0.jpg',\r\n                            },\r\n                            href: '',\r\n                        },\r\n                        {\r\n                            img: {\r\n                                width: 0,\r\n                                height: 0,\r\n                                src: 'http://img3.imgtn.bdimg.com/it/u=1732308780,3782498029&fm=23&gp=0.jpg',\r\n                            },\r\n                            href: '',\r\n                        },\r\n                        {\r\n                            img: {\r\n                                width: 0,\r\n                                height: 0,\r\n                                src: 'http://img3.imgtn.bdimg.com/it/u=4027566086,3099254237&fm=23&gp=0.jpg',\r\n                            },\r\n                            href: '',\r\n                        },\r\n                        {\r\n                            img: {\r\n                                width: 0,\r\n                                height: 0,\r\n                                src: 'http://img4.imgtn.bdimg.com/it/u=120609946,455952432&fm=23&gp=0.jpg',\r\n                            },\r\n                            href: '',\r\n                        },\r\n                        {\r\n                            img: {\r\n                                width: 0,\r\n                                height: 0,\r\n                                src: 'http://img2.imgtn.bdimg.com/it/u=2763208243,961494673&fm=23&gp=0.jpg',\r\n                            },\r\n                            href: '',\r\n                        },\r\n                    ],\r\n                },\r\n            });\r\n        }());\r\n\r\n        // 导航\r\n        (function () {\r\n            const Navigation = require('../components-dom/g-navigation');\r\n            new Navigation({wrap: '.page-navigation'});\r\n        }());\r\n\r\n        // 弹窗测试\r\n        (function () {\r\n            const Dialog = require('../components-dom/g-dialog');\r\n            document.querySelector('.page-button-dialog').addEventListener('click', function () {\r\n                new Dialog({\r\n                    callback: {\r\n                        confirm: function () {\r\n                            new Dialog({config: {alert: {icon: 'icon-success', content: '已确认'}}});\r\n                        },\r\n                        cancel: function () {\r\n                            new Dialog({config: {alert: {icon: 'icon-success', content: '已取消'}}});\r\n                        },\r\n                        close: function () {\r\n                            new Dialog({config: {alert: {icon: 'icon-success', content: '已关闭'}}});\r\n                        },\r\n                    },\r\n                    config: {\r\n                        type: 'confirm',\r\n                    },\r\n                });\r\n            });\r\n        }());\r\n\r\n        // 分页测试\r\n        (function () {\r\n            const Pagination = require('../components-dom/g-pagination');\r\n            new Pagination({wrap: '.page-pagination'});\r\n        }());\r\n\r\n        // 没有数据\r\n        (function () {\r\n            const NoData = require('../components-dom/g-no-data');\r\n            new NoData({wrap: '.page-no-data'});\r\n        }());\r\n\r\n        // 超类型模块测试\r\n        (function () {\r\n            const Super = require('../components-dom-super/g-super');\r\n            new Super({wrap: '.page-super-type'});\r\n            const Sub = require('../components-dom/g-sub');\r\n            new Sub({wrap: '.page-super-type'});\r\n            new Sub(); // constructorInherit里parameter去掉了对象引用,否则这个子类的默认参数wrap会变成上面.page-super-type(bug回忆)\r\n            const SuperEs6 = require('../components-dom-super/g-super-es6');\r\n            new SuperEs6({wrap: '.page-super-type'});\r\n            const SubEs6 = require('../components-dom/g-sub-es6');\r\n            new SubEs6({wrap: '.page-super-type'});\r\n        }());\r\n\r\n        // 单选开关\r\n        (function () {\r\n            const Radio = require('../components-dom/g-radio-switch');\r\n            new Radio({\r\n                wrap: '.page-radio-switch',\r\n                callback: {\r\n                    click: function (json) {\r\n                        console.log(json);\r\n                    },\r\n                },\r\n            });\r\n        }());\r\n\r\n        // 表格\r\n        (function () {\r\n            const Table = require('../components-dom/g-table');\r\n            new Table({\r\n                wrap: '.page-table',\r\n                data: {\r\n                    header: [\r\n                        {\r\n                            content: '<div>header0</div>',\r\n                        },\r\n                        {\r\n                            content: '<div>header1</div>',\r\n                        },\r\n                        {\r\n                            content: '<div>header2</div>',\r\n                        },\r\n                    ],\r\n                    body: [\r\n                        [\r\n                            {\r\n                                content: '<div>body0-0</div>',\r\n                            },\r\n                            {\r\n                                content: '<div>body1-0</div>',\r\n                            },\r\n                            {\r\n                                content: '<div>body2-0</div>',\r\n                            },\r\n                        ],\r\n                        [\r\n                            {\r\n                                content: '<div>body0-1</div>',\r\n                            },\r\n                            {\r\n                                content: '<div>body1-1</div>',\r\n                            },\r\n                            {\r\n                                content: '<div>body2-1</div>',\r\n                            },\r\n                        ],\r\n                        [\r\n                            {\r\n                                content: '<div>body0-2</div>',\r\n                            },\r\n                            {\r\n                                content: '<div>body1-2</div>',\r\n                            },\r\n                            {\r\n                                content: '<div>body2-2</div>',\r\n                            },\r\n                        ],\r\n                    ],\r\n                    footer: '',\r\n                },\r\n            });\r\n        }());\r\n\r\n        // 星评\r\n        (function () {\r\n            require.ensure([], function (require) {\r\n                const Star = require('../components-dom/g-star');\r\n                new Star({\r\n                    wrap: '.page-star',\r\n                    callback: {\r\n                        click: function (json) {\r\n                            console.log(json);\r\n                        },\r\n                    },\r\n                });\r\n            }, 'g-star');\r\n        }());\r\n    }\r\n}\r\n\r\nnew Sub();\r\n\n\n\n// WEBPACK FOOTER //\n// ./app/phone/assets/js/pages/dev-components.js","const tools = require('../utils/tools'); // 工具方法集合\r\nconst applications = require('../utils/applications'); // 应用方法集合\r\nconst Super = require('../components-dom-super/g-super'); // 超类型(子类型继承的对象)\r\n\r\n// 子类型\r\nconst Sub = tools.constructorInherit(Super, {\r\n    // 回调\r\n    callback: {},\r\n    // 配置\r\n    config: {\r\n        status: 'loading', // 加载状态 loading(加载中) over(加载完毕)\r\n        positionMethod: '', // 模块的定位方式 'fixed'(相对于整个文档) 'absolute'(相对于外部容器)\r\n        positionLocation: 'center', // 模块的定位位置\r\n    },\r\n    // 数据\r\n    data: {},\r\n});\r\n\r\n// 内部模块的创建(覆盖超类型)\r\nSub.prototype.moduleDomCreate = function () {\r\n    const config = this.opts.config;\r\n    let moduleDomHtml = '';\r\n    let moduleDomClass = '';\r\n    const status = config.status;\r\n    const positionMethod = config.positionMethod;\r\n    const positionLocation = config.positionLocation;\r\n    // 加载中\r\n    if (status === 'loading') {\r\n        moduleDomClass = 'g-loading-run ';\r\n        // 相对文档居中\r\n        if (positionMethod === 'fixed') {\r\n            moduleDomClass += `g-loading-fixed g-loading-${positionLocation}`;\r\n        }\r\n        // 相对容器居中\r\n        if (positionMethod === 'absolute') {\r\n            moduleDomClass += `g-loading-absolute g-loading-${positionLocation}`;\r\n        }\r\n        moduleDomHtml = `\r\n            <div class=\"g-loading-body\">\r\n                <div class=\"g-loading-run-icon iconfont icon-loading\"></div>\r\n            </div>\r\n        `;\r\n    }\r\n    // 加载完毕\r\n    if (status === 'over') {\r\n        moduleDomClass = 'g-loading-over ';\r\n        // 相对文档居中\r\n        if (positionMethod === 'fixed') {\r\n            moduleDomClass += `g-loading-fixed g-loading-${positionLocation}`;\r\n        }\r\n        // 相对容器居中\r\n        if (positionMethod === 'absolute') {\r\n            moduleDomClass += `g-loading-absolute g-loading-${positionLocation}`;\r\n        }\r\n        moduleDomHtml = `\r\n            <div class=\"g-loading-body\">\r\n                <div class=\"g-loading-over-icon iconfont icon-no-data\"></div>\r\n                <div class=\"g-loading-over-text\">没有数据了</div>\r\n            </div>\r\n        `;\r\n    }\r\n    // 模块创建\r\n    this.moduleDom = applications.createElement({\r\n        style: this.opts.config.moduleDomStyle,\r\n        customAttribute: this.opts.config.moduleDomCustomAttribute,\r\n        attribute: {\r\n            className: `g-loading ${moduleDomClass}`,\r\n            innerHTML: moduleDomHtml,\r\n        },\r\n    });\r\n};\r\n\r\n// 功能(覆盖超类型)\r\nSub.prototype.power = function () {\r\n    // 功能重写待续...\r\n};\r\n\r\nmodule.exports = Sub;\r\n\n\n\n// WEBPACK FOOTER //\n// ./app/phone/assets/js/components-dom/g-loading.js","const tools = require('../utils/tools'); // 工具方法集合\r\nconst applications = require('../utils/applications'); // 应用方法集合\r\nconst Super = require('../components-dom-super/g-super'); // 超类型(子类型继承的对象)\r\n\r\n// 默认数据\r\nconst defaultData = {\r\n    nowCount: 10, // 当前页的数据条数\r\n    allCount: 100, // 数据总条数\r\n    nowPage: 1, // 当前页\r\n    allPage: null, // 总页数\r\n};\r\ndefaultData.allPage = Math.ceil(defaultData.allCount / defaultData.nowCount);\r\n\r\n// 子类型\r\nconst Sub = tools.constructorInherit(Super, {\r\n    // 回调\r\n    callback: {\r\n        // 上一页的回调\r\n        prevPage: function () {\r\n        },\r\n        // 下一页的回调\r\n        nextPage: function () {\r\n        },\r\n        // 选择某一页的回调\r\n        selectPage: function () {\r\n        },\r\n    },\r\n    // 配置\r\n    config: {},\r\n    // 数据\r\n    data: defaultData,\r\n});\r\n\r\n// 内部模块的创建(覆盖超类型)\r\nSub.prototype.moduleDomCreate = function () {\r\n    this.moduleDom = applications.createElement({\r\n        style: this.opts.config.moduleDomStyle,\r\n        customAttribute: this.opts.config.moduleDomCustomAttribute,\r\n        attribute: {\r\n            className: 'g-pagination',\r\n            innerHTML: `\r\n                <div class=\"g-pagination-text\">第</div>\r\n                <div class=\"g-pagination-now-page\">\r\n                    <label class=\"g-select\">\r\n                        <span class=\"g-select-wrap\">\r\n                            <select class=\"g-select-select\">\r\n                                ${this.renderOption()}\r\n                            </select>\r\n                            <span class=\"g-select-mark iconfont icon-select\"></span>\r\n                        </span>\r\n                    </label>\r\n                </div>\r\n                <div class=\"g-pagination-text\">页</div>\r\n                <a href=\"javascript:;\" class=\"g-pagination-btn g-pagination-btn-inactive iconfont icon-prev\"></a>\r\n                <a href=\"javascript:;\" class=\"g-pagination-btn iconfont icon-next\"></a>\r\n            `,\r\n        },\r\n    });\r\n    this.prevDom = this.moduleDom.querySelectorAll('.g-pagination-btn')[0];// 上一页的按钮\r\n    this.nextDom = this.moduleDom.querySelectorAll('.g-pagination-btn')[1];// 下一页的按钮\r\n    this.btnInactiveClass = 'g-pagination-btn-inactive';// 上一页和下一页的禁用状态\r\n    this.selectDom = this.moduleDom.querySelector('.g-pagination-now-page .g-select-select');// 选择某一页的按钮\r\n};\r\n\r\n// 渲染第几页里面的页码\r\nSub.prototype.renderOption = function () {\r\n    let html = '';\r\n    for (let i = 0; i < this.opts.data.allPage; i++) {\r\n        html += `<option value=\"${i + 1}\">${i + 1}</option>`;\r\n    }\r\n    return html;\r\n};\r\n\r\n// 功能(覆盖超类型)\r\nSub.prototype.power = function () {\r\n    const self = this;\r\n    const data = this.opts.data;\r\n    if (data.nowPage === 1) {\r\n        this.prevPageDisable();\r\n    }\r\n    if (data.nowPage === data.allPage) {\r\n        this.nextPageDisable();\r\n    }\r\n\r\n    this.prevDom.addEventListener('click', function () {\r\n        if (!this.classList.contains(self.btnInactiveClass)) {\r\n            self.prevPage();\r\n        }\r\n    });\r\n\r\n    this.nextDom.addEventListener('click', function () {\r\n        if (!this.classList.contains(self.btnInactiveClass)) {\r\n            self.nextPage();\r\n        }\r\n    });\r\n\r\n    this.selectDom.addEventListener('change', function () {\r\n        self.selectPage();\r\n    });\r\n};\r\n\r\n// 上一页\r\nSub.prototype.prevPage = function () {\r\n    const data = this.opts.data;\r\n    if (data.nowPage > 1) {\r\n        data.nowPage--;\r\n        const oldChecked = this.selectDom.querySelector('option:checked');\r\n        if (oldChecked.previousElementSibling) {\r\n            oldChecked.selected = false;\r\n            oldChecked.previousElementSibling.selected = true;\r\n        }\r\n        this.nextPageEnable();\r\n        this.opts.callback.prevPage(this);\r\n    }\r\n    if (data.nowPage === 1) {\r\n        this.prevPageDisable();\r\n    }\r\n    console.log(data);\r\n};\r\n\r\n// 下一页\r\nSub.prototype.nextPage = function () {\r\n    const data = this.opts.data;\r\n    if (data.nowPage < data.allPage) {\r\n        data.nowPage++;\r\n        const oldChecked = this.selectDom.querySelector('option:checked');\r\n        if (oldChecked.nextElementSibling) {\r\n            oldChecked.selected = false;\r\n            oldChecked.nextElementSibling.selected = true;\r\n        }\r\n        this.prevPageEnable();\r\n        this.opts.callback.nextPage(this);\r\n    }\r\n    if (data.nowPage === data.allPage) {\r\n        this.nextPageDisable();\r\n    }\r\n    console.log(data);\r\n};\r\n\r\n// 选择第几页\r\nSub.prototype.selectPage = function () {\r\n    const data = this.opts.data;\r\n    data.nowPage = this.selectDom.value;\r\n    this.nextPageEnable();\r\n    this.prevPageEnable();\r\n    if (data.nowPage === 1) {\r\n        this.prevPageDisable();\r\n    }\r\n    if (data.nowPage === data.allPage) {\r\n        this.nextPageDisable();\r\n    }\r\n    this.opts.callback.selectPage(this);\r\n    console.log(data);\r\n};\r\n\r\n// 上一页禁用\r\nSub.prototype.prevPageDisable = function () {\r\n    this.prevDom.classList.add(this.btnInactiveClass);\r\n};\r\n\r\n// 上一页启用\r\nSub.prototype.prevPageEnable = function () {\r\n    this.prevDom.classList.remove(this.btnInactiveClass);\r\n};\r\n\r\n// 下一页禁用\r\nSub.prototype.nextPageDisable = function () {\r\n    this.nextDom.classList.add(this.btnInactiveClass);\r\n};\r\n\r\n// 下一页启用\r\nSub.prototype.nextPageEnable = function () {\r\n    this.nextDom.classList.remove(this.btnInactiveClass);\r\n};\r\n\r\nmodule.exports = Sub;\r\n\n\n\n// WEBPACK FOOTER //\n// ./app/phone/assets/js/components-dom/g-pagination.js","const tools = require('../utils/tools'); // 工具方法集合\r\nconst applications = require('../utils/applications'); // 应用方法集合\r\nconst Super = require('../components-dom-super/g-super'); // 超类型(子类型继承的对象)\r\n\r\n// 子类型\r\nconst Sub = tools.constructorInherit(Super, {\r\n    // 回调\r\n    callback: {},\r\n    // 配置\r\n    config: {\r\n        button: {\r\n            isShowIcon: false,\r\n        },\r\n    },\r\n    // 数据\r\n    data: {\r\n        icon: 'icon-no-data',\r\n        text: '没有数据',\r\n        button: {\r\n            icon: 'icon-home',\r\n            text: '回首页',\r\n            href: '/',\r\n        },\r\n    },\r\n});\r\n\r\n// 内部模块的创建(覆盖超类型)\r\nSub.prototype.moduleDomCreate = function () {\r\n    const data = this.opts.data;\r\n    let buttonIconHtml = '';\r\n    if (this.opts.config.button.isShowIcon) {\r\n        buttonIconHtml = `<div class=\"g-button-icon iconfont ${data.button.icon}\"></div>`;\r\n    }\r\n    this.moduleDom = applications.createElement({\r\n        style: this.opts.config.moduleDomStyle,\r\n        customAttribute: this.opts.config.moduleDomCustomAttribute,\r\n        attribute: {\r\n            className: 'g-no-data',\r\n            innerHTML: `\r\n                <div class=\"g-no-data-icon iconfont ${data.icon}\"></div>\r\n                <div class=\"g-no-data-text\">${data.text}</div>\r\n                <a class=\"g-no-data-button g-button\" href=\"${data.button.href}\">\r\n                    ${buttonIconHtml}\r\n                    <div class=\"g-button-text\">${data.button.text}</div>\r\n                </a>\r\n            `,\r\n        },\r\n    });\r\n};\r\n\r\n// 功能(覆盖超类型)\r\nSub.prototype.power = function () {\r\n    // 功能重写待续...\r\n};\r\n\r\nmodule.exports = Sub;\r\n\n\n\n// WEBPACK FOOTER //\n// ./app/phone/assets/js/components-dom/g-no-data.js","const tools = require('../utils/tools'); // 工具方法集合\nconst applications = require('../utils/applications'); // 应用方法集合\nconst Super = require('../components-dom-super/g-super'); // 超类型(子类型继承的对象)\n\n// 子类型\nconst Sub = tools.constructorInherit(Super, {\n    // 回调\n    callback: {},\n    // 配置\n    config: {},\n    // 数据\n    data: {},\n});\n\n// 内部模块的创建(覆盖超类型)\nSub.prototype.moduleDomCreate = function () {\n    this.moduleDom = applications.createElement({\n        style: this.opts.config.moduleDomStyle,\n        customAttribute: this.opts.config.moduleDomCustomAttribute,\n        attribute: {\n            className: 'g-sub-type',\n            innerHTML: `\n                <div class=\"g-sub-type-text\" style=\"text-align: center;\">周华飞爱侯丽杰,侯丽杰爱周华飞sub-es5</div>\n            `,\n        },\n    });\n};\n\n// 功能(覆盖超类型)\nSub.prototype.power = function () {\n    // 功能重写待续...\n};\n\nmodule.exports = Sub;\n\n\n\n// WEBPACK FOOTER //\n// ./app/phone/assets/js/components-dom/g-sub.js","const tools = require('../utils/tools'); // 工具方法集合\nconst applications = require('../utils/applications'); // 应用方法集合\nconst Super = require('../components-dom-super/g-super-es6'); // 超类型(子类型继承的对象)\n\n// 子类型\nclass Sub extends Super {\n    constructor(json) {\n        super(tools.extend({\n            defaults: {\n                // 回调\n                callback: {},\n                // 配置\n                config: {},\n                // 数据\n                data: {},\n            },\n            inherits: json,\n        }));\n    }\n\n    // 内部模块的创建(覆盖超类型)\n    moduleDomCreate() {\n        this.moduleDom = applications.createElement({\n            style: this.opts.config.moduleDomStyle,\n            customAttribute: this.opts.config.moduleDomCustomAttribute,\n            attribute: {\n                className: 'g-sub-type-es6',\n                innerHTML: `\n                    <div class=\"g-sub-type-es6-text\" style=\"text-align: center;\">周华飞爱侯丽杰,侯丽杰爱周华飞sub-es6</div>\n                `,\n            },\n        });\n    }\n\n    // 功能重写(覆盖超类型)\n    power() {\n        // 功能重写待续...\n    }\n}\n\nmodule.exports = Sub;\n\n\n\n// WEBPACK FOOTER //\n// ./app/phone/assets/js/components-dom/g-sub-es6.js","const tools = require('../utils/tools'); // 工具方法集合\nconst applications = require('../utils/applications'); // 应用方法集合\nconst Super = require('../components-dom-super/g-super'); // 超类型(子类型继承的对象)\n\n// 子类型\nconst Sub = tools.constructorInherit(Super, {\n    // 回调\n    callback: {\n        click: function () {\n        },\n    },\n    // 配置\n    config: {\n        isHand: false, // 是否手动控制\n        status: 'on', // 状态\n        txt: {\n            on: '已开启',\n            off: '已关闭',\n        },\n    },\n    // 数据\n    data: {},\n});\n\n// 内部模块的创建(覆盖超类型)\nSub.prototype.moduleDomCreate = function () {\n    const config = this.opts.config;\n    this.moduleDomActiveClass = 'g-radio-switch-active';\n    let isOn = '';\n    if (config.status === 'on') {\n        isOn = this.moduleDomActiveClass;\n    }\n    this.moduleDom = applications.createElement({\n        style: config.moduleDomStyle,\n        customAttribute: config.moduleDomCustomAttribute,\n        attribute: {\n            className: `g-radio-switch ${isOn}`,\n            innerHTML: `\n                <div class=\"g-radio-switch-wrap\">\n                    <div class=\"g-radio-switch-round\"></div>\n                </div>\n                <div class=\"g-radio-switch-text\">${config.txt[config.status]}</div>\n            `,\n        },\n    });\n};\n\n// 功能(覆盖超类型)\nSub.prototype.power = function () {\n    const self = this;\n    const config = this.opts.config;\n    this.moduleDom.addEventListener('click', function () {\n        if (!config.isHand) {\n            if (!self.isOn()) {\n                self.on();\n            } else {\n                self.off();\n            }\n        }\n        self.opts.callback.click({status: config.status});\n    });\n};\n\n// 是否处于开启状态\nSub.prototype.isOn = function () {\n    return this.moduleDom.classList.contains(this.moduleDomActiveClass);\n};\n\n// 开启\nSub.prototype.on = function () {\n    const config = this.opts.config;\n    if (!this.isOn()) {\n        this.moduleDom.classList.add(this.moduleDomActiveClass);\n        config.status = 'on';\n        this.moduleDom.querySelector('.g-radio-switch-text').innerHTML = `${config.txt[config.status]}`;\n    }\n};\n\n// 关闭\nSub.prototype.off = function () {\n    const config = this.opts.config;\n    if (this.isOn()) {\n        this.moduleDom.classList.remove(this.moduleDomActiveClass);\n        config.status = 'off';\n        this.moduleDom.querySelector('.g-radio-switch-text').innerHTML = `${config.txt[config.status]}`;\n    }\n};\n\nmodule.exports = Sub;\n\n\n\n// WEBPACK FOOTER //\n// ./app/phone/assets/js/components-dom/g-radio-switch.js","const tools = require('../utils/tools'); // 工具方法集合\nconst applications = require('../utils/applications'); // 应用方法集合\nconst Super = require('../components-dom-super/g-super'); // 超类型(子类型继承的对象)\n\n// 子类型\nconst Sub = tools.constructorInherit(Super, {\n    // 回调\n    callback: {},\n    // 配置\n    config: {},\n    // 数据\n    data: {\n        header: [{content: 'undefined-header0'}, {content: 'undefined-header1'}, {content: 'undefined-header2'}],\n        body: [[{content: 'undefined-body0-0'}, {content: 'undefined-body0-1'}, {content: 'undefined-body0-2'}]],\n        footer: '',\n    },\n});\n\n// 内部模块的创建(覆盖超类型)\nSub.prototype.moduleDomCreate = function () {\n    this.moduleDom = applications.createElement({\n        style: this.opts.config.moduleDomStyle,\n        customAttribute: this.opts.config.moduleDomCustomAttribute,\n        attribute: {\n            className: 'g-table',\n            innerHTML: `\n                <div class=\"g-table-header\">\n                    <div class=\"g-table-row\">\n                        ${this.moduleDomCreateHeader()}\n                    </div>\n                </div>\n                <div class=\"g-table-body\">\n                    ${this.moduleDomCreateBody()}\n                </div>\n                <div class=\"g-table-footer\">\n                    ${this.moduleDomCreateFooter()}\n                </div>\n            `,\n        },\n    });\n};\n\nSub.prototype.moduleDomCreateHeader = function () {\n    let html = '';\n    this.opts.data.header.forEach(function (v) {\n        html += `\n            <div class=\"g-table-col\">\n                <div class=\"g-table-col-wrap\">\n                    ${v.content}\n                </div>\n            </div>\n        `;\n    });\n    return html;\n};\n\nSub.prototype.moduleDomCreateBody = function () {\n    let html = '';\n    this.opts.data.body.forEach(function (v0) {\n        let row = '';\n        v0.forEach(function (v1) {\n            row += `\n                <div class=\"g-table-col\">\n                    <div class=\"g-table-col-wrap\">\n                        ${v1.content}\n                    </div>\n                </div>\n            `;\n        });\n        html += `<div class=\"g-table-row\">${row}</div>`;\n    });\n    return html;\n};\n\nSub.prototype.moduleDomCreateFooter = function () {\n    return this.opts.data.footer;\n};\n\n// 功能(覆盖超类型)\nSub.prototype.power = function () {\n    // 功能重写待续...\n};\n\nmodule.exports = Sub;\n\n\n\n// WEBPACK FOOTER //\n// ./app/phone/assets/js/components-dom/g-table.js"],"sourceRoot":""}