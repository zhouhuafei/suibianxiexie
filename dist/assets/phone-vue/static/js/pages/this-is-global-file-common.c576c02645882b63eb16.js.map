{"version":3,"sources":["webpack:///static/js/pages/this-is-global-file-common.c576c02645882b63eb16.js","webpack:///./src/utils/tools.js","webpack:///./src/utils/applications.js"],"names":["webpackJsonp","0","module","exports","__webpack_require__","Tools","prototype","typeOf","whatever","Object","toString","call","slice","toLowerCase","extend","json","self","this","opts","defaults","inherits","isDeep","defaultsType","keys","forEach","attr","attrDefaultsType","objRemoveQuote","obj","objType","newObj","constructorInherit","Super","Sub","parameter","arguments","length","undefined","console","log","arrayRemoveRepeat","array","newArray","v","indexOf","push","secondsToTime","seconds","day","Math","floor","hours","minutes","timeCountDown","isToTime","callback","run","over","timer","setInterval","clearInterval","strLimitLength","str","maxLength","Number","substring","jsonToArray","arr","Array","i","key","value","fillZero","place","valueLen","zeroLen","zero","join","pow","px2rem","strToHump","rule","split","toUpperCase","getRandom","min","max","round","random","isEmpty","trim","isZero","isPositiveInteger","test","isKeepDecimal","RegExp","isPhoneNum","isEmail","queryStringify","result","vType","JSON","stringify","queryParse","parse","e","keepDecimal","isFormat","format","baseNum","parseFloat","toFixed","replace","dateFormat","date","myDate","Date","getTime","setTime","year","getFullYear","month","getMonth","getDate","getHours","getMinutes","getSeconds","milliseconds","getMilliseconds","week1","getDay","week2","week3","1","Applications","tools","setCookie","name","expires","domain","path","secure","myTime","cookie","document","getCookie","arr2","removeCookie","createElement","elementName","style","customAttribute","attribute","elementNode","attr0","attr1","setAttribute","attr2","addMinusInput","noActiveClass","minNum","add","addCallback","minus","minusCallback","overMinCallback","input","blurCallback","inventoryNum","parseInt","space","onclick","num","classList","remove","onfocus","select","onblur","isNaN","getDomArray","element","dom","querySelectorAll","nodeType","getParent","parentSelector","parentNode","charAt","contains","id","tagName","htmlToDom","html","div","innerHTML","children","imgUploadBase64","Fn","limitNum","changeCallback","base64Callback","init","render","power","events","eventsInputChange","addEventListener","imagesNum","imgData","files","len","f","type","fileReadAsDataURL","fileRender","FileReader","readAsDataURL","base64","index","isPc","userAgentInfo","navigator","userAgent","Agents","flag","isWeiXin","match","isAndroid","window","appVersion","isIphone","offset","top","left","offsetTop","offsetLeft","offsetParent","scrollToY","to","scrollT","documentElement","scrollTop","body","speed","fn","ceil","scrollTo","requestAnimationFrame","cancelAnimationFrame","Select","items","click","itemsDom","selectNothing","checked","selectAll","selectReverse","v1","isCheckedAll","v2","whenScrollBottom","WhenScrollBottom","success","failure","isInitRender","interval","errorHeight","isLoadOver","allH","scrollHeight","clientHeight","dataLoadOver","clearTimeout","setTimeout","whetherDisableScroll","stopPropagation","ev","preventDefault","returnFalse","noScroll","overflow","yesScroll","removeEventListener","28"],"mappings":"AAAAA,cAAc,IAERC,EACA,SAAUC,EAAQC,EAASC,GAEjC,YCJA,SAASC,MAOTA,EAAMC,UAAUC,OAAS,SAAUC,GAC/B,MAAOC,QAAOH,UAAUI,SAASC,KAAKH,GAAUI,MAAM,GAAI,GAAGC,eAGjER,EAAMC,UAAUQ,OAAS,SAAUC,GAC/B,GAAMC,GAAOC,KACPC,EAAOH,KACbG,GAAKC,SAAWD,EAAKC,aACrBD,EAAKE,SAAWF,EAAKE,aACrBF,EAAKG,QAAyB,IAAhBH,EAAKG,QAAmBH,EAAKG,MAC3C,IAAMC,GAAeb,OAAOH,UAAUI,SAASC,KAAKO,EAAKC,UAAUP,MAAM,GAAI,GAAGC,aAuBhF,OArBIS,KADiBb,OAAOH,UAAUI,SAASC,KAAKO,EAAKE,UAAUR,MAAM,GAAI,GAAGC,gBAC3CK,EAAKG,QACjB,WAAjBC,GAA8C,UAAjBA,EAkBjCJ,EAAKC,SAAWD,EAAKE,SAjBjBX,OAAOc,KAAKL,EAAKE,UAAUI,QAAQ,SAAUC,GACzC,GAAMC,GAAmBjB,OAAOH,UAAUI,SAASC,KAAKO,EAAKC,SAASM,IAAOb,MAAM,GAAI,GAAGC,aAEtFa,KADqBjB,OAAOH,UAAUI,SAASC,KAAKO,EAAKE,SAASK,IAAOb,MAAM,GAAI,GAAGC,gBAC7CK,EAAKG,QACrB,WAArBK,GAAsD,UAArBA,EAMrCR,EAAKC,SAASM,GAAQP,EAAKE,SAASK,GALhCT,EAAKF,QAAQK,SAAUD,EAAKC,SAASM,GAAOL,SAAUF,EAAKE,SAASK,OAcjFP,EAAKC,UAMhBd,EAAMC,UAAUqB,eAAiB,SAAUC,GACvC,GAAMZ,GAAOC,KACPY,EAAUpB,OAAOH,UAAUI,SAASC,KAAKiB,GAAKhB,MAAM,GAAI,GAAGC,aACjE,IAAgB,WAAZgB,GAAoC,UAAZA,EACxB,MAAOD,EAEX,IAAIE,KAOJ,OANgB,UAAZD,IACAC,MAEJrB,OAAOc,KAAKK,GAAKJ,QAAQ,SAAUC,GAC/BK,EAAOL,GAAQT,EAAKW,eAAeC,EAAIH,MAEpCK,GAOXzB,EAAMC,UAAUyB,mBAAqB,SAAUC,GAU3C,QAASC,GAAIlB,GAETiB,EAAMrB,KAAKM,KAAMD,EAAKF,QAYlBK,SAAUH,EAAKW,eAAeO,GAC9Bd,SAAUL,KAzBgD,GAAhBmB,GAAgBC,UAAAC,OAAA,OAAAC,KAAAF,UAAA,GAAAA,UAAA,MAC5DnB,EAAOC,IAGb,OAAyE,aAArER,OAAOH,UAAUI,SAASC,KAAKqB,GAAOnB,cAAcD,MAAM,GAAI,IAC9D0B,QAAQC,IAAI,iCACL,IAwBX9B,OAAOc,KAAKS,EAAM1B,WAAWkB,QAAQ,SAAUC,GAC3CQ,EAAI3B,UAAUmB,GAAQO,EAAM1B,UAAUmB,KAGnCQ,IAGX5B,EAAMC,UAAUkC,kBAAoB,SAAUC,GAE1CA,EAA+B,UADlBxB,KACAV,OAAOkC,GAAqBA,IACzC,IAAMC,KAMN,OALAD,GAAMjB,QAAQ,SAAUmB,IACS,IAAzBD,EAASE,QAAQD,IACjBD,EAASG,KAAKF,KAGfD,GAMXrC,EAAMC,UAAUwC,cAAgB,WAAuB,GAAbC,GAAaZ,UAAAC,OAAA,OAAAC,KAAAF,UAAA,GAAAA,UAAA,GAAH,CAShD,QAAQa,IAPOC,KAAKC,MAAMH,EAAU,KAAO,IAOtBI,MALJF,KAAKC,MAAMH,EAAU,KAAO,IAKPK,QAHnBH,KAAKC,MAAMH,EAAU,KAAO,IAGYA,QADxCE,KAAKC,MAAMH,EAAU,MAI5C1C,EAAMC,UAAU+C,cAAgB,SAAUtC,GACtC,GAAMC,GAAOC,KACPC,EAAOF,EAAKF,QACdK,UACI4B,QAAS,EACTO,UAAU,EACVC,UACIC,IAAK,aAELC,KAAM,eAIdrC,SAAUL,IAEVgC,EAAU7B,EAAK6B,QACbS,EAAMtC,EAAKqC,SAASC,IACpBC,EAAOvC,EAAKqC,SAASE,IAE3B,IAAIV,GAAW,EAAG,CAEVS,EADAtC,EAAKoC,SACDtC,EAAK8B,cAAcC,IAElBC,IAAK,EAAGG,MAAO,EAAGC,QAAS,EAAGL,QAASA,GAGhD,IAAMW,GAAQC,YAAY,WACtBZ,IACIA,GAAW,EAEPS,EADAtC,EAAKoC,SACDtC,EAAK8B,cAAcC,IAElBC,IAAK,EAAGG,MAAO,EAAGC,QAAS,EAAGL,QAASA,KAGhDU,IACAG,cAAcF,KAEnB,KAGHX,EAAU,GACVT,QAAQC,IAAI,gBAQpBlC,EAAMC,UAAUuD,eAAiB,SAAUC,EAAKC,GAC5C,MAAKD,IAGDE,OAAOF,EAAI1B,QAAU2B,IACrBD,EAAMA,EAAIG,UAAU,EAAGF,IAEpBD,GALI,IAWfzD,EAAMC,UAAU4D,YAAc,WAAqB,GAAXnD,GAAWoB,UAAAC,OAAA,OAAAC,KAAAF,UAAA,GAAAA,UAAA,MACzCgC,IAUN,OATIpD,aAAgBqD,OAChBrD,EAAKS,QAAQ,SAAUmB,EAAG0B,GACtBF,EAAItB,MAAMyB,IAAKD,EAAGE,MAAO5B,MAG7BlC,OAAOc,KAAKR,GAAMS,QAAQ,SAAUC,GAChC0C,EAAItB,MAAMyB,IAAK7C,EAAM8C,MAAOxD,EAAKU,OAGlC0C,GAOX9D,EAAMC,UAAUkE,SAAW,WAIvB,IAAK,GAJ4BD,GAAsBpC,UAAAC,OAAA,OAAAC,KAAAF,UAAA,GAAAA,UAAA,GAAd,EAAGsC,EAAWtC,UAAAC,OAAA,OAAAC,KAAAF,UAAA,GAAAA,UAAA,GAAH,EAC9CuC,EAAWH,EAAM7D,WAAW0B,OAC5BuC,EAAUF,EAAQC,EAClBP,KACGE,EAAI,EAAGA,EAAIM,EAASN,IACzBF,EAAItB,KAAK,IAEb,IAAM+B,GAAOT,EAAIU,KAAK,GACtB,OAAIN,GAAQtB,KAAK6B,IAAI,GAAIL,GACrB,GAAUG,EAAOL,EAErB,GAAUA,GAGdlE,EAAMC,UAAUyE,OAAS,WACrB,OADmD5C,UAAAC,OAAA,OAAAC,KAAAF,UAAA,GAAAA,UAAA,GAAf,IAAeA,UAAAC,OAAA,OAAAC,KAAAF,UAAA,GAAAA,UAAA,GAAL,KACxB,GAAtB,OAOJ9B,EAAMC,UAAU0E,UAAY,SAAUlB,GAAiB,GAAZmB,GAAY9C,UAAAC,OAAA,OAAAC,KAAAF,UAAA,GAAAA,UAAA,GAAL,GAG9C,IAAa,WAFAlB,KACKV,OAAOuD,GACF,CACnB,GAAMK,GAAML,EAAIoB,MAAMD,EACtBd,GAAI3C,QAAQ,SAAUmB,EAAG0B,GACX,IAANA,GACIF,EAAIE,GAAG,KACPF,EAAIE,GAAKF,EAAIE,GAAG,GAAGc,cAAgBhB,EAAIE,GAAGJ,UAAU,MAIhEH,EAAMK,EAAIU,KAAK,QAEfvC,SAAQC,IAAI,cAEhB,OAAOuB,IAGXzD,EAAMC,UAAU8E,UAAY,SAAUC,EAAKC,GACvC,GAAMtE,GAAOC,IAGb,OAFAoE,GAA2B,WAArBrE,EAAKT,OAAO8E,GAAoBA,EAAM,EAC5CC,EAA2B,WAArBtE,EAAKT,OAAO+E,GAAoBA,EAAM,EACrCrC,KAAKsC,MAAMtC,KAAKuC,UAAYF,EAAMD,GAAOA,IAGpDhF,EAAMC,UAAUmF,QAAU,SAAUlB,GAChC,MAAmC,KAA5BA,EAAM7D,WAAWgF,QAG5BrF,EAAMC,UAAUqF,OAAS,SAAUpB,GAC/B,MAAyB,KAAlBP,OAAOO,IAGlBlE,EAAMC,UAAUsF,kBAAoB,SAAUrB,GAE1C,MADY,aACDsB,KAAKtB,IAGpBlE,EAAMC,UAAUwF,cAAgB,SAAUvB,GAAkB,GAAXE,GAAWtC,UAAAC,OAAA,OAAAC,KAAAF,UAAA,GAAAA,UAAA,GAAH,CAErD,OADY,IAAI4D,QAAJ,eAA0BtB,EAA1B,MACDoB,KAAKtB,IAGpBlE,EAAMC,UAAU0F,WAAa,SAAUzB,GAEnC,MADY,wBACDsB,KAAKtB,IAGpBlE,EAAMC,UAAU2F,QAAU,SAAU1B,GAEhC,MADY,6DACDsB,KAAKtB,IAGpBlE,EAAMC,UAAU4F,eAAiB,WAAoB,GAAVtE,GAAUO,UAAAC,OAAA,OAAAC,KAAAF,UAAA,GAAAA,UAAA,MAC3CnB,EAAOC,KACPkF,IASN,OARA1F,QAAOc,KAAKK,GAAKJ,QAAQ,SAAU8C,GAC/B,GAAM8B,GAAQpF,EAAKT,OAAOqB,EAAI0C,GAChB,YAAV8B,GAAgC,UAAVA,EACtBD,EAAOtD,KAAQyB,EAAf,IAAsB+B,KAAKC,UAAU1E,EAAI0C,KAEzC6B,EAAOtD,KAAQyB,EAAf,IAAsB1C,EAAI0C,MAG3B6B,EAAOtB,KAAK,MAGvBxE,EAAMC,UAAUiG,WAAa,SAAUzC,GACnC,GAAMqC,KAWN,OAVIrC,IACAA,EAAIoB,MAAM,KAAK1D,QAAQ,SAAUmB,GAC7B,GAAMwB,GAAMxB,EAAEuC,MAAM,IACpB,KACIiB,EAAOhC,EAAI,IAAMkC,KAAKG,MAAMrC,EAAI,IAClC,MAAOsC,GACLN,EAAOhC,EAAI,IAAMA,EAAI,MAI1BgC,GAQX9F,EAAMC,UAAUoG,YAAc,WAAiD,GAAvCnC,GAAuCpC,UAAAC,OAAA,OAAAC,KAAAF,UAAA,GAAAA,UAAA,GAA/B,EAAGsC,EAA4BtC,UAAAC,OAAA,OAAAC,KAAAF,UAAA,GAAAA,UAAA,GAApB,EAAGwE,IAAiBxE,UAAAC,OAAA,OAAAC,KAAAF,UAAA,KAAAA,UAAA,GACrEyE,EAAS,sBACXT,EAAS5B,EACPsC,EAAU5D,KAAK6B,IAAI,GAAIL,EAI7B,IAHsB,IAAlBT,OAAOS,KACP0B,GAAUlD,KAAKC,MAAM4D,WAAWvC,GAASsC,GAAWA,GAASE,QAAQ,IAErEJ,EAAU,CACV,GAAMxC,GAAMgC,EAAOjB,MAAM,IACzBf,GAAI,GAAKA,EAAI,GAAG6C,QAAQJ,EAAQ,KAChCT,EAAShC,EAAIU,KAAK,KAEtB,MAAOsB,IAOX9F,EAAMC,UAAU2G,WAAa,WAAqE,GAA3DC,GAA2D/E,UAAAC,OAAA,OAAAC,KAAAF,UAAA,GAAAA,UAAA,GAApD,EAAGgE,EAAiDhE,UAAAC,OAAA,OAAAC,KAAAF,UAAA,GAAAA,UAAA,GAAxC,uCAChDnB,EAAOC,KACPkG,EAAS,GAAIC,KACuC,aAAnD1G,SAASC,KAAKuG,GAAMtG,MAAM,GAAI,GAAGC,gBACpCqG,EAAOA,EAAKG,WAEhBF,EAAOG,QAAQJ,EACf,IAAMtF,IACF2F,KAAMJ,EAAOK,cACbC,MAAOzG,EAAKwD,SAAS2C,EAAOO,WAAa,EAAG,GAC5C1E,IAAKhC,EAAKwD,SAAS2C,EAAOQ,UAAW,GACrCxE,MAAOnC,EAAKwD,SAAS2C,EAAOS,WAAY,GACxCxE,QAASpC,EAAKwD,SAAS2C,EAAOU,aAAc,GAC5C9E,QAAS/B,EAAKwD,SAAS2C,EAAOW,aAAc,GAC5CC,aAAcZ,EAAOa,kBACrBC,YAAa,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAKd,EAAOe,UACvDC,WAAY,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAKhB,EAAOe,UACtDE,YAAa,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAKjB,EAAOe,UAM3D,OAJAzH,QAAOc,KAAKK,GAAKJ,QAAQ,SAAU8C,GAC/B6B,EAASA,EAAOa,QAAQ,GAAIjB,QAAOzB,GAAM1C,EAAI0C,MAEjD1C,EAAIuE,OAASA,EACNvE,GAGX1B,EAAOC,QAAU,GAAIE,IDsCfgI,EACA,SAAUnI,EAAQC,EAASC,GAEjC,YErZA,SAASkI,MAHT,GAAMC,GAAQnI,EAAQ,EAOtBkI,GAAahI,UAAUkI,UAAY,SAAUC,EAAMlE,EAAOmE,EAASC,EAAQC,EAAMC,GAC7E,GAAM1B,GAAS,GAAIC,MACb0B,EAAS3B,EAAOE,SACtBF,GAAOG,QAAQwB,EAAmB,GAAVJ,EAAe,GAAK,GAAK,IACjD,IAAIK,GAAYN,EAAZ,IAAoBlE,CACpBmE,KACAK,gBAAuB5B,GAEvBwB,IACAI,eAAsBJ,GAEtBC,IACAG,aAAoBH,GAEpBC,IACAE,eAAsBF,GAE1BG,SAASD,OAASA,GAGtBT,EAAahI,UAAU2I,UAAY,SAAUR,GACzC,GAAMM,GAASC,SAASD,OAClB5E,EAAM4E,EAAO7D,MAAM,MACrBX,EAAQ,EAOZ,OANAJ,GAAI3C,QAAQ,SAAUmB,GAClB,GAAMuG,GAAOvG,EAAEuC,MAAM,IACjBgE,GAAK,KAAOT,IACZlE,EAAQ2E,EAAK,MAGd3E,GAGX+D,EAAahI,UAAU6I,aAAe,SAAUV,EAAME,EAAQC,EAAMC,GAChE5H,KAAKuH,UAAUC,EAAM,IAAK,EAAGE,EAAQC,EAAMC,IAG/CP,EAAahI,UAAU8I,cAAgB,SAAUrI,GAC7C,GAAMG,GAAOH,KACbG,GAAKmI,YAAcnI,EAAKmI,aAAe,MACvCnI,EAAKoI,MAAQpI,EAAKoI,UAClBpI,EAAKqI,gBAAkBrI,EAAKqI,oBAC5BrI,EAAKsI,UAAYtI,EAAKsI,aACtB,IAAMC,GAAcT,SAASI,cAAclI,EAAKmI,YAUhD,OATA5I,QAAOc,KAAKL,EAAKoI,OAAO9H,QAAQ,SAAUkI,GACtCD,EAAYH,MAAMI,GAASxI,EAAKoI,MAAMI,KAE1CjJ,OAAOc,KAAKL,EAAKqI,iBAAiB/H,QAAQ,SAAUmI,GAChDF,EAAYG,aAAZ,QAAiCD,EAASzI,EAAKqI,gBAAgBI,MAEnElJ,OAAOc,KAAKL,EAAKsI,WAAWhI,QAAQ,SAAUqI,GAC1CJ,EAAYI,GAAS3I,EAAKsI,UAAUK,KAEjCJ,GAGXnB,EAAahI,UAAUwJ,cAAgB,SAAU/I,GAC7C,IAAKA,EAED,WADAuB,SAAQC,IAAI,oBAGhB,IAAMwH,GAAgBhJ,EAAKgJ,eAAiB,KACtCC,MAAyB3H,KAAhBtB,EAAKiJ,OAAuB,EAAIjJ,EAAKiJ,OAC9CC,EAAMlJ,EAAKkJ,IACXC,EAAcnJ,EAAKmJ,YACnBC,EAAQpJ,EAAKoJ,MACbC,EAAgBrJ,EAAKqJ,cACrBC,EAAkBtJ,EAAKsJ,iBAAmB,aAE1CC,EAAQvJ,EAAKuJ,MACbC,EAAexJ,EAAKwJ,aACpBC,EAAeC,SAAS1J,EAAKyJ,cAC7BE,EAAQ,WACiB,KAAvBJ,EAAM/F,MAAMmB,SACZ4E,EAAM/F,MAAQyF,GAItBC,GAAIU,QAAU,WACVD,GACA,IAAIE,GAAMH,SAASH,EAAM/F,MACzBqG,KACAN,EAAM/F,MAAQqG,EACVA,GAAOJ,IAEHF,EAAM/F,MADW,IAAjBiG,EACcR,EAEAQ,EAElBP,EAAIY,UAAUZ,IAAIF,IAEtBI,EAAMU,UAAUC,OAAOf,GACnBG,GACAA,KAIRC,EAAMQ,QAAU,WACZD,GACA,IAAIE,GAAMH,SAASH,EAAM/F,MACzBqG,KACAN,EAAM/F,MAAQqG,EACVA,EAAMZ,IACNM,EAAM/F,MAAQyF,EACdG,EAAMU,UAAUZ,IAAIF,GACpBM,KAEJJ,EAAIY,UAAUC,OAAOf,GACjBK,GACAA,KAIRE,EAAMS,QAAU,WACZT,EAAMU,UAGVV,EAAMW,OAAS,WACXP,GACA,IAAIE,GAAMH,SAASH,EAAM/F,MACrB2G,OAAMN,KACNA,EAAMZ,GAEVG,EAAMU,UAAUC,OAAOf,GACvBE,EAAIY,UAAUC,OAAOf,GACjBa,GAAOJ,IACPF,EAAM/F,MAAQiG,EACdP,EAAIY,UAAUZ,IAAIF,IAElBa,GAAOZ,IACPM,EAAM/F,MAAQyF,EACdG,EAAMU,UAAUZ,IAAIF,IAEpBQ,GACAA,MAKZjC,EAAahI,UAAU6K,YAAc,SAAUC,GAC3C,GAAIC,KAkBJ,OAjBID,KAE2E,WAAvE3K,OAAOH,UAAUI,SAASC,KAAKyK,GAASxK,MAAM,GAAI,GAAGC,gBACrDwK,KAASzK,MAAMD,KAAKqI,SAASsC,iBAAiBF,KAGzB,IAArBA,EAAQG,WACRF,GAAOD,IAMgE,mBAAvE3K,OAAOH,UAAUI,SAASC,KAAKyK,GAASxK,MAAM,GAAI,GAAGC,eAA6G,aAAvEJ,OAAOH,UAAUI,SAASC,KAAKyK,GAASxK,MAAM,GAAI,GAAGC,gBAChJwK,KAASzK,MAAMD,KAAKyK,KAGrBC,GAGX/C,EAAahI,UAAUkL,UAAY,SAAUJ,EAASK,GAIlD,KAFAL,EADanK,KACEkK,YAAYC,GAAS,IAIhC,MADA9I,SAAQC,IAAI,WACL,IAGX,KAAKkJ,EACD,MAAOL,GAAQM,UAEnB,IAA8B,gBAAnBD,GAEP,OADAL,EAAUA,EAAQM,WACVD,EAAeE,OAAO,IAC1B,IAAK,IACD,KAAOP,GAAS,CACZ,IAAKA,EAAQP,UAET,MADAvI,SAAQC,IAAI,iBACL,IAEX,IAAI6I,EAAQP,UAAUe,SAASH,EAAexH,UAAU,IACpD,MAAOmH,EAEXA,GAAUA,EAAQM,WAEtB,KACJ,KAAK,IACD,KAAON,GAAS,CACZ,GAAIA,IAAYpC,SAEZ,MADA1G,SAAQC,IAAI,cACL,IAEX,IAAI6I,EAAQS,KAAOJ,EAAexH,UAAU,GACxC,MAAOmH,EAEXA,GAAUA,EAAQM,WAEtB,KACJ,SACI,KAAON,GAAS,CACZ,GAAIA,IAAYpC,SAEZ,MADA1G,SAAQC,IAAI,mBACL,IAEX,IAAI6I,EAAQU,QAAQjL,gBAAkB4K,EAClC,MAAOL,EAEXA,GAAUA,EAAQM,YAKlC,MAAO,OAGXpD,EAAahI,UAAUyL,UAAY,SAAUC,GACzC,GAAMC,GAAMjD,SAASI,cAAc,MAEnC,OADA6C,GAAIC,UAAYF,EACTC,EAAIE,SAAS,IAGxB7D,EAAahI,UAAU8L,gBAAkB,WACrC,QAASC,GAAGtL,GAGR,GAFAE,KAAKC,KAAOH,OAEPE,KAAKC,KAAKoJ,MAEX,WADAhI,SAAQC,IAAI,gBAIhBtB,MAAKC,KAAKoL,SAAWrL,KAAKC,KAAKoL,UAAY,IAE3CrL,KAAKC,KAAKqL,eAAiBtL,KAAKC,KAAKqL,gBAAkB,WACnDjK,QAAQC,IAAI,2BAGhBtB,KAAKC,KAAKsL,eAAiBvL,KAAKC,KAAKsL,gBAAkB,WACnDlK,QAAQC,IAAI,2BAGhBtB,KAAKwL,OAwDT,MArDAJ,GAAG/L,UAAUmM,KAAO,WAEhBxL,KAAKyL,SAELzL,KAAK0L,SAETN,EAAG/L,UAAUoM,OAAS,aAGtBL,EAAG/L,UAAUqM,MAAQ,WAEjB1L,KAAK2L,UAETP,EAAG/L,UAAUsM,OAAS,WAClB3L,KAAK4L,qBAETR,EAAG/L,UAAUuM,kBAAoB,WAC7B,GAAM7L,GAAOC,KACPqL,EAAWrL,KAAKC,KAAKoL,QAC3BrL,MAAKC,KAAKoJ,MAAMwC,iBAAiB,SAAU,WACvC,GAAIC,GAAY,CAEhB/L,GAAKgM,UAGL,KAAK,GAFCC,GAAQhM,KAAKgM,MACbC,EAAMD,EAAM7K,OACTiC,EAAI,EAAGA,EAAI6I,EAAK7I,IAAK,CAC1B,GAAM8I,GAAIF,EAAM5I,EACC,WAAUwB,KAAKsH,EAAEC,OAG1BL,EAAYT,IACZtL,EAAKgM,QAAQnK,KAAKsK,GAClBJ,KAMZ/L,EAAKE,KAAKqL,gBAAgBS,QAAShM,EAAKgM,UAExChM,EAAKqM,uBAGbhB,EAAG/L,UAAU+M,kBAAoB,WAC7B,GAAMrM,GAAOC,IACbA,MAAK+L,QAAQxL,QAAQ,SAAUmB,EAAG0B,GAC9B,GAAMiJ,GAAa,GAAIC,WACvBD,GAAWE,cAAc7K,GACzB2K,EAAWR,iBAAiB,OAAQ,WAChC9L,EAAKE,KAAKsL,gBAAgBiB,OAAQxM,KAAKkF,OAAQuH,MAAOrJ,SAI3DgI,GAGX/D,EAAahI,UAAUqN,KAAO,WAI1B,IAAK,GAHCC,GAAgBC,UAAUC,UAC1BC,GAAU,UAAW,SAAU,YAAa,gBAAiB,OAAQ,QACvEC,GAAO,EACFrL,EAAI,EAAGA,EAAIoL,EAAO3L,OAAQO,IAC/B,GAAIiL,EAAchL,QAAQmL,EAAOpL,IAAM,EAAG,CACtCqL,GAAO,CACP,OAGR,MAAOA,IAGX1F,EAAahI,UAAU2N,SAAW,WAC9B,MAAOJ,WAAUC,UAAUjN,cAAcqN,MAAM,qBAGnD5F,EAAahI,UAAU6N,UAAY,WAC/B,MAAOC,QAAOP,UAAUQ,WAAWH,MAAM,cAG7C5F,EAAahI,UAAUgO,SAAW,WAC9B,MAAOF,QAAOP,UAAUQ,WAAWH,MAAM,aAG7C5F,EAAahI,UAAUiO,OAAS,SAAUnD,GACtC,GAAMpK,GAAOC,KACTuN,EAAM,EACNC,EAAO,CAEX,KADArD,EAAUpK,EAAKmK,YAAYC,GAAS,GAC7BA,GACHoD,GAAOpD,EAAQsD,UACfD,GAAQrD,EAAQuD,WAChBvD,EAAUA,EAAQwD,YAEtB,QACIJ,IAAKA,EACLC,KAAMA,IAIdnG,EAAahI,UAAUuO,UAAY,WAAoB,GAAVC,GAAU3M,UAAAC,OAAA,OAAAC,KAAAF,UAAA,GAAAA,UAAA,GAAL,IAE1C4M,EAAU/F,SAASgG,gBAAgBC,WAAajG,SAASkG,KAAKD,UAC9DE,EAAQ,EACRzL,EAAQ,KACN0L,EAAK,QAALA,KACFD,EAAQlM,KAAKoM,MAAMN,EAAUD,GALnB,GAMVC,GAAWI,EACXf,OAAOkB,SAAS,EAAGP,GACnBrL,EAAQ6L,sBAAsBH,GAC1BL,GAAgB,EAALD,GACXU,qBAAqB9L,GAG7B6L,uBAAsBH,IAG1B9G,EAAahI,UAAU0K,OAAS,WAG5B,QAASyE,GAAO1O,GACZE,KAAKC,KAAOqH,EAAMzH,QACdK,UACIuO,MAAO,KACPnM,UACIoM,MAAO,eAIfvO,SAAUL,IAEdE,KAAK2O,SAAW5O,EAAKmK,YAAYlK,KAAKC,KAAKwO,OAC3CzO,KAAKwL,OAdT,GAAMzL,GAAOC,IA2Db,OAzCAwO,GAAOnP,UAAUmM,KAAO,WACpBxL,KAAK0L,SAIT8C,EAAOnP,UAAUuP,cAAgB,WAC7B5O,KAAK2O,SAASpO,QAAQ,SAAUmB,GAC5BA,EAAEmN,SAAU,KAKpBL,EAAOnP,UAAUyP,UAAY,WACzB9O,KAAK2O,SAASpO,QAAQ,SAAUmB,GAC5BA,EAAEmN,SAAU,KAKpBL,EAAOnP,UAAU0P,cAAgB,WAC7B/O,KAAK2O,SAASpO,QAAQ,SAAUmB,GAC5BA,EAAEmN,SAAWnN,EAAEmN,WAKvBL,EAAOnP,UAAUqM,MAAQ,WACrB,GAAM3L,GAAOC,IACbA,MAAK2O,SAASpO,QAAQ,SAAUyO,GAC5BA,EAAGnD,iBAAiB,QAAS,WACzB,GAAIoD,IAAe,CACnBlP,GAAK4O,SAASpO,QAAQ,SAAU2O,IACT,IAAfA,EAAGL,UACHI,GAAe,KAGvBlP,EAAKE,KAAKqC,SAASoM,OAAOvE,QAASnK,KAAMiP,aAAcA,SAK5DT,GAGXnH,EAAahI,UAAU8P,iBAAmB,WACtC,QAASC,GAAiBtP,GACtBE,KAAKC,KAAOqH,EAAMzH,QACdK,UACIoC,UACI+M,QAAS,aAETC,QAAS,cAGbC,cAAc,EACdC,SAAU,GACVC,YAAa,GAEjBtP,SAAUL,IAEdE,KAAK0P,YAAa,EAClB1P,KAAKwL,OAsCT,MAnCA4D,GAAiB/P,UAAUmM,KAAO,WAC1BxL,KAAKC,KAAKsP,cACVvP,KAAKyL,SAETzL,KAAK0L,SAGT0D,EAAiB/P,UAAUoM,OAAS,WAChC,GAAMnJ,GAAWtC,KAAKC,KAAKqC,SACrBqN,EAAO5H,SAASkG,KAAK2B,cACT7H,SAASgG,gBAAgBC,WAAajG,SAASkG,KAAKD,WACjDjG,SAASgG,gBAAgB8B,cACdF,EAAO3P,KAAKC,KAAKwP,cAAgBzP,KAAK0P,WAClEpN,EAAS+M,QAAQrP,MAEjBsC,EAASgN,WAKjBF,EAAiB/P,UAAUyQ,aAAe,WACtC9P,KAAK0P,YAAa,GAItBN,EAAiB/P,UAAUqM,MAAQ,WAC/B,GAAM3L,GAAOC,KACTyC,EAAQ,IACZ0K,QAAOtB,iBAAiB,SAAU,WAC9BkE,aAAatN,GACbA,EAAQuN,WAAW,WACfjQ,EAAK0L,UACN1L,EAAKE,KAAKuP,aAGdJ,GAGX/H,EAAahI,UAAU4Q,qBAAuB,WAC1C,OAEIC,gBAAiB,SAAUC,GACvBA,EAAGD,mBAGPE,eAAgB,SAAUD,GACtBA,EAAGC,kBAGPC,YAAa,SAAUF,GACnBA,EAAGC,iBACHD,EAAGD,mBAGPI,SAAU,WACNvI,SAAS8D,iBAAiB,YAAa7L,KAAKoQ,gBAAgB,GAC5DrI,SAASgG,gBAAgB1F,MAAMkI,SAAW,UAG9CC,UAAW,WACPzI,SAAS0I,oBAAoB,YAAazQ,KAAKoQ,gBAAgB,GAC/DrI,SAASgG,gBAAgB1F,MAAMkI,SAAW,UAKtDtR,EAAOC,QAAU,GAAImI,IFgafqJ,GACA,SAAUzR,EAAQC,EAASC,GAEjCA,EAAoB,GACpBF,EAAOC,QAAUC,EAAoB,MAKlC","file":"static/js/pages/this-is-global-file-common.c576c02645882b63eb16.js","sourcesContent":["webpackJsonp([4],{\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n// 工具方法集合\nfunction Tools() {}\n\n/**\n * @description 判断类型\n * @param {*} whatever - 任何类型的数据都可以\n * */\nTools.prototype.typeOf = function (whatever) {\n    return Object.prototype.toString.call(whatever).slice(8, -1).toLowerCase();\n};\n// 对象扩展\nTools.prototype.extend = function (json) {\n    var self = this;\n    var opts = json || {};\n    opts.defaults = opts.defaults || {}; // 默认对象\n    opts.inherits = opts.inherits || {}; // 继承对像\n    opts.isDeep = opts.isDeep === false ? opts.isDeep : true; // 是否进行深拷贝(默认进行深拷贝)\n    var defaultsType = Object.prototype.toString.call(opts.defaults).slice(8, -1).toLowerCase();\n    var inheritsType = Object.prototype.toString.call(opts.inherits).slice(8, -1).toLowerCase();\n    if (defaultsType === inheritsType && opts.isDeep) {\n        if (defaultsType === 'object' || defaultsType === 'array') {\n            // 当为对象或者为数组\n            Object.keys(opts.inherits).forEach(function (attr) {\n                var attrDefaultsType = Object.prototype.toString.call(opts.defaults[attr]).slice(8, -1).toLowerCase();\n                var attrInheritsType = Object.prototype.toString.call(opts.inherits[attr]).slice(8, -1).toLowerCase();\n                if (attrDefaultsType === attrInheritsType && opts.isDeep) {\n                    // 类型相同\n                    if (attrDefaultsType === 'object' || attrDefaultsType === 'array') {\n                        // 当为对象或者为数组\n                        self.extend({ defaults: opts.defaults[attr], inherits: opts.inherits[attr] });\n                    } else {\n                        opts.defaults[attr] = opts.inherits[attr];\n                    }\n                } else {\n                    // 类型不同,直接后面的覆盖前面的\n                    opts.defaults[attr] = opts.inherits[attr];\n                }\n            });\n        } else {\n            opts.defaults = opts.inherits;\n        }\n    } else {\n        opts.defaults = opts.inherits;\n    }\n    return opts.defaults;\n};\n/**\n * @description 对象移除引用\n * @param {Object} obj - 参数需要是一个对象或者是一个数组,这里一定不能给默认值,否则undefined就没了\n * */\nTools.prototype.objRemoveQuote = function (obj) {\n    var self = this;\n    var objType = Object.prototype.toString.call(obj).slice(8, -1).toLowerCase();\n    if (objType !== 'object' && objType !== 'array') {\n        return obj;\n    }\n    var newObj = {};\n    if (objType === 'array') {\n        newObj = [];\n    }\n    Object.keys(obj).forEach(function (attr) {\n        newObj[attr] = self.objRemoveQuote(obj[attr]);\n    });\n    return newObj;\n};\n/**\n * @description 面向对象继承\n * @param {Function} Super - 继承自某个超类型(这个必须传的是一个构造函数)\n * @param {Object} parameter - 子类型的参数(这个必须传的是一个对象)\n * */\nTools.prototype.constructorInherit = function (Super) {\n    var parameter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var self = this;\n\n    // 如果超类型不存在\n    if (Object.prototype.toString.call(Super).toLowerCase().slice(8, -1) !== 'function') {\n        console.log('no find Super or Super error');\n        return false;\n    }\n\n    // 子类型\n    function Sub(json) {\n        // 子类型继承超类型的属性\n        Super.call(this, self.extend({\n            /*\n             * 注意:\n             * defaults要防止对象的引用(如果不防止的话,会出现BUG)\n             * 例如 wrap的默认值是'.g-wrap'\n             * 第一次   var obj1=new Sub({wrap:'body'});   wrap的值是'body'\n             * 第二次   var obj2=new Sub();    这里按理说wrap的值应该是默认值'.g-wrap'\n             * 但是由于对象引用的原因,这里的值会变成'body'\n             * 因此这里要处理掉对象的引用,所以我使用了JSON的方法进行了阻止\n             * 但是JSON.stringify方法居然会过滤掉对象内部的所有函数,真是日了狗了\n             * 所以我就封装了一个移除对象引用的函数\n             * */\n            defaults: self.objRemoveQuote(parameter),\n            inherits: json\n        }));\n    }\n\n    // 子类型继承超类型的方法\n    Object.keys(Super.prototype).forEach(function (attr) {\n        Sub.prototype[attr] = Super.prototype[attr];\n    });\n\n    return Sub;\n};\n// 数组去重\nTools.prototype.arrayRemoveRepeat = function (array) {\n    var self = this;\n    array = self.typeOf(array) === 'array' ? array : [];\n    var newArray = [];\n    array.forEach(function (v) {\n        if (newArray.indexOf(v) === -1) {\n            newArray.push(v);\n        }\n    });\n    return newArray;\n};\n/**\n * @description 秒转时间\n * @param {Number} seconds - 秒数\n * */\nTools.prototype.secondsToTime = function () {\n    var seconds = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n    // 天\n    var nowDay = Math.floor(seconds / 3600 / 24);\n    // 时\n    var nowHours = Math.floor(seconds / 3600 % 24);\n    // 分\n    var nowMinutes = Math.floor(seconds % 3600 / 60);\n    // 秒\n    var nowSeconds = Math.floor(seconds % 60);\n    return { day: nowDay, hours: nowHours, minutes: nowMinutes, seconds: nowSeconds };\n};\n// 倒计时\nTools.prototype.timeCountDown = function (json) {\n    var self = this;\n    var opts = self.extend({\n        defaults: {\n            seconds: 0,\n            isToTime: true, // 是否转换成时间\n            callback: {\n                run: function run() {},\n                over: function over() {}\n            }\n        },\n        inherits: json\n    });\n    var seconds = opts.seconds; // 秒数\n    var run = opts.callback.run; // 运行的回调\n    var over = opts.callback.over; // 结束的回调\n    // 时间大于等于0秒\n    if (seconds >= 0) {\n        if (opts.isToTime) {\n            run(self.secondsToTime(seconds)); // 运行时的回调\n        } else {\n            run({ day: 0, hours: 0, minutes: 0, seconds: seconds }); // 运行时的回调\n        }\n        // 倒计时走你\n        var timer = setInterval(function () {\n            seconds--;\n            if (seconds >= 0) {\n                if (opts.isToTime) {\n                    run(self.secondsToTime(seconds)); // 运行时的回调\n                } else {\n                    run({ day: 0, hours: 0, minutes: 0, seconds: seconds }); // 运行时的回调\n                }\n            } else {\n                over(); // 结束时的回调\n                clearInterval(timer);\n            }\n        }, 1000);\n    }\n    // 时间小于0秒\n    if (seconds < 0) {\n        console.log('倒计时的秒数不能小于0');\n    }\n};\n/**\n * @description 字符串限制最大长度\n * @param {String} str - 字符串\n * @param {Number} maxLength - 限制最大长度\n * */\nTools.prototype.strLimitLength = function (str, maxLength) {\n    if (!str) {\n        return '';\n    }\n    if (Number(str.length) > maxLength) {\n        str = str.substring(0, maxLength);\n    }\n    return str;\n};\n/**\n * @description json转数组\n * @param {Object} json - json格式的对象{}\n * */\nTools.prototype.jsonToArray = function () {\n    var json = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    var arr = [];\n    if (json instanceof Array) {\n        json.forEach(function (v, i) {\n            arr.push({ key: i, value: v });\n        });\n    } else {\n        Object.keys(json).forEach(function (attr) {\n            arr.push({ key: attr, value: json[attr] });\n        });\n    }\n    return arr;\n};\n/**\n * @description 补零函数\n * @param {Number} value - 数字\n * @param {Number} place - 这个数字是个几位数的数字,如果是个3位数的数字,不足三位,则补0\n * */\nTools.prototype.fillZero = function () {\n    var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var place = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n\n    var valueLen = value.toString().length;\n    var zeroLen = place - valueLen;\n    var arr = [];\n    for (var i = 0; i < zeroLen; i++) {\n        arr.push('0');\n    }\n    var zero = arr.join('');\n    if (value < Math.pow(10, place)) {\n        return '' + zero + value;\n    }\n    return '' + value;\n};\n// px转rem\nTools.prototype.px2rem = function () {\n    var px = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var base = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 320;\n\n    return px / base * 10 + 'rem';\n};\n/**\n * @description 字符串转驼峰\n * @param {String} str - 字符串\n * @param {String} rule - 规则\n * */\nTools.prototype.strToHump = function (str) {\n    var rule = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '-';\n\n    var self = this;\n    var type = self.typeOf(str);\n    if (type === 'string') {\n        var arr = str.split(rule);\n        arr.forEach(function (v, i) {\n            if (i !== 0) {\n                if (arr[i][0]) {\n                    arr[i] = arr[i][0].toUpperCase() + arr[i].substring(1);\n                }\n            }\n        });\n        str = arr.join('');\n    } else {\n        console.log('参数错误,请输入字符串');\n    }\n    return str;\n};\n// 获取随机数\nTools.prototype.getRandom = function (min, max) {\n    var self = this;\n    min = self.typeOf(min) === 'number' ? min : 0;\n    max = self.typeOf(max) === 'number' ? max : 1;\n    return Math.round(Math.random() * (max - min) + min);\n};\n// 是不是空字符串\nTools.prototype.isEmpty = function (value) {\n    return value.toString().trim() === '';\n};\n// 是不是数字0\nTools.prototype.isZero = function (value) {\n    return Number(value) === 0;\n};\n// 是不是正整数\nTools.prototype.isPositiveInteger = function (value) {\n    var reg = /^[1-9]\\d*$/;\n    return reg.test(value);\n};\n// 是不是保留了place位小数(默认两位)\nTools.prototype.isKeepDecimal = function (value) {\n    var place = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n\n    var reg = new RegExp('^\\\\d+\\\\.\\\\d{' + place + '}$');\n    return reg.test(value);\n};\n// 是不是手机号\nTools.prototype.isPhoneNum = function (value) {\n    var reg = /^1[3458][0-9]\\d{4,8}$/;\n    return reg.test(value);\n};\n// 是不是邮箱\nTools.prototype.isEmail = function (value) {\n    var reg = /^([0-9A-Za-z\\-_.]+)@([0-9a-z]+\\.[a-z]{2,3}(\\.[a-z]{2})?)$/g;\n    return reg.test(value);\n};\n// {a:1,b:2} 序列成 'a=1&b=2'\nTools.prototype.queryStringify = function () {\n    var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    var self = this;\n    var result = [];\n    Object.keys(obj).forEach(function (key) {\n        var vType = self.typeOf(obj[key]);\n        if (vType === 'object' || vType === 'array') {\n            result.push(key + '=' + JSON.stringify(obj[key]));\n        } else {\n            result.push(key + '=' + obj[key]);\n        }\n    });\n    return result.join('&');\n};\n// 'a=1&b=2' 解析成 {a:1,b:2}\nTools.prototype.queryParse = function (str) {\n    var result = {};\n    if (str) {\n        str.split('&').forEach(function (v) {\n            var arr = v.split('=');\n            try {\n                result[arr[0]] = JSON.parse(arr[1]);\n            } catch (e) {\n                result[arr[0]] = arr[1];\n            }\n        });\n    }\n    return result;\n};\n/**\n * @description 保留几位小数\n * @param {Number} value - 数字\n * @param {Number} place - 保留几位小数(默认两位)\n * @param {Boolean} isFormat - 是否格式化(默认格式化)\n * */\nTools.prototype.keepDecimal = function () {\n    var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var place = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n    var isFormat = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n    var format = /(?!\\b)(?=(\\d{3})+$)/;\n    var result = value;\n    var baseNum = Math.pow(10, place);\n    if (Number(place) !== 0) {\n        result = (Math.floor(parseFloat(value) * baseNum) / baseNum).toFixed(2);\n    }\n    if (isFormat) {\n        var arr = result.split('.');\n        arr[0] = arr[0].replace(format, ',');\n        result = arr.join('.');\n    }\n    return result;\n};\n/**\n * @description 日期格式化\n * @param {Number} date - 毫秒数\n * @param {String} result - 'year/month/day hours:minutes:seconds' - 格式\n * */\nTools.prototype.dateFormat = function () {\n    var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var result = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'year/month/day hours:minutes:seconds';\n\n    var self = this;\n    var myDate = new Date();\n    if ({}.toString.call(date).slice(8, -1).toLowerCase() === 'date') {\n        date = date.getTime();\n    }\n    myDate.setTime(date);\n    var obj = {\n        year: myDate.getFullYear(), // 年\n        month: self.fillZero(myDate.getMonth() + 1, 2), // 月\n        day: self.fillZero(myDate.getDate(), 2), // 日\n        hours: self.fillZero(myDate.getHours(), 2), // 时\n        minutes: self.fillZero(myDate.getMinutes(), 2), // 分\n        seconds: self.fillZero(myDate.getSeconds(), 2), // 秒\n        milliseconds: myDate.getMilliseconds(), // 毫秒\n        week1: '\\u661F\\u671F' + ['日', '一', '二', '三', '四', '五', '六'][myDate.getDay()], // 星期几\n        week2: '\\u5468' + ['日', '一', '二', '三', '四', '五', '六'][myDate.getDay()], // 周几\n        week3: '\\u793C\\u62DC' + ['日', '一', '二', '三', '四', '五', '六'][myDate.getDay()] // 礼拜几\n    };\n    Object.keys(obj).forEach(function (key) {\n        result = result.replace(new RegExp(key), obj[key]);\n    });\n    obj.result = result;\n    return obj;\n};\n// 输出\nmodule.exports = new Tools();\n\n/***/ }),\n\n/***/ 1:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar tools = __webpack_require__(0);\n\n// 应用方法集合\nfunction Applications() {}\n\n// 设置cookie\nApplications.prototype.setCookie = function (name, value, expires, domain, path, secure) {\n    var myDate = new Date();\n    var myTime = myDate.getTime();\n    myDate.setTime(myTime + expires * 24 * 60 * 60 * 1000); // 单位是天 1天 1/24天(1小时)\n    var cookie = name + '=' + value;\n    if (expires) {\n        cookie += '; expires=' + myDate;\n    }\n    if (domain) {\n        cookie += '; domain=' + domain;\n    }\n    if (path) {\n        cookie += '; path=' + path;\n    }\n    if (secure) {\n        cookie += '; secure=' + secure;\n    }\n    document.cookie = cookie;\n};\n// 获取cookie\nApplications.prototype.getCookie = function (name) {\n    var cookie = document.cookie;\n    var arr = cookie.split('; ');\n    var value = '';\n    arr.forEach(function (v) {\n        var arr2 = v.split('=');\n        if (arr2[0] === name) {\n            value = arr2[1];\n        }\n    });\n    return value;\n};\n// 清除cookie\nApplications.prototype.removeCookie = function (name, domain, path, secure) {\n    this.setCookie(name, '', -1, domain, path, secure);\n};\n// 创建元素节点\nApplications.prototype.createElement = function (json) {\n    var opts = json || {};\n    opts.elementName = opts.elementName || 'div'; // 标签名称\n    opts.style = opts.style || {}; // style样式\n    opts.customAttribute = opts.customAttribute || {}; // 自定义属性\n    opts.attribute = opts.attribute || {}; // 普通属性,checked,selected,innerHTML\n    var elementNode = document.createElement(opts.elementName); // 元素节点\n    Object.keys(opts.style).forEach(function (attr0) {\n        elementNode.style[attr0] = opts.style[attr0];\n    });\n    Object.keys(opts.customAttribute).forEach(function (attr1) {\n        elementNode.setAttribute('data-' + attr1, opts.customAttribute[attr1]);\n    });\n    Object.keys(opts.attribute).forEach(function (attr2) {\n        elementNode[attr2] = opts.attribute[attr2];\n    });\n    return elementNode;\n};\n// 加减操作\nApplications.prototype.addMinusInput = function (json) {\n    // 购物加减商品系列\n    if (!json) {\n        console.log('no find parameter');\n        return;\n    }\n    var noActiveClass = json.noActiveClass || 'on'; // 不能点的时候的class\n    var minNum = json.minNum === undefined ? 1 : json.minNum; // 最小数量\n    var add = json.add; // 加的按钮\n    var addCallback = json.addCallback; // 加的回调\n    var minus = json.minus; // 减少的按钮\n    var minusCallback = json.minusCallback; // 减少的回调\n    var overMinCallback = json.overMinCallback || function () {}; // 减少到最小值之后继续减少\n    var input = json.input; // 输入框的按钮\n    var blurCallback = json.blurCallback; // 失去焦点的回调\n    var inventoryNum = parseInt(json.inventoryNum); // 商品库存\n    var space = function space() {\n        if (input.value.trim() === '') {\n            input.value = minNum;\n        }\n    };\n    // 增加\n    add.onclick = function () {\n        space();\n        var num = parseInt(input.value);\n        num++;\n        input.value = num;\n        if (num >= inventoryNum) {\n            if (inventoryNum === 0) {\n                input.value = minNum;\n            } else {\n                input.value = inventoryNum;\n            }\n            add.classList.add(noActiveClass);\n        }\n        minus.classList.remove(noActiveClass);\n        if (addCallback) {\n            addCallback();\n        }\n    };\n    // 减少\n    minus.onclick = function () {\n        space();\n        var num = parseInt(input.value);\n        num--;\n        input.value = num;\n        if (num < minNum) {\n            input.value = minNum;\n            minus.classList.add(noActiveClass);\n            overMinCallback();\n        }\n        add.classList.remove(noActiveClass);\n        if (minusCallback) {\n            minusCallback();\n        }\n    };\n    // 获取焦点\n    input.onfocus = function () {\n        input.select();\n    };\n    // 失去焦点\n    input.onblur = function () {\n        space();\n        var num = parseInt(input.value);\n        if (isNaN(num)) {\n            num = minNum;\n        }\n        minus.classList.remove(noActiveClass);\n        add.classList.remove(noActiveClass);\n        if (num >= inventoryNum) {\n            input.value = inventoryNum;\n            add.classList.add(noActiveClass);\n        }\n        if (num <= minNum) {\n            input.value = minNum;\n            minus.classList.add(noActiveClass);\n        }\n        if (blurCallback) {\n            blurCallback();\n        }\n    };\n};\n// 获取原生的dom节点并转换成数组,传入的参数支持:1.原生的dom节点,2.原生的dom集合,3.css选择器\nApplications.prototype.getDomArray = function (element) {\n    var dom = [];\n    if (element) {\n        // 如果是字符串\n        if (Object.prototype.toString.call(element).slice(8, -1).toLowerCase() === 'string') {\n            dom = [].slice.call(document.querySelectorAll(element));\n        }\n        // 如果是dom节点(一个元素)    原生的\n        if (element.nodeType === 1) {\n            dom = [element];\n        }\n        /*\n         * 如果是dom集合(一组元素)    HtmlCollection(通过getElementsBy系列获取到的)\n         * 如果是dom集合(一组元素)    NodeList(通过querySelectorAll获取到的)\n         * */\n        if (Object.prototype.toString.call(element).slice(8, -1).toLowerCase() === 'htmlcollection' || Object.prototype.toString.call(element).slice(8, -1).toLowerCase() === 'nodelist') {\n            dom = [].slice.call(element);\n        }\n    }\n    return dom;\n};\n// 获取指定父级\nApplications.prototype.getParent = function (element, parentSelector) {\n    var self = this;\n    element = self.getDomArray(element)[0];\n    // 第一参数不符合规范\n    if (!element) {\n        console.log('第一个参数有误');\n        return null;\n    }\n    // 没有第二参数默认选取直接父级\n    if (!parentSelector) {\n        return element.parentNode;\n    }\n    if (typeof parentSelector === 'string') {\n        element = element.parentNode;\n        switch (parentSelector.charAt(0)) {\n            case '.':\n                // 通过class获取父级\n                while (element) {\n                    if (!element.classList) {\n                        // element === document\n                        console.log('no find class');\n                        return null;\n                    }\n                    if (element.classList.contains(parentSelector.substring(1))) {\n                        return element;\n                    }\n                    element = element.parentNode;\n                }\n                break;\n            case '#':\n                // 通过id获取父级\n                while (element) {\n                    if (element === document) {\n                        console.log('no find id');\n                        return null;\n                    }\n                    if (element.id === parentSelector.substring(1)) {\n                        return element;\n                    }\n                    element = element.parentNode;\n                }\n                break;\n            default:\n                // 通过标签名获取父级\n                while (element) {\n                    if (element === document) {\n                        console.log('no find tagName');\n                        return null;\n                    }\n                    if (element.tagName.toLowerCase() === parentSelector) {\n                        return element;\n                    }\n                    element = element.parentNode;\n                }\n                break;\n        }\n    }\n    return null;\n};\n// html转成DOM节点\nApplications.prototype.htmlToDom = function (html) {\n    var div = document.createElement('div');\n    div.innerHTML = html;\n    return div.children[0];\n};\n// 图片上传\nApplications.prototype.imgUploadBase64 = function () {\n    function Fn(json) {\n        this.opts = json || {};\n        // 如果没有选择文件的input,则不继续往下执行\n        if (!this.opts.input) {\n            console.log('no find input');\n            return;\n        }\n        // 一次上传限制几张图片\n        this.opts.limitNum = this.opts.limitNum || '5';\n        // 选择图片的回调\n        this.opts.changeCallback = this.opts.changeCallback || function () {\n            console.log('no find changeCallback');\n        };\n        // 把图片读取成base64编码的回调\n        this.opts.base64Callback = this.opts.base64Callback || function () {\n            console.log('no find base64Callback');\n        };\n        // 初始化\n        this.init();\n    }\n\n    Fn.prototype.init = function () {\n        // 渲染结构\n        this.render();\n        // 渲染功能\n        this.power();\n    };\n    Fn.prototype.render = function () {};\n    Fn.prototype.power = function () {\n        // 事件相关\n        this.events();\n    };\n    Fn.prototype.events = function () {\n        this.eventsInputChange();\n    };\n    Fn.prototype.eventsInputChange = function () {\n        var self = this;\n        var limitNum = this.opts.limitNum;\n        this.opts.input.addEventListener('change', function () {\n            var imagesNum = 0;\n            // 图片的相关信息\n            self.imgData = [];\n            var files = this.files;\n            var len = files.length;\n            for (var i = 0; i < len; i++) {\n                var f = files[i];\n                var isImages = /image/ig.test(f.type);\n                // 是图片\n                if (isImages) {\n                    if (imagesNum < limitNum) {\n                        // 小于限制几张图片的数量\n                        self.imgData.push(f);\n                        imagesNum++;\n                    } else {// 大于限制几张图片的数量\n\n                    }\n                }\n            }\n            self.opts.changeCallback({ imgData: self.imgData });\n            // 把图片读成base64编码\n            self.fileReadAsDataURL();\n        });\n    };\n    Fn.prototype.fileReadAsDataURL = function () {\n        var self = this;\n        this.imgData.forEach(function (v, i) {\n            var fileRender = new FileReader();\n            fileRender.readAsDataURL(v);\n            fileRender.addEventListener('load', function () {\n                self.opts.base64Callback({ base64: this.result, index: i });\n            });\n        });\n    };\n    return Fn;\n};\n// 是不是PC\nApplications.prototype.isPc = function () {\n    var userAgentInfo = navigator.userAgent;\n    var Agents = ['Android', 'iPhone', 'SymbianOS', 'Windows Phone', 'iPad', 'iPod'];\n    var flag = true;\n    for (var v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n};\n// 是不是微信\nApplications.prototype.isWeiXin = function () {\n    return navigator.userAgent.toLowerCase().match(/MicroMessenger/ig);\n};\n// 是不是android\nApplications.prototype.isAndroid = function () {\n    return window.navigator.appVersion.match(/android/ig);\n};\n// 是不是iphone\nApplications.prototype.isIphone = function () {\n    return window.navigator.appVersion.match(/iphone/ig);\n};\n// 获取元素距离文档的left和top\nApplications.prototype.offset = function (element) {\n    var self = this;\n    var top = 0;\n    var left = 0;\n    element = self.getDomArray(element)[0];\n    while (element) {\n        top += element.offsetTop;\n        left += element.offsetLeft;\n        element = element.offsetParent;\n    }\n    return {\n        top: top,\n        left: left\n    };\n};\n// 滚动到指定位置\nApplications.prototype.scrollToY = function () {\n    var to = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '0';\n\n    var scale = 6;\n    var scrollT = document.documentElement.scrollTop || document.body.scrollTop;\n    var speed = 0;\n    var timer = null;\n    var fn = function fn() {\n        speed = Math.ceil((scrollT - to) / scale);\n        scrollT -= speed;\n        window.scrollTo(0, scrollT);\n        timer = requestAnimationFrame(fn);\n        if (scrollT <= to * 1) {\n            cancelAnimationFrame(timer);\n        }\n    };\n    requestAnimationFrame(fn);\n};\n// 全选,不选,反选\nApplications.prototype.select = function () {\n    var self = this;\n\n    function Select(json) {\n        this.opts = tools.extend({\n            defaults: {\n                items: null, // 所有的被选项\n                callback: {\n                    click: function click() {}\n                }\n            },\n            inherits: json\n        });\n        this.itemsDom = self.getDomArray(this.opts.items); // 获取原生的dom节点并转换成数组\n        this.init();\n    }\n\n    // 初始化\n    Select.prototype.init = function () {\n        this.power();\n    };\n\n    // 不选\n    Select.prototype.selectNothing = function () {\n        this.itemsDom.forEach(function (v) {\n            v.checked = false;\n        });\n    };\n\n    // 全选\n    Select.prototype.selectAll = function () {\n        this.itemsDom.forEach(function (v) {\n            v.checked = true;\n        });\n    };\n\n    // 反选\n    Select.prototype.selectReverse = function () {\n        this.itemsDom.forEach(function (v) {\n            v.checked = !v.checked;\n        });\n    };\n\n    // 当某一项被选中时,是否全部选项都被选中了\n    Select.prototype.power = function () {\n        var self = this;\n        this.itemsDom.forEach(function (v1) {\n            v1.addEventListener('click', function () {\n                var isCheckedAll = true; // 是否全部的选项都被选中了(假设全部选中)\n                self.itemsDom.forEach(function (v2) {\n                    if (v2.checked === false) {\n                        isCheckedAll = false;\n                    }\n                });\n                self.opts.callback.click({ element: this, isCheckedAll: isCheckedAll });\n            });\n        });\n    };\n\n    return Select;\n};\n// 当滚动到了浏览器的底部\nApplications.prototype.whenScrollBottom = function () {\n    function WhenScrollBottom(json) {\n        this.opts = tools.extend({\n            defaults: {\n                callback: {\n                    success: function success() {},\n                    failure: function failure() {}\n                },\n                isInitRender: true, // 是否初始化的时候就进行渲染\n                interval: 80, // 函数节流时间(延迟时间)\n                errorHeight: 0 // 滚动到底部上面一定高度就算是滚动到底部了(误差高度)\n            },\n            inherits: json\n        });\n        this.isLoadOver = false; // 数据是否加载完毕\n        this.init();\n    }\n\n    WhenScrollBottom.prototype.init = function () {\n        if (this.opts.isInitRender) {\n            this.render();\n        }\n        this.power();\n    };\n\n    WhenScrollBottom.prototype.render = function () {\n        var callback = this.opts.callback;\n        var allH = document.body.scrollHeight;\n        var scrollTop = document.documentElement.scrollTop || document.body.scrollTop;\n        var clientHeight = document.documentElement.clientHeight;\n        if (scrollTop + clientHeight >= allH - this.opts.errorHeight && !this.isLoadOver) {\n            callback.success(this);\n        } else {\n            callback.failure();\n        }\n    };\n\n    // 数据加载完毕\n    WhenScrollBottom.prototype.dataLoadOver = function () {\n        this.isLoadOver = true;\n        // 数据加载完毕,手动调用这个方法,或者手动把isLoadOver属性变成true,建议掉方法\n    };\n\n    WhenScrollBottom.prototype.power = function () {\n        var self = this;\n        var timer = null;\n        window.addEventListener('scroll', function () {\n            clearTimeout(timer);\n            timer = setTimeout(function () {\n                self.render();\n            }, self.opts.interval);\n        });\n    };\n    return WhenScrollBottom;\n};\n// 是否禁止浏览器滚动\nApplications.prototype.whetherDisableScroll = function () {\n    return {\n        // 阻止冒泡\n        stopPropagation: function stopPropagation(ev) {\n            ev.stopPropagation();\n        },\n        // 阻止默认事件\n        preventDefault: function preventDefault(ev) {\n            ev.preventDefault();\n        },\n        // 阻止冒泡,阻止默认事件\n        returnFalse: function returnFalse(ev) {\n            ev.preventDefault();\n            ev.stopPropagation();\n        },\n        // 禁止滚动\n        noScroll: function noScroll() {\n            document.addEventListener('touchmove', this.preventDefault, false);\n            document.documentElement.style.overflow = 'hidden';\n        },\n        // 解除禁止浏览器滚动\n        yesScroll: function yesScroll() {\n            document.removeEventListener('touchmove', this.preventDefault, false);\n            document.documentElement.style.overflow = 'auto';\n        }\n    };\n};\n\nmodule.exports = new Applications();\n\n/***/ }),\n\n/***/ 28:\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(0);\nmodule.exports = __webpack_require__(1);\n\n\n/***/ })\n\n},[28]);\n\n\n// WEBPACK FOOTER //\n// static/js/pages/this-is-global-file-common.c576c02645882b63eb16.js","// 工具方法集合\nfunction Tools() {\n}\n\n/**\n * @description 判断类型\n * @param {*} whatever - 任何类型的数据都可以\n * */\nTools.prototype.typeOf = function (whatever) {\n    return Object.prototype.toString.call(whatever).slice(8, -1).toLowerCase();\n};\n// 对象扩展\nTools.prototype.extend = function (json) {\n    const self = this;\n    const opts = json || {};\n    opts.defaults = opts.defaults || {};// 默认对象\n    opts.inherits = opts.inherits || {};// 继承对像\n    opts.isDeep = opts.isDeep === false ? opts.isDeep : true;// 是否进行深拷贝(默认进行深拷贝)\n    const defaultsType = Object.prototype.toString.call(opts.defaults).slice(8, -1).toLowerCase();\n    const inheritsType = Object.prototype.toString.call(opts.inherits).slice(8, -1).toLowerCase();\n    if (defaultsType === inheritsType && opts.isDeep) {\n        if (defaultsType === 'object' || defaultsType === 'array') { // 当为对象或者为数组\n            Object.keys(opts.inherits).forEach(function (attr) {\n                const attrDefaultsType = Object.prototype.toString.call(opts.defaults[attr]).slice(8, -1).toLowerCase();\n                const attrInheritsType = Object.prototype.toString.call(opts.inherits[attr]).slice(8, -1).toLowerCase();\n                if (attrDefaultsType === attrInheritsType && opts.isDeep) { // 类型相同\n                    if (attrDefaultsType === 'object' || attrDefaultsType === 'array') { // 当为对象或者为数组\n                        self.extend({defaults: opts.defaults[attr], inherits: opts.inherits[attr]});\n                    } else {\n                        opts.defaults[attr] = opts.inherits[attr];\n                    }\n                } else { // 类型不同,直接后面的覆盖前面的\n                    opts.defaults[attr] = opts.inherits[attr];\n                }\n            });\n        } else {\n            opts.defaults = opts.inherits;\n        }\n    } else {\n        opts.defaults = opts.inherits;\n    }\n    return opts.defaults;\n};\n/**\n * @description 对象移除引用\n * @param {Object} obj - 参数需要是一个对象或者是一个数组,这里一定不能给默认值,否则undefined就没了\n * */\nTools.prototype.objRemoveQuote = function (obj) {\n    const self = this;\n    const objType = Object.prototype.toString.call(obj).slice(8, -1).toLowerCase();\n    if (objType !== 'object' && objType !== 'array') {\n        return obj;\n    }\n    let newObj = {};\n    if (objType === 'array') {\n        newObj = [];\n    }\n    Object.keys(obj).forEach(function (attr) {\n        newObj[attr] = self.objRemoveQuote(obj[attr]);\n    });\n    return newObj;\n};\n/**\n * @description 面向对象继承\n * @param {Function} Super - 继承自某个超类型(这个必须传的是一个构造函数)\n * @param {Object} parameter - 子类型的参数(这个必须传的是一个对象)\n * */\nTools.prototype.constructorInherit = function (Super, parameter = {}) {\n    const self = this;\n\n    // 如果超类型不存在\n    if (Object.prototype.toString.call(Super).toLowerCase().slice(8, -1) !== 'function') {\n        console.log('no find Super or Super error');\n        return false;\n    }\n\n    // 子类型\n    function Sub(json) {\n        // 子类型继承超类型的属性\n        Super.call(this, self.extend({\n            /*\n             * 注意:\n             * defaults要防止对象的引用(如果不防止的话,会出现BUG)\n             * 例如 wrap的默认值是'.g-wrap'\n             * 第一次   var obj1=new Sub({wrap:'body'});   wrap的值是'body'\n             * 第二次   var obj2=new Sub();    这里按理说wrap的值应该是默认值'.g-wrap'\n             * 但是由于对象引用的原因,这里的值会变成'body'\n             * 因此这里要处理掉对象的引用,所以我使用了JSON的方法进行了阻止\n             * 但是JSON.stringify方法居然会过滤掉对象内部的所有函数,真是日了狗了\n             * 所以我就封装了一个移除对象引用的函数\n             * */\n            defaults: self.objRemoveQuote(parameter),\n            inherits: json,\n        }));\n    }\n\n    // 子类型继承超类型的方法\n    Object.keys(Super.prototype).forEach(function (attr) {\n        Sub.prototype[attr] = Super.prototype[attr];\n    });\n\n    return Sub;\n};\n// 数组去重\nTools.prototype.arrayRemoveRepeat = function (array) {\n    const self = this;\n    array = self.typeOf(array) === 'array' ? array : [];\n    const newArray = [];\n    array.forEach(function (v) {\n        if (newArray.indexOf(v) === -1) {\n            newArray.push(v);\n        }\n    });\n    return newArray;\n};\n/**\n * @description 秒转时间\n * @param {Number} seconds - 秒数\n * */\nTools.prototype.secondsToTime = function (seconds = 0) {\n    // 天\n    const nowDay = Math.floor(seconds / 3600 / 24);\n    // 时\n    const nowHours = Math.floor(seconds / 3600 % 24);\n    // 分\n    const nowMinutes = Math.floor(seconds % 3600 / 60);\n    // 秒\n    const nowSeconds = Math.floor(seconds % 60);\n    return {day: nowDay, hours: nowHours, minutes: nowMinutes, seconds: nowSeconds};\n};\n// 倒计时\nTools.prototype.timeCountDown = function (json) {\n    const self = this;\n    const opts = self.extend({\n        defaults: {\n            seconds: 0,\n            isToTime: true, // 是否转换成时间\n            callback: {\n                run: function () {\n                },\n                over: function () {\n                },\n            },\n        },\n        inherits: json,\n    });\n    let seconds = opts.seconds;// 秒数\n    const run = opts.callback.run;// 运行的回调\n    const over = opts.callback.over;// 结束的回调\n    // 时间大于等于0秒\n    if (seconds >= 0) {\n        if (opts.isToTime) {\n            run(self.secondsToTime(seconds));// 运行时的回调\n        } else {\n            run({day: 0, hours: 0, minutes: 0, seconds: seconds});// 运行时的回调\n        }\n        // 倒计时走你\n        const timer = setInterval(function () {\n            seconds--;\n            if (seconds >= 0) {\n                if (opts.isToTime) {\n                    run(self.secondsToTime(seconds));// 运行时的回调\n                } else {\n                    run({day: 0, hours: 0, minutes: 0, seconds: seconds});// 运行时的回调\n                }\n            } else {\n                over();// 结束时的回调\n                clearInterval(timer);\n            }\n        }, 1000);\n    }\n    // 时间小于0秒\n    if (seconds < 0) {\n        console.log('倒计时的秒数不能小于0');\n    }\n};\n/**\n * @description 字符串限制最大长度\n * @param {String} str - 字符串\n * @param {Number} maxLength - 限制最大长度\n * */\nTools.prototype.strLimitLength = function (str, maxLength) {\n    if (!str) {\n        return '';\n    }\n    if (Number(str.length) > maxLength) {\n        str = str.substring(0, maxLength);\n    }\n    return str;\n};\n/**\n * @description json转数组\n * @param {Object} json - json格式的对象{}\n * */\nTools.prototype.jsonToArray = function (json = {}) {\n    const arr = [];\n    if (json instanceof Array) {\n        json.forEach(function (v, i) {\n            arr.push({key: i, value: v});\n        });\n    } else {\n        Object.keys(json).forEach(function (attr) {\n            arr.push({key: attr, value: json[attr]});\n        });\n    }\n    return arr;\n};\n/**\n * @description 补零函数\n * @param {Number} value - 数字\n * @param {Number} place - 这个数字是个几位数的数字,如果是个3位数的数字,不足三位,则补0\n * */\nTools.prototype.fillZero = function (value = 0, place = 2) {\n    const valueLen = value.toString().length;\n    const zeroLen = place - valueLen;\n    const arr = [];\n    for (let i = 0; i < zeroLen; i++) {\n        arr.push('0');\n    }\n    const zero = arr.join('');\n    if (value < Math.pow(10, place)) {\n        return `${zero}${value}`;\n    }\n    return `${value}`;\n};\n// px转rem\nTools.prototype.px2rem = function (px = 0, base = 320) {\n    return `${px / base * 10}rem`;\n};\n/**\n * @description 字符串转驼峰\n * @param {String} str - 字符串\n * @param {String} rule - 规则\n * */\nTools.prototype.strToHump = function (str, rule = '-') {\n    const self = this;\n    const type = self.typeOf(str);\n    if (type === 'string') {\n        const arr = str.split(rule);\n        arr.forEach(function (v, i) {\n            if (i !== 0) {\n                if (arr[i][0]) {\n                    arr[i] = arr[i][0].toUpperCase() + arr[i].substring(1);\n                }\n            }\n        });\n        str = arr.join('');\n    } else {\n        console.log('参数错误,请输入字符串');\n    }\n    return str;\n};\n// 获取随机数\nTools.prototype.getRandom = function (min, max) {\n    const self = this;\n    min = self.typeOf(min) === 'number' ? min : 0;\n    max = self.typeOf(max) === 'number' ? max : 1;\n    return Math.round(Math.random() * (max - min) + min);\n};\n// 是不是空字符串\nTools.prototype.isEmpty = function (value) {\n    return value.toString().trim() === '';\n};\n// 是不是数字0\nTools.prototype.isZero = function (value) {\n    return Number(value) === 0;\n};\n// 是不是正整数\nTools.prototype.isPositiveInteger = function (value) {\n    const reg = /^[1-9]\\d*$/;\n    return reg.test(value);\n};\n// 是不是保留了place位小数(默认两位)\nTools.prototype.isKeepDecimal = function (value, place = 2) {\n    const reg = new RegExp(`^\\\\d+\\\\.\\\\d{${place}}$`);\n    return reg.test(value);\n};\n// 是不是手机号\nTools.prototype.isPhoneNum = function (value) {\n    const reg = /^1[3458][0-9]\\d{4,8}$/;\n    return reg.test(value);\n};\n// 是不是邮箱\nTools.prototype.isEmail = function (value) {\n    const reg = /^([0-9A-Za-z\\-_.]+)@([0-9a-z]+\\.[a-z]{2,3}(\\.[a-z]{2})?)$/g;\n    return reg.test(value);\n};\n// {a:1,b:2} 序列成 'a=1&b=2'\nTools.prototype.queryStringify = function (obj = {}) {\n    const self = this;\n    const result = [];\n    Object.keys(obj).forEach(function (key) {\n        const vType = self.typeOf(obj[key]);\n        if (vType === 'object' || vType === 'array') {\n            result.push(`${key}=${JSON.stringify(obj[key])}`);\n        } else {\n            result.push(`${key}=${obj[key]}`);\n        }\n    });\n    return result.join('&');\n};\n// 'a=1&b=2' 解析成 {a:1,b:2}\nTools.prototype.queryParse = function (str) {\n    const result = {};\n    if (str) {\n        str.split('&').forEach(function (v) {\n            const arr = v.split('=');\n            try {\n                result[arr[0]] = JSON.parse(arr[1]);\n            } catch (e) {\n                result[arr[0]] = arr[1];\n            }\n        });\n    }\n    return result;\n};\n/**\n * @description 保留几位小数\n * @param {Number} value - 数字\n * @param {Number} place - 保留几位小数(默认两位)\n * @param {Boolean} isFormat - 是否格式化(默认格式化)\n * */\nTools.prototype.keepDecimal = function (value = 0, place = 2, isFormat = true) {\n    const format = /(?!\\b)(?=(\\d{3})+$)/;\n    let result = value;\n    const baseNum = Math.pow(10, place);\n    if (Number(place) !== 0) {\n        result = (Math.floor(parseFloat(value) * baseNum) / baseNum).toFixed(2);\n    }\n    if (isFormat) {\n        const arr = result.split('.');\n        arr[0] = arr[0].replace(format, ',');\n        result = arr.join('.');\n    }\n    return result;\n};\n/**\n * @description 日期格式化\n * @param {Number} date - 毫秒数\n * @param {String} result - 'year/month/day hours:minutes:seconds' - 格式\n * */\nTools.prototype.dateFormat = function (date = 0, result = 'year/month/day hours:minutes:seconds') {\n    const self = this;\n    const myDate = new Date();\n    if ({}.toString.call(date).slice(8, -1).toLowerCase() === 'date') {\n        date = date.getTime();\n    }\n    myDate.setTime(date);\n    const obj = {\n        year: myDate.getFullYear(), // 年\n        month: self.fillZero(myDate.getMonth() + 1, 2), // 月\n        day: self.fillZero(myDate.getDate(), 2), // 日\n        hours: self.fillZero(myDate.getHours(), 2), // 时\n        minutes: self.fillZero(myDate.getMinutes(), 2), // 分\n        seconds: self.fillZero(myDate.getSeconds(), 2), // 秒\n        milliseconds: myDate.getMilliseconds(), // 毫秒\n        week1: `星期${['日', '一', '二', '三', '四', '五', '六'][myDate.getDay()]}`, // 星期几\n        week2: `周${['日', '一', '二', '三', '四', '五', '六'][myDate.getDay()]}`, // 周几\n        week3: `礼拜${['日', '一', '二', '三', '四', '五', '六'][myDate.getDay()]}`, // 礼拜几\n    };\n    Object.keys(obj).forEach(function (key) {\n        result = result.replace(new RegExp(key), obj[key]);\n    });\n    obj.result = result;\n    return obj;\n};\n// 输出\nmodule.exports = new Tools();\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/tools.js","const tools = require('./tools');\n\n// 应用方法集合\nfunction Applications() {\n}\n\n// 设置cookie\nApplications.prototype.setCookie = function (name, value, expires, domain, path, secure) {\n    const myDate = new Date();\n    const myTime = myDate.getTime();\n    myDate.setTime(myTime + expires * 24 * 60 * 60 * 1000); // 单位是天 1天 1/24天(1小时)\n    let cookie = `${name}=${value}`;\n    if (expires) {\n        cookie += `; expires=${myDate}`;\n    }\n    if (domain) {\n        cookie += `; domain=${domain}`;\n    }\n    if (path) {\n        cookie += `; path=${path}`;\n    }\n    if (secure) {\n        cookie += `; secure=${secure}`;\n    }\n    document.cookie = cookie;\n};\n// 获取cookie\nApplications.prototype.getCookie = function (name) {\n    const cookie = document.cookie;\n    const arr = cookie.split('; ');\n    let value = '';\n    arr.forEach(function (v) {\n        const arr2 = v.split('=');\n        if (arr2[0] === name) {\n            value = arr2[1];\n        }\n    });\n    return value;\n};\n// 清除cookie\nApplications.prototype.removeCookie = function (name, domain, path, secure) {\n    this.setCookie(name, '', -1, domain, path, secure);\n};\n// 创建元素节点\nApplications.prototype.createElement = function (json) {\n    const opts = json || {};\n    opts.elementName = opts.elementName || 'div';// 标签名称\n    opts.style = opts.style || {};// style样式\n    opts.customAttribute = opts.customAttribute || {};// 自定义属性\n    opts.attribute = opts.attribute || {};// 普通属性,checked,selected,innerHTML\n    const elementNode = document.createElement(opts.elementName);// 元素节点\n    Object.keys(opts.style).forEach(function (attr0) {\n        elementNode.style[attr0] = opts.style[attr0];\n    });\n    Object.keys(opts.customAttribute).forEach(function (attr1) {\n        elementNode.setAttribute(`data-${attr1}`, opts.customAttribute[attr1]);\n    });\n    Object.keys(opts.attribute).forEach(function (attr2) {\n        elementNode[attr2] = opts.attribute[attr2];\n    });\n    return elementNode;\n};\n// 加减操作\nApplications.prototype.addMinusInput = function (json) { // 购物加减商品系列\n    if (!json) {\n        console.log('no find parameter');\n        return;\n    }\n    const noActiveClass = json.noActiveClass || 'on';// 不能点的时候的class\n    const minNum = json.minNum === undefined ? 1 : json.minNum;// 最小数量\n    const add = json.add;// 加的按钮\n    const addCallback = json.addCallback;// 加的回调\n    const minus = json.minus;// 减少的按钮\n    const minusCallback = json.minusCallback;// 减少的回调\n    const overMinCallback = json.overMinCallback || function () {\n    };// 减少到最小值之后继续减少\n    const input = json.input;// 输入框的按钮\n    const blurCallback = json.blurCallback;// 失去焦点的回调\n    const inventoryNum = parseInt(json.inventoryNum);// 商品库存\n    const space = function () {\n        if (input.value.trim() === '') {\n            input.value = minNum;\n        }\n    };\n    // 增加\n    add.onclick = function () {\n        space();\n        let num = parseInt(input.value);\n        num++;\n        input.value = num;\n        if (num >= inventoryNum) {\n            if (inventoryNum === 0) {\n                input.value = minNum;\n            } else {\n                input.value = inventoryNum;\n            }\n            add.classList.add(noActiveClass);\n        }\n        minus.classList.remove(noActiveClass);\n        if (addCallback) {\n            addCallback();\n        }\n    };\n    // 减少\n    minus.onclick = function () {\n        space();\n        let num = parseInt(input.value);\n        num--;\n        input.value = num;\n        if (num < minNum) {\n            input.value = minNum;\n            minus.classList.add(noActiveClass);\n            overMinCallback();\n        }\n        add.classList.remove(noActiveClass);\n        if (minusCallback) {\n            minusCallback();\n        }\n    };\n    // 获取焦点\n    input.onfocus = function () {\n        input.select();\n    };\n    // 失去焦点\n    input.onblur = function () {\n        space();\n        let num = parseInt(input.value);\n        if (isNaN(num)) {\n            num = minNum;\n        }\n        minus.classList.remove(noActiveClass);\n        add.classList.remove(noActiveClass);\n        if (num >= inventoryNum) {\n            input.value = inventoryNum;\n            add.classList.add(noActiveClass);\n        }\n        if (num <= minNum) {\n            input.value = minNum;\n            minus.classList.add(noActiveClass);\n        }\n        if (blurCallback) {\n            blurCallback();\n        }\n    };\n};\n// 获取原生的dom节点并转换成数组,传入的参数支持:1.原生的dom节点,2.原生的dom集合,3.css选择器\nApplications.prototype.getDomArray = function (element) {\n    let dom = [];\n    if (element) {\n        // 如果是字符串\n        if (Object.prototype.toString.call(element).slice(8, -1).toLowerCase() === 'string') {\n            dom = [].slice.call(document.querySelectorAll(element));\n        }\n        // 如果是dom节点(一个元素)    原生的\n        if (element.nodeType === 1) {\n            dom = [element];\n        }\n        /*\n         * 如果是dom集合(一组元素)    HtmlCollection(通过getElementsBy系列获取到的)\n         * 如果是dom集合(一组元素)    NodeList(通过querySelectorAll获取到的)\n         * */\n        if (Object.prototype.toString.call(element).slice(8, -1).toLowerCase() === 'htmlcollection' || Object.prototype.toString.call(element).slice(8, -1).toLowerCase() === 'nodelist') {\n            dom = [].slice.call(element);\n        }\n    }\n    return dom;\n};\n// 获取指定父级\nApplications.prototype.getParent = function (element, parentSelector) {\n    const self = this;\n    element = self.getDomArray(element)[0];\n    // 第一参数不符合规范\n    if (!element) {\n        console.log('第一个参数有误');\n        return null;\n    }\n    // 没有第二参数默认选取直接父级\n    if (!parentSelector) {\n        return element.parentNode;\n    }\n    if (typeof parentSelector === 'string') {\n        element = element.parentNode;\n        switch (parentSelector.charAt(0)) {\n            case '.':// 通过class获取父级\n                while (element) {\n                    if (!element.classList) { // element === document\n                        console.log('no find class');\n                        return null;\n                    }\n                    if (element.classList.contains(parentSelector.substring(1))) {\n                        return element;\n                    }\n                    element = element.parentNode;\n                }\n                break;\n            case '#':// 通过id获取父级\n                while (element) {\n                    if (element === document) {\n                        console.log('no find id');\n                        return null;\n                    }\n                    if (element.id === parentSelector.substring(1)) {\n                        return element;\n                    }\n                    element = element.parentNode;\n                }\n                break;\n            default:// 通过标签名获取父级\n                while (element) {\n                    if (element === document) {\n                        console.log('no find tagName');\n                        return null;\n                    }\n                    if (element.tagName.toLowerCase() === parentSelector) {\n                        return element;\n                    }\n                    element = element.parentNode;\n                }\n                break;\n        }\n    }\n    return null;\n};\n// html转成DOM节点\nApplications.prototype.htmlToDom = function (html) {\n    const div = document.createElement('div');\n    div.innerHTML = html;\n    return div.children[0];\n};\n// 图片上传\nApplications.prototype.imgUploadBase64 = function () {\n    function Fn(json) {\n        this.opts = json || {};\n        // 如果没有选择文件的input,则不继续往下执行\n        if (!this.opts.input) {\n            console.log('no find input');\n            return;\n        }\n        // 一次上传限制几张图片\n        this.opts.limitNum = this.opts.limitNum || '5';\n        // 选择图片的回调\n        this.opts.changeCallback = this.opts.changeCallback || function () {\n            console.log('no find changeCallback');\n        };\n        // 把图片读取成base64编码的回调\n        this.opts.base64Callback = this.opts.base64Callback || function () {\n            console.log('no find base64Callback');\n        };\n        // 初始化\n        this.init();\n    }\n\n    Fn.prototype.init = function () {\n        // 渲染结构\n        this.render();\n        // 渲染功能\n        this.power();\n    };\n    Fn.prototype.render = function () {\n\n    };\n    Fn.prototype.power = function () {\n        // 事件相关\n        this.events();\n    };\n    Fn.prototype.events = function () {\n        this.eventsInputChange();\n    };\n    Fn.prototype.eventsInputChange = function () {\n        const self = this;\n        const limitNum = this.opts.limitNum;\n        this.opts.input.addEventListener('change', function () {\n            let imagesNum = 0;\n            // 图片的相关信息\n            self.imgData = [];\n            const files = this.files;\n            const len = files.length;\n            for (let i = 0; i < len; i++) {\n                const f = files[i];\n                const isImages = /image/ig.test(f.type);\n                // 是图片\n                if (isImages) {\n                    if (imagesNum < limitNum) { // 小于限制几张图片的数量\n                        self.imgData.push(f);\n                        imagesNum++;\n                    } else { // 大于限制几张图片的数量\n\n                    }\n                }\n            }\n            self.opts.changeCallback({imgData: self.imgData});\n            // 把图片读成base64编码\n            self.fileReadAsDataURL();\n        });\n    };\n    Fn.prototype.fileReadAsDataURL = function () {\n        const self = this;\n        this.imgData.forEach(function (v, i) {\n            const fileRender = new FileReader();\n            fileRender.readAsDataURL(v);\n            fileRender.addEventListener('load', function () {\n                self.opts.base64Callback({base64: this.result, index: i});\n            });\n        });\n    };\n    return Fn;\n};\n// 是不是PC\nApplications.prototype.isPc = function () {\n    const userAgentInfo = navigator.userAgent;\n    const Agents = ['Android', 'iPhone', 'SymbianOS', 'Windows Phone', 'iPad', 'iPod'];\n    let flag = true;\n    for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n};\n// 是不是微信\nApplications.prototype.isWeiXin = function () {\n    return navigator.userAgent.toLowerCase().match(/MicroMessenger/ig);\n};\n// 是不是android\nApplications.prototype.isAndroid = function () {\n    return window.navigator.appVersion.match(/android/ig);\n};\n// 是不是iphone\nApplications.prototype.isIphone = function () {\n    return window.navigator.appVersion.match(/iphone/ig);\n};\n// 获取元素距离文档的left和top\nApplications.prototype.offset = function (element) {\n    const self = this;\n    let top = 0;\n    let left = 0;\n    element = self.getDomArray(element)[0];\n    while (element) {\n        top += element.offsetTop;\n        left += element.offsetLeft;\n        element = element.offsetParent;\n    }\n    return {\n        top: top,\n        left: left,\n    };\n};\n// 滚动到指定位置\nApplications.prototype.scrollToY = function (to = '0') {\n    const scale = 6;\n    let scrollT = document.documentElement.scrollTop || document.body.scrollTop;\n    let speed = 0;\n    let timer = null;\n    const fn = function () {\n        speed = Math.ceil((scrollT - to) / scale);\n        scrollT -= speed;\n        window.scrollTo(0, scrollT);\n        timer = requestAnimationFrame(fn);\n        if (scrollT <= to * 1) {\n            cancelAnimationFrame(timer);\n        }\n    };\n    requestAnimationFrame(fn);\n};\n// 全选,不选,反选\nApplications.prototype.select = function () {\n    const self = this;\n\n    function Select(json) {\n        this.opts = tools.extend({\n            defaults: {\n                items: null, // 所有的被选项\n                callback: {\n                    click: function () {\n                    },\n                },\n            },\n            inherits: json,\n        });\n        this.itemsDom = self.getDomArray(this.opts.items);// 获取原生的dom节点并转换成数组\n        this.init();\n    }\n\n    // 初始化\n    Select.prototype.init = function () {\n        this.power();\n    };\n\n    // 不选\n    Select.prototype.selectNothing = function () {\n        this.itemsDom.forEach(function (v) {\n            v.checked = false;\n        });\n    };\n\n    // 全选\n    Select.prototype.selectAll = function () {\n        this.itemsDom.forEach(function (v) {\n            v.checked = true;\n        });\n    };\n\n    // 反选\n    Select.prototype.selectReverse = function () {\n        this.itemsDom.forEach(function (v) {\n            v.checked = !v.checked;\n        });\n    };\n\n    // 当某一项被选中时,是否全部选项都被选中了\n    Select.prototype.power = function () {\n        const self = this;\n        this.itemsDom.forEach(function (v1) {\n            v1.addEventListener('click', function () {\n                let isCheckedAll = true;// 是否全部的选项都被选中了(假设全部选中)\n                self.itemsDom.forEach(function (v2) {\n                    if (v2.checked === false) {\n                        isCheckedAll = false;\n                    }\n                });\n                self.opts.callback.click({element: this, isCheckedAll: isCheckedAll});\n            });\n        });\n    };\n\n    return Select;\n};\n// 当滚动到了浏览器的底部\nApplications.prototype.whenScrollBottom = function () {\n    function WhenScrollBottom(json) {\n        this.opts = tools.extend({\n            defaults: {\n                callback: {\n                    success: function () {\n                    },\n                    failure: function () {\n                    },\n                },\n                isInitRender: true, // 是否初始化的时候就进行渲染\n                interval: 80, // 函数节流时间(延迟时间)\n                errorHeight: 0, // 滚动到底部上面一定高度就算是滚动到底部了(误差高度)\n            },\n            inherits: json,\n        });\n        this.isLoadOver = false;// 数据是否加载完毕\n        this.init();\n    }\n\n    WhenScrollBottom.prototype.init = function () {\n        if (this.opts.isInitRender) {\n            this.render();\n        }\n        this.power();\n    };\n\n    WhenScrollBottom.prototype.render = function () {\n        const callback = this.opts.callback;\n        const allH = document.body.scrollHeight;\n        const scrollTop = document.documentElement.scrollTop || document.body.scrollTop;\n        const clientHeight = document.documentElement.clientHeight;\n        if (scrollTop + clientHeight >= allH - this.opts.errorHeight && !this.isLoadOver) {\n            callback.success(this);\n        } else {\n            callback.failure();\n        }\n    };\n\n    // 数据加载完毕\n    WhenScrollBottom.prototype.dataLoadOver = function () {\n        this.isLoadOver = true;\n        // 数据加载完毕,手动调用这个方法,或者手动把isLoadOver属性变成true,建议掉方法\n    };\n\n    WhenScrollBottom.prototype.power = function () {\n        const self = this;\n        let timer = null;\n        window.addEventListener('scroll', function () {\n            clearTimeout(timer);\n            timer = setTimeout(function () {\n                self.render();\n            }, self.opts.interval);\n        });\n    };\n    return WhenScrollBottom;\n};\n// 是否禁止浏览器滚动\nApplications.prototype.whetherDisableScroll = function () {\n    return {\n        // 阻止冒泡\n        stopPropagation: function (ev) {\n            ev.stopPropagation();\n        },\n        // 阻止默认事件\n        preventDefault: function (ev) {\n            ev.preventDefault();\n        },\n        // 阻止冒泡,阻止默认事件\n        returnFalse: function (ev) {\n            ev.preventDefault();\n            ev.stopPropagation();\n        },\n        // 禁止滚动\n        noScroll: function () {\n            document.addEventListener('touchmove', this.preventDefault, false);\n            document.documentElement.style.overflow = 'hidden';\n        },\n        // 解除禁止浏览器滚动\n        yesScroll: function () {\n            document.removeEventListener('touchmove', this.preventDefault, false);\n            document.documentElement.style.overflow = 'auto';\n        },\n    };\n};\n\nmodule.exports = new Applications();\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/applications.js"],"sourceRoot":""}